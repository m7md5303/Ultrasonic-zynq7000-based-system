Coverage Report by instance with details

=================================================================================
=== Instance: /top/gold_if
=== Design Unit: work.golden_inter_ref
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         94        86         8    91.48%

================================Toggle Details================================

Toggle Coverage for instance /top/gold_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          no_order           1           1      100.00 
                                   outputDAC[11-4]           1           1      100.00 
                                    outputDAC[3-0]           0           0        0.00 
                               received_data[31-0]           1           1      100.00 
                                             rst_n           1           1      100.00 

Total Node Count     =         47 
Toggled Node Count   =         43 
Untoggled Node Count =          4 

Toggle Coverage      =      91.48% (86 of 94 bins)

=================================================================================
=== Instance: /top/sonarif
=== Design Unit: work.sonar_inter
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        160        86        74    53.75%

================================Toggle Details================================

Toggle Coverage for instance /top/sonarif --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          no_order           1           1      100.00 
                                   outputDAC[11-4]           1           1      100.00 
                                    outputDAC[3-0]           0           0        0.00 
                                             rd_en           0           0        0.00 
                                     read_add[6-0]           0           0        0.00 
                                   read_data[24-0]           0           0        0.00 
                               received_data[31-0]           1           1      100.00 
                                             rst_n           1           1      100.00 

Total Node Count     =         80 
Toggled Node Count   =         43 
Untoggled Node Count =         37 

Toggle Coverage      =      53.75% (86 of 160 bins)

=================================================================================
=== Instance: /top/DUT/buf_top/fifo_inst
=== Design Unit: work.FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        18        15         3    83.33%

================================Branch Details================================

Branch Coverage for instance /top/DUT/buf_top/fifo_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    43                                      1067     Count coming in to IF
    43              1                        483         if (!rst_n) begin
    49              1                    ***0***         else if (wr_en && (count < FIFO_DEPTH)) begin
    55              1                        584         else begin 
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    58                                       584     Count coming in to IF
    58              1                    ***0***           if (full && wr_en)
    60              1                        584           else
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    66                                      1069     Count coming in to IF
    66              1                        483         if (!rst_n) begin
    71              1                        100         else if (rd_en && count != 0) begin
    78              1                        486         else begin  
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                       486     Count coming in to IF
    80              1                    ***0***           if (empty && rd_en)
    82              1                        486           else
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    87                                       101     Count coming in to IF
    87              1                          1       assign full = (count === FIFO_DEPTH) ? 1 : 0;
    87              2                        100       assign full = (count === FIFO_DEPTH) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                       101     Count coming in to IF
    88              1                          1       assign empty = (count === 0) ? 1 : 0;
    88              2                        100       assign empty = (count === 0) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    89                                       101     Count coming in to IF
    89              1                          1       assign almostfull = (count === FIFO_DEPTH-1) ? 1 : 0; 
    89              2                        100       assign almostfull = (count === FIFO_DEPTH-1) ? 1 : 0; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    90                                       101     Count coming in to IF
    90              1                          1       assign almostempty = (count === 1) ? 1 : 0;
    90              2                        100       assign almostempty = (count === 1) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      12         5         7    41.66%

================================Condition Details================================

Condition Coverage for instance /top/DUT/buf_top/fifo_inst --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       49 Item    1  (wr_en && (count < 100))
Condition totals: 0 of 2 input terms covered = 0.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
          wr_en         N  No hits                  Hit '_0' and '_1'
  (count < 100)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  wr_en_0               -                             
  Row   2:    ***0***  wr_en_1               (count < 100)                 
  Row   3:    ***0***  (count < 100)_0       wr_en                         
  Row   4:    ***0***  (count < 100)_1       wr_en                         

----------------Focused Condition View-------------------
Line       58 Item    1  (full && wr_en)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        full         N  '_1' not hit             Hit '_1'
       wr_en         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  full_0                -                             
  Row   2:    ***0***  full_1                wr_en                         
  Row   3:    ***0***  wr_en_0               full                          
  Row   4:    ***0***  wr_en_1               full                          

----------------Focused Condition View-------------------
Line       71 Item    1  (rd_en && (count != 0))
Condition totals: 1 of 2 input terms covered = 50.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
         rd_en         Y
  (count != 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               (count != 0)                  
  Row   3:    ***0***  (count != 0)_0        rd_en                         
  Row   4:          1  (count != 0)_1        rd_en                         

----------------Focused Condition View-------------------
Line       80 Item    1  (empty && rd_en)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       empty         N  '_1' not hit             Hit '_1'
       rd_en         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  empty_0               -                             
  Row   2:    ***0***  empty_1               rd_en                         
  Row   3:          1  rd_en_0               empty                         
  Row   4:    ***0***  rd_en_1               empty                         

----------------Focused Condition View-------------------
Line       87 Item    1  (count === 100)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (count === 100)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count === 100)_0     -                             
  Row   2:          1  (count === 100)_1     -                             

----------------Focused Condition View-------------------
Line       88 Item    1  (count === 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (count === 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count === 0)_0       -                             
  Row   2:          1  (count === 0)_1       -                             

----------------Focused Condition View-------------------
Line       89 Item    1  (count === (100 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (count === (100 - 1))         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (count === (100 - 1))_0  -                             
  Row   2:          1  (count === (100 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       90 Item    1  (count === 1)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (count === 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count === 1)_0       -                             
  Row   2:          1  (count === 1)_1       -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        23         6    79.31%

================================Statement Details================================

Statement Coverage for instance /top/DUT/buf_top/fifo_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    8                                                module FIFO #(parameter FIFO_WIDTH = 32,
    9                                                  parameter FIFO_DEPTH = 8
    10                                                 )(
    11                                                 input clk,
    12                                                 input rst_n,
    13                                                 input wr_en,
    14                                                 input rd_en,
    15                                                 input [FIFO_WIDTH-1:0] data_in,
    16                                                 output reg [FIFO_WIDTH-1:0] data_out,
    17                                                 output full,
    18                                                 output  empty, 
    19                                                 output reg wr_ack,
    20                                                 output reg rd_ack
    21                                                 );
    22                                                 localparam max_fifo_addr = $clog2(FIFO_DEPTH);
    23                                                 reg [FIFO_WIDTH-1:0] mem [FIFO_DEPTH-1:0];
    24                                                 reg [max_fifo_addr-1:0] wr_ptr=0, rd_ptr =0;
    25                                                 reg [max_fifo_addr:0] count=0;
    26                                               
    27                                                 initial begin
    28                                               
    29              1                          1         for (int i = 0 ;i<FIFO_DEPTH ;i++) begin
    29              2                        100     
    30              1                        100           mem[wr_ptr] = i;
    31              1                        100           wr_ack = 1;
    32              1                        100           wr_ptr = wr_ptr + 1;
    33              1                        100           count = count + 1;
    34                                                   end
    35                                               
    36                                               
    37                                                 end
    38                                               
    39                                                 logic almostfull, almostempty, underflow;
    40                                                 logic overflow;
    41                                               
    42              1                       1067       always @(posedge clk) begin
    43                                                   if (!rst_n) begin
    44                                                     // wr_ptr <= 0;
    45                                                     // wr_ack <=0;
    46                                                     // count <= 0;
    47                                                   end
    48                                                   //adding brakets to make sure the operations is in right sequence
    49                                                   else if (wr_en && (count < FIFO_DEPTH)) begin
    50              1                    ***0***           mem[wr_ptr] <= data_in;
    51              1                    ***0***           wr_ack <= 1;
    52              1                    ***0***           wr_ptr <= wr_ptr + 1;
    53              1                    ***0***           count <= count + 1;
    54                                                   end
    55                                                   else begin 
    56              1                        584           wr_ack <= 0; 
    57                                                     //should be logic and(&&) not bit wise and (&) 
    58                                                     if (full && wr_en)
    59              1                    ***0***             overflow <= 1;
    60                                                     else
    61              1                        584             overflow <= 0;
    62                                                   end
    63                                                 end
    64                                               
    65              1                       1069       always @(posedge clk) begin
    66                                                   if (!rst_n) begin
    67              1                        483           rd_ptr <= 0;
    68              1                        483           underflow<=0;
    69              1                        483           rd_ack<=0;
    70                                                   end
    71                                                   else if (rd_en && count != 0) begin
    72              1                        100           data_out <= mem[rd_ptr];
    73              1                        100           rd_ack<=1;
    74              1                        100           rd_ptr <= rd_ptr + 1;
    75              1                        100           count <= count - 1;
    76                                                   end
    77                                                   //making the underflow seq
    78                                                   else begin  
    79              1                        486           rd_ack<=0;
    80                                                     if (empty && rd_en)
    81              1                    ***0***             underflow <= 1;
    82                                                     else
    83              1                        486             underflow <= 0;
    84                                                   end
    85                                                 end
    86                                               
    87              1                        101       assign full = (count === FIFO_DEPTH) ? 1 : 0;
    88              1                        101       assign empty = (count === 0) ? 1 : 0;
    89              1                        101       assign almostfull = (count === FIFO_DEPTH-1) ? 1 : 0; 
    90              1                        101       assign almostempty = (count === 1) ? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        116        59        57    50.86%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/buf_top/fifo_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                          count[7]           0           0        0.00 
                                        count[6-0]           1           1      100.00 
                                     data_in[0-11]           0           0        0.00 
                                    data_out[11-7]           0           0        0.00 
                                       data_out[6]           0           1       50.00 
                                     data_out[5-0]           1           1      100.00 
                                             empty           0           1       50.00 
                                              full           1           0       50.00 
                                          overflow           0           0        0.00 
                                            rd_ack           1           1      100.00 
                                             rd_en           1           1      100.00 
                                       rd_ptr[6-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           0           0        0.00 
                                            wr_ack           1           0       50.00 
                                             wr_en           0           0        0.00 
                                       wr_ptr[6-5]           0           1       50.00 
                                       wr_ptr[4-3]           0           0        0.00 
                                         wr_ptr[2]           0           1       50.00 
                                       wr_ptr[1-0]           0           0        0.00 

Total Node Count     =         58 
Toggled Node Count   =         26 
Untoggled Node Count =         32 

Toggle Coverage      =      50.86% (59 of 116 bins)

=================================================================================
=== Instance: /top/DUT/buf_top
=== Design Unit: work.buffer
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        11        11         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/buf_top

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File buffer.v
------------------------------------IF Branch------------------------------------
    56                                      1279     Count coming in to IF
    56              1                        483             if (!aresetn) begin
    65              1                        796             end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    67                                       796     Count coming in to IF
    67              1                          2                 if (CPU_read_request && fifo_empty==1'b0 && fifo_rd_en==1'b0) begin
    71              1                         98                 else if(CPU_read_request && fifo_rd_en==1'b1)begin
    92              1                        696                 end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                        98     Count coming in to IF
    73              1                         72                     if(momentary_image_out>2 && (fifo_rd_data<(2*average)+300) )begin
    77              1                         26                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                        98     Count coming in to IF
    84              1                          9                     if(momentary_image_out== 10 )begin
                                              89     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                        98     Count coming in to IF
    88              1                          1                     if(order_image_out== 5 )begin
                                              97     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         8         1    88.88%

================================Condition Details================================

Condition Coverage for instance /top/DUT/buf_top --

  File buffer.v
----------------Focused Condition View-------------------
Line       67 Item    1  ((CPU_read_request && ~fifo_empty) && ~fifo_rd_en)
Condition totals: 3 of 3 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  CPU_read_request         Y
        fifo_empty         Y
        fifo_rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  CPU_read_request_0    -                             
  Row   2:          1  CPU_read_request_1    (~fifo_rd_en && ~fifo_empty)  
  Row   3:          1  fifo_empty_0          (~fifo_rd_en && CPU_read_request)
  Row   4:          1  fifo_empty_1          CPU_read_request              
  Row   5:          1  fifo_rd_en_0          (CPU_read_request && ~fifo_empty)
  Row   6:          1  fifo_rd_en_1          (CPU_read_request && ~fifo_empty)

----------------Focused Condition View-------------------
Line       71 Item    1  (CPU_read_request && fifo_rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  CPU_read_request         Y
        fifo_rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  CPU_read_request_0    -                             
  Row   2:          1  CPU_read_request_1    fifo_rd_en                    
  Row   3:          1  fifo_rd_en_0          CPU_read_request              
  Row   4:          1  fifo_rd_en_1          CPU_read_request              

----------------Focused Condition View-------------------
Line       73 Item    1  ((momentary_image_out > 2) && (fifo_rd_data < ((2 * average) + 300)))
Condition totals: 1 of 2 input terms covered = 50.00%

                              Input Term   Covered  Reason for no coverage   Hint
                             -----------  --------  -----------------------  --------------
               (momentary_image_out > 2)         Y
  (fifo_rd_data < ((2 * average) + 300))         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                Non-masking condition(s)      
 ---------  ---------  --------------------                      -------------------------     
  Row   1:          1  (momentary_image_out > 2)_0               -                             
  Row   2:          1  (momentary_image_out > 2)_1               (fifo_rd_data < ((2 * average) + 300))
  Row   3:    ***0***  (fifo_rd_data < ((2 * average) + 300))_0  (momentary_image_out > 2)     
  Row   4:          1  (fifo_rd_data < ((2 * average) + 300))_1  (momentary_image_out > 2)     

----------------Focused Condition View-------------------
Line       84 Item    1  (momentary_image_out == 10)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (momentary_image_out == 10)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (momentary_image_out == 10)_0  -                             
  Row   2:          1  (momentary_image_out == 10)_1  -                             

----------------Focused Condition View-------------------
Line       88 Item    1  (order_image_out == 5)
Condition totals: 1 of 1 input term covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (order_image_out == 5)         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  (order_image_out == 5)_0  -                             
  Row   2:          1  (order_image_out == 5)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        28         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/buf_top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File buffer.v
    1                                                module buffer (
    2                                                    input wire aclk,                        // Clock signal
    3                                                    input wire aresetn,                        // Reset signal
    4                                                    //cpu interface
    5                                                    input wire CPU_read_request,           //cpu wants to Read data
    6                                                    output reg data_valid,
    7                                                    output reg [24:0] buffer_data_out     // Data output to AXI interface
    8                                                
    9                                                );
    10                                               
    11                                                   //fifo interface
    12                                                   wire [11:0] fifo_rd_data;         // Data from FIFO (12 bits)
    13                                                   wire fifo_empty;                 //fifo empty signal to privent reading when the fifo is empty 
    14                                                   reg fifo_rd_en;               // request data from the fifo
    15                                               
    16                                               
    17                                                   // Registers for image tags and data tracking
    18              1                          1         reg [4:0] momentary_image_out='b0;  // Momentary image tag output
    19              1                          1         reg [3:0] order_image_out='b0;      // Order image tag output
    20              1                          1         reg [3:0] sending_order_out='b0;     // Sending order tag output
    21                                               
    22                                               
    23                                                   // Averaging variables
    24                                                   wire [12:0] sum;
    25                                                   wire [12:0] average;
    26                                                   reg [11:0] last_data;
    27                                                   reg [11:0] before_last_data;
    28                                               
    29                                                   //calculate the sum of the last two proccessed datas
    30              1                         91         assign sum = last_data +before_last_data;
    31                                               
    32                                                   //calculate the average
    33              1                         83         assign average=sum >> 1;
    34                                               
    35                                               
    36                                                    // FIFO Instantiation
    37                                               FIFO #(
    38                                                 .FIFO_WIDTH(12),  // Set the FIFO width
    39                                                 .FIFO_DEPTH(100)   // Set the FIFO depth
    40                                               ) fifo_inst (
    41                                                 .clk(aclk),                // Connect the clock signal
    42                                                 .rst_n(aresetn),            // Connect the reset signal (active low)
    43                                                 .wr_en(),            // Connect the write enable signal
    44                                                 .rd_en(fifo_rd_en),            // Connect the read enable signal
    45                                                 .data_in(),        // Connect the data input bus
    46                                                 .data_out(fifo_rd_data),      // Connect the data output bus
    47                                                 .full(),              // Connect the full flag output
    48                                                 .empty(fifo_empty),             // Connect the empty flag output
    49                                                 .wr_ack(),                //connect the write ack signal
    50                                                 .rd_ack()                  //connect the read ack signal
    51                                               );
    52                                               
    53                                               
    54                                               
    55              1                       1279         always @(posedge aclk) begin
    56                                                       if (!aresetn) begin
    57              1                        483                 buffer_data_out <= 25'b0;
    58              1                        483                 momentary_image_out <= 'b1;
    59              1                        483                 order_image_out <= 'b1;
    60              1                        483                 sending_order_out <= 'b1;
    61              1                        483                 last_data<='b0;
    62              1                        483                 before_last_data<='b0;
    63              1                        483                 data_valid<='b0;
    64              1                        483                 fifo_rd_en<='b0;
    65                                                       end else begin
    66                                                           // Read from buffer
    67                                                           if (CPU_read_request && fifo_empty==1'b0 && fifo_rd_en==1'b0) begin
    68              1                          2                     fifo_rd_en<=1'b1;
    69              1                          2                     data_valid<=0;
    70                                                           end 
    71                                                           else if(CPU_read_request && fifo_rd_en==1'b1)begin
    72                                                               // fifo_rd_en<='b0;
    73                                                               if(momentary_image_out>2 && (fifo_rd_data<(2*average)+300) )begin
    74              1                         72                         buffer_data_out<={fifo_rd_data,momentary_image_out,order_image_out,sending_order_out};
    75              1                         72                         last_data<=fifo_rd_data;
    76                                                               end
    77                                                               else begin
    78              1                         26                         buffer_data_out<={average,momentary_image_out,order_image_out,sending_order_out};
    79              1                         26                         last_data<=average;
    80                                                               end
    81              1                         98                     data_valid<=1;
    82              1                         98                     before_last_data<=last_data;
    83              1                         98                     momentary_image_out<=momentary_image_out+1;
    84                                                               if(momentary_image_out== 10 )begin
    85              1                          9                         momentary_image_out<=0;
    86              1                          9                         order_image_out<=order_image_out+1;
    87                                                               end
    88                                                               if(order_image_out== 5 )begin
    89              1                          1                         order_image_out<=0;
    90              1                          1                         sending_order_out<=sending_order_out+1;
    91                                                               end
    92                                                           end else begin
    93              1                        696                     fifo_rd_en<=0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        212       132        80    62.26%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/buf_top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                  CPU_read_request           1           1      100.00 
                                              aclk           1           1      100.00 
                                           aresetn           1           1      100.00 
                                      average[0-6]           1           1      100.00 
                                     average[7-12]           0           0        0.00 
                            before_last_data[11-7]           0           0        0.00 
                             before_last_data[6-0]           1           1      100.00 
                            buffer_data_out[24-20]           0           0        0.00 
                            buffer_data_out[19-13]           1           1      100.00 
                               buffer_data_out[12]           0           0        0.00 
                             buffer_data_out[11-8]           1           1      100.00 
                                buffer_data_out[7]           0           0        0.00 
                              buffer_data_out[6-4]           1           1      100.00 
                              buffer_data_out[3-2]           0           0        0.00 
                              buffer_data_out[1-0]           1           1      100.00 
                                        data_valid           1           1      100.00 
                                        fifo_empty           0           1       50.00 
                                 fifo_rd_data[0-5]           1           1      100.00 
                                   fifo_rd_data[6]           0           1       50.00 
                                fifo_rd_data[7-11]           0           0        0.00 
                                        fifo_rd_en           1           1      100.00 
                                   last_data[11-7]           0           0        0.00 
                                    last_data[6-0]           1           1      100.00 
                            momentary_image_out[4]           0           0        0.00 
                          momentary_image_out[3-0]           1           1      100.00 
                                order_image_out[3]           0           0        0.00 
                              order_image_out[2-0]           1           1      100.00 
                            sending_order_out[3-2]           0           0        0.00 
                            sending_order_out[1-0]           1           1      100.00 
                                          sum[0-7]           1           1      100.00 
                                         sum[8-12]           0           0        0.00 

Total Node Count     =        106 
Toggled Node Count   =         65 
Untoggled Node Count =         41 

Toggle Coverage      =      62.26% (132 of 212 bins)

=================================================================================
=== Instance: /top/DUT/cutop/send
=== Design Unit: work.SendingUnit
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         9         8         1    88.88%

================================Branch Details================================

Branch Coverage for instance /top/DUT/cutop/send

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SendingUnit.v
------------------------------------IF Branch------------------------------------
    8                                      11776     Count coming in to IF
    8               1                        966          if (~rst_n)begin
    12              1                       1812          else if (sendEnable && ValidSignal && ~order_full) begin
    36              1                       8998           else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    14                                      1812     Count coming in to IF
    14              1                        863               if (onSignal && ~offSignal) begin
    30              1                        949                else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    17                                       863     Count coming in to IF
    17              1                        281                   if (increaseSignal && ~decreaseSignal && onSignal && !offSignal) begin
    21              1                        310                   else if (decreaseSignal && ~increaseSignal && onSignal && !offSignal) begin
    25              1                        272                   else if (~decreaseSignal && ~increaseSignal && onSignal && !offSignal) begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      17         6        11    35.29%

================================Condition Details================================

Condition Coverage for instance /top/DUT/cutop/send --

  File SendingUnit.v
----------------Focused Condition View-------------------
Line       12 Item    1  ((sendEnable && ValidSignal) && ~order_full)
Condition totals: 3 of 3 input terms covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
   sendEnable         Y
  ValidSignal         Y
   order_full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  sendEnable_0          -                             
  Row   2:          1  sendEnable_1          (~order_full && ValidSignal)  
  Row   3:          1  ValidSignal_0         sendEnable                    
  Row   4:          1  ValidSignal_1         (~order_full && sendEnable)   
  Row   5:          1  order_full_0          (sendEnable && ValidSignal)   
  Row   6:          1  order_full_1          (sendEnable && ValidSignal)   

----------------Focused Condition View-------------------
Line       14 Item    1  (onSignal && ~offSignal)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    onSignal         Y
   offSignal         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  onSignal_0            -                             
  Row   2:          1  onSignal_1            ~offSignal                    
  Row   3:          1  offSignal_0           onSignal                      
  Row   4:    ***0***  offSignal_1           onSignal                      

----------------Focused Condition View-------------------
Line       17 Item    1  (((increaseSignal && ~decreaseSignal) && onSignal) && ~offSignal)
Condition totals: 1 of 4 input terms covered = 25.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  increaseSignal         Y
  decreaseSignal         N  '_1' not hit             Hit '_1'
        onSignal         N  '_0' not hit             Hit '_0'
       offSignal         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  increaseSignal_0      -                             
  Row   2:          1  increaseSignal_1      (~offSignal && onSignal && ~decreaseSignal)
  Row   3:          1  decreaseSignal_0      (~offSignal && onSignal && increaseSignal)
  Row   4:    ***0***  decreaseSignal_1      increaseSignal                
  Row   5:    ***0***  onSignal_0            (increaseSignal && ~decreaseSignal)
  Row   6:          1  onSignal_1            (~offSignal && (increaseSignal && ~decreaseSignal))
  Row   7:          1  offSignal_0           ((increaseSignal && ~decreaseSignal) && onSignal)
  Row   8:    ***0***  offSignal_1           ((increaseSignal && ~decreaseSignal) && onSignal)

----------------Focused Condition View-------------------
Line       21 Item    1  (((decreaseSignal && ~increaseSignal) && onSignal) && ~offSignal)
Condition totals: 1 of 4 input terms covered = 25.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  decreaseSignal         Y
  increaseSignal         N  '_1' not hit             Hit '_1'
        onSignal         N  '_0' not hit             Hit '_0'
       offSignal         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  decreaseSignal_0      -                             
  Row   2:          1  decreaseSignal_1      (~offSignal && onSignal && ~increaseSignal)
  Row   3:          1  increaseSignal_0      (~offSignal && onSignal && decreaseSignal)
  Row   4:    ***0***  increaseSignal_1      decreaseSignal                
  Row   5:    ***0***  onSignal_0            (decreaseSignal && ~increaseSignal)
  Row   6:          1  onSignal_1            (~offSignal && (decreaseSignal && ~increaseSignal))
  Row   7:          1  offSignal_0           ((decreaseSignal && ~increaseSignal) && onSignal)
  Row   8:    ***0***  offSignal_1           ((decreaseSignal && ~increaseSignal) && onSignal)

----------------Focused Condition View-------------------
Line       25 Item    1  (((decreaseSignal ~| increaseSignal) && onSignal) && ~offSignal)
Condition totals: 0 of 4 input terms covered = 0.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  decreaseSignal         N  '_1' not hit             Hit '_1'
  increaseSignal         N  '_1' not hit             Hit '_1'
        onSignal         N  '_0' not hit             Hit '_0'
       offSignal         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  decreaseSignal_0      (~offSignal && onSignal && ~increaseSignal)
  Row   2:    ***0***  decreaseSignal_1      ~increaseSignal               
  Row   3:          1  increaseSignal_0      (~offSignal && onSignal && ~decreaseSignal)
  Row   4:    ***0***  increaseSignal_1      ~decreaseSignal               
  Row   5:    ***0***  onSignal_0            (decreaseSignal ~| increaseSignal)
  Row   6:          1  onSignal_1            (~offSignal && (decreaseSignal ~| increaseSignal))
  Row   7:          1  offSignal_0           ((decreaseSignal ~| increaseSignal) && onSignal)
  Row   8:    ***0***  offSignal_1           ((decreaseSignal ~| increaseSignal) && onSignal)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        13         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/cutop/send --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SendingUnit.v
    1                                                module SendingUnit (clk,rst_n,order_full,sendEnable,ValidSignal,AmountSignal,increaseSignal,decreaseSignal,onSignal,offSignal,outputDAC,order);
    2                                                   input clk,rst_n,order_full,sendEnable,ValidSignal,increaseSignal,decreaseSignal,onSignal,offSignal;
    3                                                   input  [7:0] AmountSignal;
    4                                                   output reg [11:0]outputDAC;
    5                                                   output reg order;
    6               1                          1        reg flag=0;
    7               1                      11776        always @(posedge clk or negedge rst_n) begin
    8                                                     if (~rst_n)begin
    9               1                        966              outputDAC=0;
    10              1                        966              order<=0;
    11                                                       end
    12                                                    else if (sendEnable && ValidSignal && ~order_full) begin
    13                                                         // When sending is enabled and the data is valid
    14                                                         if (onSignal && ~offSignal) begin
    15                                                           // Control DAC only when onSignal is active and offSignal is not
    16              1                        863                    order<=1;
    17                                                             if (increaseSignal && ~decreaseSignal && onSignal && !offSignal) begin
    18                                                                 // Increase DAC output by the value of AmountSignal*16
    19              1                        281                       outputDAC <= outputDAC + AmountSignal*16;
    20                                                             end
    21                                                             else if (decreaseSignal && ~increaseSignal && onSignal && !offSignal) begin
    22                                                                 // Decrease DAC output by the value of AmountSignal*16
    23              1                        310                       outputDAC <= outputDAC - AmountSignal*16;
    24                                                             end
    25                                                             else if (~decreaseSignal && ~increaseSignal && onSignal && !offSignal) begin
    26                                                                 // Decrease DAC output by the value of AmountSignal*16
    27              1                        272                       outputDAC <= outputDAC;
    28                                                             end
    29                                                          end 
    30                                                          else begin
    31              1                        949                  flag=1;
    32              1                        949                  order<=0;
    33              1                        949                  outputDAC<=0;
    34                                                          end
    35                                                     end
    36                                                     else begin
    37              1                       8998             order<=0;
    38              1                       8998             outputDAC<=0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         62        53         9    85.48%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/cutop/send --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                 AmountSignal[0-7]           1           1      100.00 
                                       ValidSignal           1           1      100.00 
                                               clk           1           1      100.00 
                                    decreaseSignal           1           1      100.00 
                                              flag           0           1       50.00 
                                    increaseSignal           1           1      100.00 
                                         offSignal           1           1      100.00 
                                          onSignal           1           1      100.00 
                                             order           1           1      100.00 
                                        order_full           1           1      100.00 
                                   outputDAC[11-4]           1           1      100.00 
                                    outputDAC[3-0]           0           0        0.00 
                                             rst_n           1           1      100.00 
                                        sendEnable           1           1      100.00 

Total Node Count     =         31 
Toggled Node Count   =         26 
Untoggled Node Count =          5 

Toggle Coverage      =      85.48% (53 of 62 bins)

=================================================================================
=== Instance: /top/DUT/cutop/receive
=== Design Unit: work.Rec_unit
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        30        28         2    93.33%

================================Branch Details================================

Branch Coverage for instance /top/DUT/cutop/receive

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Rec_unit.v
------------------------------------IF Branch------------------------------------
    26                                      2990     Count coming in to IF
    26              1                        966         if(!rst_n) begin
    29              1                       2024         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    30                                      2024     Count coming in to IF
    30              1                        834             if(order_come) begin
    46              1                          5             else if(finish_order)begin
                                            1185     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    31                                       834     Count coming in to IF
    31              1                          7                 if(order_count==5)begin
    39              1                    ***0***                 else if(finish_order)begin
    42              1                        827                 else begin
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    32                                         7     Count coming in to IF
    32              1                    ***0***                     if(finish_order)begin
    35              1                          7                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    53                                     10372     Count coming in to IF
    53              1                        966         if(!rst_n)begin //the resetting scenario
    58              1                        908         else if (rec_en&&on&&!off&&(order_count>0)&&valid) begin
                                            8498     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                       908     Count coming in to IF
    59              1                          5                 if(imgs_rec==ORDER_IMGS)begin
    63              1                        903                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                     10372     Count coming in to IF
    72              1                        966         if(!rst_n) begin
    78              1                        908         else if(rec_en&&on&&!off&&(order_count>0)&&valid)begin
                                            8498     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                       908     Count coming in to IF
    80              1                          5             if(imgs_sent==ORDER_IMGS)begin
    84              1                        903             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    90                                       908     Count coming in to IF
    90              1                          2             if(ramadd_tmp==99)begin
    93              1                        906             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                     1123     Count coming in to IF
    101             1                          5     assign finish_order = (imgs_sent==ORDER_IMGS) ? 1 : 0;
    101             2                       1118     assign finish_order = (imgs_sent==ORDER_IMGS) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    102                                     1139     Count coming in to IF
    102             1                         62     assign order_full = (order_count==5)? 1 : 0;
    102             2                       1077     assign order_full = (order_count==5)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    105                                     2105     Count coming in to IF
    105             1                        790     assign no_order = (!rst_n) ? 1 : (order_count==0) ? 1 : 0;
    105             2                       1315     assign no_order = (!rst_n) ? 1 : (order_count==0) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    105                                     1315     Count coming in to IF
    105             3                        484     assign no_order = (!rst_n) ? 1 : (order_count==0) ? 1 : 0;
    105             4                        831     assign no_order = (!rst_n) ? 1 : (order_count==0) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      17        15         2    88.23%

================================Condition Details================================

Condition Coverage for instance /top/DUT/cutop/receive --

  File Rec_unit.v
----------------Focused Condition View-------------------
Line       31 Item    1  (order_count == 5)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (order_count == 5)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (order_count == 5)_0  -                             
  Row   2:          1  (order_count == 5)_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    1  ((((rec_en && on) && ~off) && (order_count > 0)) && valid)
Condition totals: 4 of 5 input terms covered = 80.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
             rec_en         Y
                 on         Y
                off         N  '_1' not hit             Hit '_1'
  (order_count > 0)         Y
              valid         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rec_en_0              -                             
  Row   2:          1  rec_en_1              (valid && (order_count > 0) && ~off && on)
  Row   3:          1  on_0                  rec_en                        
  Row   4:          1  on_1                  (valid && (order_count > 0) && ~off && rec_en)
  Row   5:          1  off_0                 (valid && (order_count > 0) && (rec_en && on))
  Row   6:    ***0***  off_1                 (rec_en && on)                
  Row   7:          1  (order_count > 0)_0   ((rec_en && on) && ~off)      
  Row   8:          1  (order_count > 0)_1   (valid && ((rec_en && on) && ~off))
  Row   9:          1  valid_0               (((rec_en && on) && ~off) && (order_count > 0))
 Row   10:          1  valid_1               (((rec_en && on) && ~off) && (order_count > 0))

----------------Focused Condition View-------------------
Line       59 Item    1  (imgs_rec == 50)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (imgs_rec == 50)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (imgs_rec == 50)_0    -                             
  Row   2:          1  (imgs_rec == 50)_1    -                             

----------------Focused Condition View-------------------
Line       78 Item    1  ((((rec_en && on) && ~off) && (order_count > 0)) && valid)
Condition totals: 4 of 5 input terms covered = 80.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
             rec_en         Y
                 on         Y
                off         N  '_1' not hit             Hit '_1'
  (order_count > 0)         Y
              valid         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rec_en_0              -                             
  Row   2:          1  rec_en_1              (valid && (order_count > 0) && ~off && on)
  Row   3:          1  on_0                  rec_en                        
  Row   4:          1  on_1                  (valid && (order_count > 0) && ~off && rec_en)
  Row   5:          1  off_0                 (valid && (order_count > 0) && (rec_en && on))
  Row   6:    ***0***  off_1                 (rec_en && on)                
  Row   7:          1  (order_count > 0)_0   ((rec_en && on) && ~off)      
  Row   8:          1  (order_count > 0)_1   (valid && ((rec_en && on) && ~off))
  Row   9:          1  valid_0               (((rec_en && on) && ~off) && (order_count > 0))
 Row   10:          1  valid_1               (((rec_en && on) && ~off) && (order_count > 0))

----------------Focused Condition View-------------------
Line       80 Item    1  (imgs_sent == 50)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (imgs_sent == 50)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (imgs_sent == 50)_0   -                             
  Row   2:          1  (imgs_sent == 50)_1   -                             

----------------Focused Condition View-------------------
Line       90 Item    1  (ramadd_tmp == 99)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (ramadd_tmp == 99)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (ramadd_tmp == 99)_0  -                             
  Row   2:          1  (ramadd_tmp == 99)_1  -                             

----------------Focused Condition View-------------------
Line       101 Item    1  (imgs_sent == 50)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (imgs_sent == 50)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (imgs_sent == 50)_0   -                             
  Row   2:          1  (imgs_sent == 50)_1   -                             

----------------Focused Condition View-------------------
Line       102 Item    1  (order_count == 5)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (order_count == 5)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (order_count == 5)_0  -                             
  Row   2:          1  (order_count == 5)_1  -                             

----------------Focused Condition View-------------------
Line       105 Item    1  (order_count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (order_count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (order_count == 0)_0  -                             
  Row   2:          1  (order_count == 0)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      30        28         2    93.33%

================================Statement Details================================

Statement Coverage for instance /top/DUT/cutop/receive --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Rec_unit.v
    1                                                module Rec_unit (rst_n,clk,rec_en,buf_in,order_come,send_enB,AXI_OUT,order_full,sending,no_order,ramadd,valid,on,off);
    2                                                parameter FIFO_DATA = 25;
    3                                                parameter ORDER_IMGS = 50;
    4                                                //declaring ports
    5                                                input  rst_n,clk,valid,on,off;
    6                                                input  rec_en; //the enable signal coming from the decoder
    7                                                input  [FIFO_DATA-1:0] buf_in; //the coming data from the buffer to be sent
    8                                                input order_come; //to be acknowledged that the user started a sending order
    9                                                output send_enB; //the enabling signal for the buffer to start sending the received processed data
    10                                               output [FIFO_DATA-1:0] AXI_OUT; //the output through the AXI port to the PS unit
    11                                               output order_full; //indicating the system is unable to receive more orders
    12                                               output sending; //a flag indicating there is data transfer occuring
    13                                               output no_order; // a flag indicating no orders to send to the PS
    14                                               output [6:0] ramadd;//for inserting data in the ramblock
    15                                               //declaring regs
    16                                               reg send_enB_tmp,sending_tmp;
    17                                               reg [FIFO_DATA-1:0] AXI_OUT_tmp;
    18                                               reg [6:0] ramadd_tmp;
    19                                               //declaring internal regs
    20                                               reg [2:0] order_count;//to indicate how many orders are there in the system
    21                                               reg [5:0] imgs_rec; //indicating the number of samples received
    22                                               reg [5:0] imgs_sent; //indicating the number of samples sent
    23                                               wire finish_order;//to indicate a complete order was transferred
    24                                               //determining the unit functioning enable
    25              1                       2990     always @(posedge clk or negedge rst_n) begin
    26                                                   if(!rst_n) begin
    27              1                        966             order_count<=0;
    28                                                   end
    29                                                   else begin
    30                                                       if(order_come) begin
    31                                                           if(order_count==5)begin
    32                                                               if(finish_order)begin
    33              1                    ***0***                         order_count<=4;
    34                                                               end
    35                                                               else begin
    36              1                          7                     order_count<=5;
    37                                                               end
    38                                                           end
    39                                                           else if(finish_order)begin
    40              1                    ***0***                    order_count<=order_count; 
    41                                                           end
    42                                                           else begin
    43              1                        827                 order_count<=order_count+1;
    44                                                           end
    45                                                       end
    46                                                       else if(finish_order)begin
    47              1                          5                 order_count<=order_count-1;
    48                                                       end
    49                                                   end
    50                                               end
    51                                               //determining the unit mechanism
    52              1                      10372     always @(posedge clk or negedge rst_n) begin
    53                                                   if(!rst_n)begin //the resetting scenario
    54              1                        966             send_enB_tmp<=0;
    55              1                        966             AXI_OUT_tmp<=0;
    56              1                        966             imgs_rec<=0;
    57                                                   end
    58                                                   else if (rec_en&&on&&!off&&(order_count>0)&&valid) begin
    59                                                           if(imgs_rec==ORDER_IMGS)begin
    60              1                          5                     send_enB_tmp<=0;
    61              1                          5                     imgs_rec<=0;
    62                                                           end
    63                                                           else begin
    64              1                        903                     send_enB_tmp<=1;
    65              1                        903                     imgs_rec<=imgs_rec+1;
    66                                                           end
    67                                                       end
    68                                                   end
    69                                               
    70                                               //buffering the input data to the axi port
    71              1                      10372     always @(posedge clk or negedge rst_n) begin
    72                                                   if(!rst_n) begin
    73              1                        966             AXI_OUT_tmp<=0;
    74              1                        966             imgs_sent<=0;
    75              1                        966             sending_tmp<=0;
    76              1                        966             ramadd_tmp<=0;
    77                                                   end
    78                                                   else if(rec_en&&on&&!off&&(order_count>0)&&valid)begin
    79                                                       //getting the amount of images sent and handling the finish order signal
    80                                                       if(imgs_sent==ORDER_IMGS)begin
    81              1                          5                 imgs_sent<=0;
    82              1                          5                 sending_tmp<=0;
    83                                                       end
    84                                                       else begin
    85              1                        903                 sending_tmp<=1;
    86              1                        903                 imgs_sent=imgs_sent+1;
    87                                                       end
    88                                                       //sending data through the AXI port
    89              1                        908             AXI_OUT_tmp<=buf_in;
    90                                                       if(ramadd_tmp==99)begin
    91              1                          2                 ramadd_tmp<=0;
    92                                                       end
    93                                                       else begin
    94              1                        906             ramadd_tmp<=ramadd_tmp+1;            
    95                                                       end
    96                                                   end
    97                                               end
    98                                               
    99                                               
    100                                              
    101             1                       1124     assign finish_order = (imgs_sent==ORDER_IMGS) ? 1 : 0;
    102             1                       1140     assign order_full = (order_count==5)? 1 : 0;
    103                                              assign send_enB = send_enB_tmp;
    104                                              assign sending = sending_tmp;
    105             1                       2106     assign no_order = (!rst_n) ? 1 : (order_count==0) ? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        236       182        54    77.11%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/cutop/receive --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      AXI_OUT[0-1]           1           1      100.00 
                                      AXI_OUT[2-3]           0           0        0.00 
                                      AXI_OUT[4-6]           1           1      100.00 
                                        AXI_OUT[7]           0           0        0.00 
                                     AXI_OUT[8-11]           1           1      100.00 
                                       AXI_OUT[12]           0           0        0.00 
                                    AXI_OUT[13-19]           1           1      100.00 
                                    AXI_OUT[20-24]           0           0        0.00 
                                AXI_OUT_tmp[24-20]           0           0        0.00 
                                AXI_OUT_tmp[19-13]           1           1      100.00 
                                   AXI_OUT_tmp[12]           0           0        0.00 
                                 AXI_OUT_tmp[11-8]           1           1      100.00 
                                    AXI_OUT_tmp[7]           0           0        0.00 
                                  AXI_OUT_tmp[6-4]           1           1      100.00 
                                  AXI_OUT_tmp[3-2]           0           0        0.00 
                                  AXI_OUT_tmp[1-0]           1           1      100.00 
                                       buf_in[0-1]           1           1      100.00 
                                       buf_in[2-3]           0           0        0.00 
                                       buf_in[4-6]           1           1      100.00 
                                         buf_in[7]           0           0        0.00 
                                      buf_in[8-11]           1           1      100.00 
                                        buf_in[12]           0           0        0.00 
                                     buf_in[13-19]           1           1      100.00 
                                     buf_in[20-24]           0           0        0.00 
                                               clk           1           1      100.00 
                                      finish_order           1           1      100.00 
                                     imgs_rec[5-0]           1           1      100.00 
                                    imgs_sent[5-0]           1           1      100.00 
                                          no_order           1           1      100.00 
                                               off           1           1      100.00 
                                                on           1           1      100.00 
                                        order_come           1           1      100.00 
                                  order_count[2-0]           1           1      100.00 
                                        order_full           1           1      100.00 
                                       ramadd[0-6]           1           1      100.00 
                                   ramadd_tmp[6-0]           1           1      100.00 
                                            rec_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          send_enB           1           1      100.00 
                                      send_enB_tmp           1           1      100.00 
                                           sending           1           1      100.00 
                                       sending_tmp           1           1      100.00 
                                             valid           1           1      100.00 

Total Node Count     =        118 
Toggled Node Count   =         91 
Untoggled Node Count =         27 

Toggle Coverage      =      77.11% (182 of 236 bins)

=================================================================================
=== Instance: /top/DUT/cutop/ram
=== Design Unit: work.curam
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         6         5         1    83.33%

================================Branch Details================================

Branch Coverage for instance /top/DUT/cutop/ram

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File curam.v
------------------------------------IF Branch------------------------------------
    12                                      1112     Count coming in to IF
    12              1                        891             if(wr_en)begin
                                             221     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    18                                      1668     Count coming in to IF
    18              1                        966             if(!rst_n)begin
    21              1                        702             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    22                                       702     Count coming in to IF
    22              1                    ***0***                 if(rd_en)begin
                                             702     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       5         4         1    80.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/cutop/ram --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File curam.v
    1                                                module curam (clk,rst_n,wr_add,read_add,wr_data,read_data,wr_en,rd_en);
    2                                                    input clk,rst_n,wr_en,rd_en;
    3                                                    input [6:0] wr_add,read_add;
    4                                                    input [24:0] wr_data;
    5                                                    output [24:0] read_data;
    6                                                    reg [24:0] read_data_tmp;
    7                                                
    8                                                    //declaring the memory
    9                                                    reg [24:0] curam [99:0]; 
    10                                                   //write mechanism
    11              1                       1112         always @(posedge clk ) begin
    12                                                       if(wr_en)begin
    13              1                        891                 curam [wr_add] <=wr_data;
    14                                                       end
    15                                                   end
    16                                                   //read mechanism
    17              1                       1668         always @(posedge clk or negedge rst_n) begin
    18                                                       if(!rst_n)begin
    19              1                        966                 read_data_tmp<=0;
    20                                                       end
    21                                                       else begin
    22                                                           if(rd_en)begin
    23              1                    ***0***                     read_data_tmp<=curam[read_add];

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        186        52       134    27.95%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/cutop/ram --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                             rd_en           0           0        0.00 
                                     read_add[0-6]           0           0        0.00 
                                   read_data[0-24]           0           0        0.00 
                               read_data_tmp[24-0]           0           0        0.00 
                                             rst_n           1           1      100.00 
                                       wr_add[0-6]           1           1      100.00 
                                      wr_data[0-1]           1           1      100.00 
                                      wr_data[2-3]           0           0        0.00 
                                      wr_data[4-6]           1           1      100.00 
                                        wr_data[7]           0           0        0.00 
                                     wr_data[8-11]           1           1      100.00 
                                       wr_data[12]           0           0        0.00 
                                    wr_data[13-19]           1           1      100.00 
                                    wr_data[20-24]           0           0        0.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         93 
Toggled Node Count   =         26 
Untoggled Node Count =         67 

Toggle Coverage      =      27.95% (52 of 186 bins)

=================================================================================
=== Instance: /top/DUT/cutop
=== Design Unit: work.ControlUnit
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        250       138       112    55.20%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/cutop --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      AXI_OUT[0-1]           1           1      100.00 
                                      AXI_OUT[2-3]           0           0        0.00 
                                      AXI_OUT[4-6]           1           1      100.00 
                                        AXI_OUT[7]           0           0        0.00 
                                     AXI_OUT[8-11]           1           1      100.00 
                                       AXI_OUT[12]           0           0        0.00 
                                    AXI_OUT[13-19]           1           1      100.00 
                                    AXI_OUT[20-24]           0           0        0.00 
                                 AmountSignal[0-7]           1           1      100.00 
                                       ValidSignal           1           1      100.00 
                                       buf_in[0-1]           1           1      100.00 
                                       buf_in[2-3]           0           0        0.00 
                                       buf_in[4-6]           1           1      100.00 
                                         buf_in[7]           0           0        0.00 
                                      buf_in[8-11]           1           1      100.00 
                                        buf_in[12]           0           0        0.00 
                                     buf_in[13-19]           1           1      100.00 
                                     buf_in[20-24]           0           0        0.00 
                                               clk           1           1      100.00 
                                    decreaseSignal           1           1      100.00 
                                    increaseSignal           1           1      100.00 
                                          no_order           1           1      100.00 
                                         offSignal           1           1      100.00 
                                          onSignal           1           1      100.00 
                                             order           1           1      100.00 
                                        order_full           1           1      100.00 
                                    outputDAC[0-3]           0           0        0.00 
                                   outputDAC[4-11]           1           1      100.00 
                                             rd_en           0           0        0.00 
                                     read_add[0-6]           0           0        0.00 
                                   read_data[0-24]           0           0        0.00 
                                            rec_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                        sendEnable           1           1      100.00 
                                          send_enB           1           1      100.00 
                                           sending           1           1      100.00 
                                       wr_add[0-6]           1           1      100.00 
                                             wr_en           0           0        0.00 

Total Node Count     =        125 
Toggled Node Count   =         69 
Untoggled Node Count =         56 

Toggle Coverage      =      55.20% (138 of 250 bins)

=================================================================================
=== Instance: /top/DUT/dectop
=== Design Unit: work.Decoder
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12        12         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/dectop

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File dec.v
------------------------------------IF Branch------------------------------------
    29                                     11797     Count coming in to IF
    29              1                        984         if (!rst_n) begin
    39              1                      10813         end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    44                                     10813     Count coming in to IF
    44              1                       4477                 if (received_data[0] && ~received_data[1]) begin
    47              1                       1603                 end else if (~received_data[0] && received_data[1]) begin
    50              1                       2323                   end else if(~received_data[0]&&~received_data[1])begin 
    54              1                       2410                  else begin
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                     10813     Count coming in to IF
    61              1                       2873                 if (received_data[2] && ~received_data[3]) begin
    64              1                       2957                 end else if (~received_data[2] && received_data[3]) begin
    67              1                       2515                 end else if(~received_data[2]&&~received_data[3])begin 
    71              1                       2468                     else begin
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                     10813     Count coming in to IF
    82              1                       5148                 if((!(received_data[2]&&received_data[3]))&&(!(received_data[0]&&received_data[1]))&&received_data[6])begin
    85              1                       5665                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      17        13         4    76.47%

================================Condition Details================================

Condition Coverage for instance /top/DUT/dectop --

  File dec.v
----------------Focused Condition View-------------------
Line       44 Item    1  (received_data[0] && ~received_data[1])
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  received_data[0]         Y
  received_data[1]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  received_data[0]_0    -                             
  Row   2:          1  received_data[0]_1    ~received_data[1]             
  Row   3:          1  received_data[1]_0    received_data[0]              
  Row   4:          1  received_data[1]_1    received_data[0]              

----------------Focused Condition View-------------------
Line       47 Item    1  (~received_data[0] && received_data[1])
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  received_data[0]         Y
  received_data[1]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  received_data[0]_0    received_data[1]              
  Row   2:          1  received_data[0]_1    -                             
  Row   3:          1  received_data[1]_0    ~received_data[0]             
  Row   4:          1  received_data[1]_1    ~received_data[0]             

----------------Focused Condition View-------------------
Line       50 Item    1  (received_data[0] ~| received_data[1])
Condition totals: 0 of 2 input terms covered = 0.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  received_data[0]         N  '_1' not hit             Hit '_1'
  received_data[1]         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  received_data[0]_0    ~received_data[1]             
  Row   2:    ***0***  received_data[0]_1    ~received_data[1]             
  Row   3:          1  received_data[1]_0    ~received_data[0]             
  Row   4:    ***0***  received_data[1]_1    ~received_data[0]             

----------------Focused Condition View-------------------
Line       61 Item    1  (received_data[2] && ~received_data[3])
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  received_data[2]         Y
  received_data[3]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  received_data[2]_0    -                             
  Row   2:          1  received_data[2]_1    ~received_data[3]             
  Row   3:          1  received_data[3]_0    received_data[2]              
  Row   4:          1  received_data[3]_1    received_data[2]              

----------------Focused Condition View-------------------
Line       64 Item    1  (~received_data[2] && received_data[3])
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  received_data[2]         Y
  received_data[3]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  received_data[2]_0    received_data[3]              
  Row   2:          1  received_data[2]_1    -                             
  Row   3:          1  received_data[3]_0    ~received_data[2]             
  Row   4:          1  received_data[3]_1    ~received_data[2]             

----------------Focused Condition View-------------------
Line       67 Item    1  (received_data[2] ~| received_data[3])
Condition totals: 0 of 2 input terms covered = 0.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  received_data[2]         N  '_1' not hit             Hit '_1'
  received_data[3]         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  received_data[2]_0    ~received_data[3]             
  Row   2:    ***0***  received_data[2]_1    ~received_data[3]             
  Row   3:          1  received_data[3]_0    ~received_data[2]             
  Row   4:    ***0***  received_data[3]_1    ~received_data[2]             

----------------Focused Condition View-------------------
Line       82 Item    1  (((received_data[2] ~& received_data[3]) && (received_data[0] ~& received_data[1])) && received_data[6])
Condition totals: 5 of 5 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  received_data[2]         Y
  received_data[3]         Y
  received_data[0]         Y
  received_data[1]         Y
  received_data[6]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  received_data[2]_0    (received_data[6] && (received_data[0] ~& received_data[1]) && received_data[3])
  Row   2:          1  received_data[2]_1    received_data[3]              
  Row   3:          1  received_data[3]_0    (received_data[6] && (received_data[0] ~& received_data[1]) && received_data[2])
  Row   4:          1  received_data[3]_1    received_data[2]              
  Row   5:          1  received_data[0]_0    (received_data[6] && (received_data[2] ~& received_data[3]) && received_data[1])
  Row   6:          1  received_data[0]_1    ((received_data[2] ~& received_data[3]) && received_data[1])
  Row   7:          1  received_data[1]_0    (received_data[6] && (received_data[2] ~& received_data[3]) && received_data[0])
  Row   8:          1  received_data[1]_1    ((received_data[2] ~& received_data[3]) && received_data[0])
  Row   9:          1  received_data[6]_0    ((received_data[2] ~& received_data[3]) && (received_data[0] ~& received_data[1]))
 Row   10:          1  received_data[6]_1    ((received_data[2] ~& received_data[3]) && (received_data[0] ~& received_data[1]))


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      32        32         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/dectop --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File dec.v
    1                                                module Decoder #(
    2                                                    parameter DATA_WIDTH = 32,  // Parameter for the width of received_data
    3                                                    parameter AMOUNT_WIDTH = 8 // Parameter for the width of received_data
    4                                                )(
    5                                                    input wire clk,                            // Clock signal
    6                                                    input wire rst_n,                            // Reset signal (active high)
    7                                                    input wire [DATA_WIDTH-1:0] received_data, // Parametrized input from the AXI interface
    8                                                    output reg on,
    9                                                    output reg off,
    10                                                   output reg increase,
    11                                                   output reg decrease,
    12                                                   output reg valid,
    13                                                   output reg receive,
    14                                                   output reg send,
    15                                                   output reg [AMOUNT_WIDTH-1:0] amount // Parametrized amount for DAC
    16                                               );
    17                                               
    18                                               // Bits assignment within the received_data word
    19                                               // Bit 0: On
    20                                               // Bit 1: Off
    21                                               // Bit 2: Increase
    22                                               // Bit 3: Decrease
    23                                               // Bit 4: Receive
    24                                               // Bit 5: Send
    25                                               // Bit 6: Valid
    26                                               // Bits [DATA_WIDTH-1:7]: Amount (remaining bits)
    27                                               
    28              1                      11797     always @(posedge clk or negedge rst_n) begin
    29                                                   if (!rst_n) begin
    30                                                       // Reset all outputs to their default state
    31              1                        984             on <= 0;
    32              1                        984             off <= 0;
    33              1                        984             increase <= 0;
    34              1                        984             decrease <= 0;
    35              1                        984             valid <= 0;
    36              1                        984             receive <= 0;
    37              1                        984             send <= 0;
    38              1                        984             amount <= 0;
    39                                                   end else begin
    40                                                       // Update valid signal
    41                                               
    42                                                       // If valid = 0, do nothing (keep previous states)
    43                                                           // Ensure on and off are inverses; if both are high or both are low, no action
    44                                                           if (received_data[0] && ~received_data[1]) begin
    45              1                       4477                     on <= 1;
    46              1                       4477                     off <= 0;
    47                                                           end else if (~received_data[0] && received_data[1]) begin
    48              1                       1603                     on <= 0;
    49              1                       1603                     off <= 1;
    50                                                             end else if(~received_data[0]&&~received_data[1])begin 
    51              1                       2323                     on<=0;
    52              1                       2323                     off<=0;
    53                                                           end
    54                                                            else begin
    55              1                       2410                     on <= 0;
    56              1                       2410                     off <= 0;
    57              1                       2410                     amount <= 0;
    58                                                           end
    59                                               
    60                                                           // Ensure only one of increase or decrease is active at a time
    61                                                           if (received_data[2] && ~received_data[3]) begin
    62              1                       2873                     increase <= 1;
    63              1                       2873                     decrease <= 0;
    64                                                           end else if (~received_data[2] && received_data[3]) begin
    65              1                       2957                     increase <= 0;
    66              1                       2957                     decrease <= 1;
    67                                                           end else if(~received_data[2]&&~received_data[3])begin 
    68              1                       2515                     increase<=0;
    69              1                       2515                     decrease<=0;
    70                                                           end
    71                                                               else begin
    72              1                       2468                     increase <= 0;
    73              1                       2468                     decrease <= 0;
    74              1                       2468                     amount <= 0;
    75                                                           end
    76                                                           //send & receive
    77              1                      10813                 send<=received_data[5];
    78              1                      10813                 receive<=received_data[4];
    79                                                           // The amount field is taken from the remaining bits of received_data
    80              1                      10813                 amount <= received_data[14:7];
    81                                                           //valid
    82                                                           if((!(received_data[2]&&received_data[3]))&&(!(received_data[0]&&received_data[1]))&&received_data[6])begin
    83              1                       5148                     valid<=1;
    84                                                           end
    85                                                           else begin
    86              1                       5665                     valid<=0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         98        98         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/dectop --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       amount[7-0]           1           1      100.00 
                                               clk           1           1      100.00 
                                          decrease           1           1      100.00 
                                          increase           1           1      100.00 
                                               off           1           1      100.00 
                                                on           1           1      100.00 
                                           receive           1           1      100.00 
                               received_data[0-31]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                              send           1           1      100.00 
                                             valid           1           1      100.00 

Total Node Count     =         49 
Toggled Node Count   =         49 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (98 of 98 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.TOP
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        246       154        92    62.60%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       amount[0-7]           1           1      100.00 
                                       buf_in[0-1]           1           1      100.00 
                                       buf_in[2-3]           0           0        0.00 
                                       buf_in[4-6]           1           1      100.00 
                                         buf_in[7]           0           0        0.00 
                                      buf_in[8-11]           1           1      100.00 
                                        buf_in[12]           0           0        0.00 
                                     buf_in[13-19]           1           1      100.00 
                                     buf_in[20-24]           0           0        0.00 
                                               clk           1           1      100.00 
                                        data_valid           1           1      100.00 
                                          decrease           1           1      100.00 
                                          increase           1           1      100.00 
                                          no_order           1           1      100.00 
                                               off           1           1      100.00 
                                                on           1           1      100.00 
                                    outputDAC[0-3]           0           0        0.00 
                                   outputDAC[4-11]           1           1      100.00 
                                             rd_en           0           0        0.00 
                                     read_add[0-6]           0           0        0.00 
                                   read_data[0-24]           0           0        0.00 
                                           receive           1           1      100.00 
                               received_data[0-31]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                              send           1           1      100.00 
                                          send_enB           1           1      100.00 
                                           sending           1           1      100.00 
                                             valid           1           1      100.00 

Total Node Count     =        123 
Toggled Node Count   =         77 
Untoggled Node Count =         46 

Toggle Coverage      =      62.60% (154 of 246 bins)

=================================================================================
=== Instance: /top/Gold
=== Design Unit: work.goldenmodel
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        28        24         4    85.71%

================================Branch Details================================

Branch Coverage for instance /top/Gold

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File goldenmodel.sv
------------------------------------IF Branch------------------------------------
    22                                     11797     Count coming in to IF
    22              1                        984         if(!rst_n)begin
    36              1                      10813         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    46                                     10813     Count coming in to IF
    46              1                        591             if(on&&!off&&valid&&(increase^decrease)&&send&&order_count<5)begin
    55              1                        272             else if(on&&!off&&valid&&!(increase||decrease)&&send&&order_count<5)begin
    59              1                       9950             else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                       591     Count coming in to IF
    48              1                        281                 if(increase)begin
    51              1                        310                 else if (decrease)begin
                                         ***0***     All False Count
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    64                                     10813     Count coming in to IF
    64              1                        834             if(order_came)begin
    80              1                          5             else if(finished_order) begin
                                            9974     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                       834     Count coming in to IF
    65              1                          7                 if(order_count==5)begin
    73              1                    ***0***                 else if (finished_order)begin
    76              1                        827                 else begin
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    66                                         7     Count coming in to IF
    66              1                    ***0***                     if(finished_order)begin
    69              1                          7                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    81                                         5     Count coming in to IF
    81              1                    ***0***                 if(order_count==0) begin
    84              1                          5                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    89                                     10813     Count coming in to IF
    89              1                        908             if(on&&!off&&valid&&!(increase&&decrease)&&receive&&order_count>0)
                                            9905     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    90                                       908     Count coming in to IF
    90              1                          5                 if(img_count==50)begin
    93              1                        903                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    99                                      1123     Count coming in to IF
    99              1                          5     assign finished_order = (img_count==50)? 1: 0;
    99              2                       1118     assign finished_order = (img_count==50)? 1: 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    100                                     2104     Count coming in to IF
    100             1                        789     assign no_order = (!rst_n)? 1 : (!order_count)? 1 : 0;
    100             2                       1315     assign no_order = (!rst_n)? 1 : (!order_count)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    100                                     1316     Count coming in to IF
    100             3                        485     assign no_order = (!rst_n)? 1 : (!order_count)? 1 : 0;
    100             4                        831     assign no_order = (!rst_n)? 1 : (!order_count)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      25        24         1    96.00%

================================Condition Details================================

Condition Coverage for instance /top/Gold --

  File goldenmodel.sv
-----------Focused Condition View (Bimodal)--------------
Line       46 Item    1  (((((on && ~off) && valid) && (increase ^ decrease)) && send) && (order_count < 5))
Condition totals: 7 of 7 input terms covered = 100.00%

           Input Term   Covered  Reason for no coverage                  Hint
          -----------  --------  --------------------------------------  --------------
                   on         Y
                  off         Y
                valid         Y
             increase         Y
             decrease         Y
                 send         Y
    (order_count < 5)         Y

    Rows:   Hits(->0)   Hits(->1)  FEC Target             Non-masking condition(s)                                                                                  

---------  ----------  ----------  --------------------   -------------------------                                                                                 
 Row   1:           1           0  on_0                   -                                                                                                         
 Row   2:           0           1  on_1                   ((order_count < 5) && send && (increase ^ decrease) && valid && ~off)                                     
 Row   3:           0           1  off_0                  ((order_count < 5) && send && (increase ^ decrease) && valid && on)                                       
 Row   4:           1           0  off_1                  on                                                                                                        
 Row   5:           1           0  valid_0                (on && ~off)                                                                                              
 Row   6:           0           1  valid_1                ((order_count < 5) && send && (increase ^ decrease) && (on && ~off))                                      
 Row   7:           0           1  increase_0             (increase ^ decrease)=1 ? ((order_count < 5) && send && ((on && ~off) && valid)) : ((on && ~off) && valid)
 Row   8:           1           1  increase_1             (increase ^ decrease)=1 ? ((order_count < 5) && send && ((on && ~off) && valid)) : ((on && ~off) && valid)
 Row   9:           0           1  decrease_0             (increase ^ decrease)=1 ? ((order_count < 5) && send && ((on && ~off) && valid)) : ((on && ~off) && valid)
Row   10:           1           1  decrease_1             (increase ^ decrease)=1 ? ((order_count < 5) && send && ((on && ~off) && valid)) : ((on && ~off) && valid)
Row   11:           1           0  send_0                 (((on && ~off) && valid) && (increase ^ decrease))                                                        
Row   12:           0           1  send_1                 ((order_count < 5) && (((on && ~off) && valid) && (increase ^ decrease)))                                 
Row   13:           1           0  (order_count < 5)_0    ((((on && ~off) && valid) && (increase ^ decrease)) && send)                                              
Row   14:           0           1  (order_count < 5)_1    ((((on && ~off) && valid) && (increase ^ decrease)) && send)                                              

----------------Focused Condition View-------------------
Line       55 Item    1  (((((on && ~off) && valid) && (increase ~| decrease)) && send) && (order_count < 5))
Condition totals: 7 of 7 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
                 on         Y
                off         Y
              valid         Y
           increase         Y
           decrease         Y
               send         Y
  (order_count < 5)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  on_0                  -                             
  Row   2:          1  on_1                  ((order_count < 5) && send && (increase ~| decrease) && valid && ~off)
  Row   3:          1  off_0                 ((order_count < 5) && send && (increase ~| decrease) && valid && on)
  Row   4:          1  off_1                 on                            
  Row   5:          1  valid_0               (on && ~off)                  
  Row   6:          1  valid_1               ((order_count < 5) && send && (increase ~| decrease) && (on && ~off))
  Row   7:          1  increase_0            ((order_count < 5) && send && ((on && ~off) && valid) && ~decrease)
  Row   8:          1  increase_1            (((on && ~off) && valid) && ~decrease)
  Row   9:          1  decrease_0            ((order_count < 5) && send && ((on && ~off) && valid) && ~increase)
 Row   10:          1  decrease_1            (((on && ~off) && valid) && ~increase)
 Row   11:          1  send_0                (((on && ~off) && valid) && (increase ~| decrease))
 Row   12:          1  send_1                ((order_count < 5) && (((on && ~off) && valid) && (increase ~| decrease)))
 Row   13:          1  (order_count < 5)_0   ((((on && ~off) && valid) && (increase ~| decrease)) && send)
 Row   14:          1  (order_count < 5)_1   ((((on && ~off) && valid) && (increase ~| decrease)) && send)

----------------Focused Condition View-------------------
Line       65 Item    1  (order_count == 5)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (order_count == 5)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (order_count == 5)_0  -                             
  Row   2:          1  (order_count == 5)_1  -                             

----------------Focused Condition View-------------------
Line       81 Item    1  (order_count == 0)
Condition totals: 0 of 1 input term covered = 0.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (order_count == 0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (order_count == 0)_0  -                             
  Row   2:    ***0***  (order_count == 0)_1  -                             

----------------Focused Condition View-------------------
Line       89 Item    1  (((((on && ~off) && valid) && (increase ~& decrease)) && receive) && (order_count > 0))
Condition totals: 7 of 7 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
                 on         Y
                off         Y
              valid         Y
           increase         Y
           decrease         Y
            receive         Y
  (order_count > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  on_0                  -                             
  Row   2:          1  on_1                  ((order_count > 0) && receive && (increase ~& decrease) && valid && ~off)
  Row   3:          1  off_0                 ((order_count > 0) && receive && (increase ~& decrease) && valid && on)
  Row   4:          1  off_1                 on                            
  Row   5:          1  valid_0               (on && ~off)                  
  Row   6:          1  valid_1               ((order_count > 0) && receive && (increase ~& decrease) && (on && ~off))
  Row   7:          1  increase_0            ((order_count > 0) && receive && ((on && ~off) && valid) && decrease)
  Row   8:          1  increase_1            (((on && ~off) && valid) && decrease)
  Row   9:          1  decrease_0            ((order_count > 0) && receive && ((on && ~off) && valid) && increase)
 Row   10:          1  decrease_1            (((on && ~off) && valid) && increase)
 Row   11:          1  receive_0             (((on && ~off) && valid) && (increase ~& decrease))
 Row   12:          1  receive_1             ((order_count > 0) && (((on && ~off) && valid) && (increase ~& decrease)))
 Row   13:          1  (order_count > 0)_0   ((((on && ~off) && valid) && (increase ~& decrease)) && receive)
 Row   14:          1  (order_count > 0)_1   ((((on && ~off) && valid) && (increase ~& decrease)) && receive)

----------------Focused Condition View-------------------
Line       90 Item    1  (img_count == 50)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (img_count == 50)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (img_count == 50)_0   -                             
  Row   2:          1  (img_count == 50)_1   -                             

----------------Focused Condition View-------------------
Line       99 Item    1  (img_count == 50)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (img_count == 50)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (img_count == 50)_0   -                             
  Row   2:          1  (img_count == 50)_1   -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      44        41         3    93.18%

================================Statement Details================================

Statement Coverage for instance /top/Gold --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File goldenmodel.sv
    1                                                module goldenmodel (golden_inter_ref.DUT_gold golddut);
    2                                                logic clk,rst_n;
    3                                                
    4                                                logic no_order;
    5                                                logic [11:0] outputDAC;
    6                                                logic [golddut.DATA_WIDTH-1:0] received_data;
    7                                                logic on,off,send,increase,decrease,order_came,valid,receive,finished_order;
    8                                                logic [7:0] amount;
    9                                                //
    10              1                      22629     assign clk = golddut.clk;
    11              1                        967     assign rst_n = golddut.rst_n;
    12              1                      11315     assign received_data = golddut.received_data;
    13                                               //
    14              1                       1552     always @(*) begin
    15              1                        616     assign golddut.no_order = no_order;
    16              1                       1131     assign golddut.outputDAC = outputDAC;    
    17                                               end
    18                                               //
    19                                               int order_count,img_count;
    20                                               //
    21              1                      11797     always @(posedge clk or negedge rst_n) begin
    22                                                   if(!rst_n)begin
    23              1                        984             order_count<=0;
    24              1                        984             img_count<=0;
    25              1                        984             outputDAC<=0;
    26              1                        984             amount<=0;
    27              1                        984             order_came<=0;
    28              1                        984             on<=0;
    29              1                        984             off<=0;
    30              1                        984             increase<=0;
    31              1                        984             decrease<=0;
    32              1                        984             receive<=0;
    33              1                        984             send<=0;
    34              1                        984             valid<=0;
    35                                                   end
    36                                                   else begin
    37              1                      10813             on<=received_data[0];
    38              1                      10813             off<=received_data[1];
    39              1                      10813             increase<=received_data[2];
    40              1                      10813             decrease<=received_data[3];
    41              1                      10813             receive<=received_data[4];
    42              1                      10813             send<=received_data[5];
    43              1                      10813             valid<=received_data[6];
    44              1                      10813             amount<=received_data[14:7];
    45                                                       ////////////////////////////
    46                                                       if(on&&!off&&valid&&(increase^decrease)&&send&&order_count<5)begin
    47              1                        591                 order_came<=1;
    48                                                           if(increase)begin
    49              1                        281                      outputDAC <= outputDAC + amount*16;
    50                                                           end
    51                                                           else if (decrease)begin
    52              1                        310                     outputDAC <= outputDAC - amount*16;
    53                                                           end
    54                                                       end
    55                                                       else if(on&&!off&&valid&&!(increase||decrease)&&send&&order_count<5)begin
    56              1                        272                 outputDAC<=outputDAC;
    57              1                        272                 order_came<=1;
    58                                                       end
    59                                                       else begin
    60              1                       9950                 order_came<=0;
    61              1                       9950                 outputDAC<=0;
    62                                                       end
    63                                                       ////////////////////////////
    64                                                       if(order_came)begin
    65                                                           if(order_count==5)begin
    66                                                               if(finished_order)begin
    67              1                    ***0***                         order_count<=4;
    68                                                               end
    69                                                               else begin
    70              1                          7                       order_count<=5;  
    71                                                               end
    72                                                           end
    73                                                           else if (finished_order)begin
    74              1                    ***0***                     order_count<=order_count;
    75                                                           end
    76                                                           else begin
    77              1                        827                     order_count<=order_count+1;
    78                                                           end
    79                                                       end
    80                                                       else if(finished_order) begin
    81                                                           if(order_count==0) begin
    82              1                    ***0***                     order_count<=0;
    83                                                           end
    84                                                           else begin
    85              1                          5                 order_count<=order_count-1;
    86                                                           end
    87                                                       end
    88                                                       ////////////////////////////
    89                                                       if(on&&!off&&valid&&!(increase&&decrease)&&receive&&order_count>0)
    90                                                           if(img_count==50)begin
    91              1                          5                     img_count=0;
    92                                                           end
    93                                                           else begin
    94              1                        903                     img_count<=img_count+1;
    95                                                           end
    96                                                   end
    97                                               end
    98                                               //
    99              1                       1123     assign finished_order = (img_count==50)? 1: 0;
    100             1                       2105     assign no_order = (!rst_n)? 1 : (!order_count)? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        256       138       118    53.90%

================================Toggle Details================================

Toggle Coverage for instance /top/Gold --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       amount[7-0]           1           1      100.00 
                                               clk           1           1      100.00 
                                          decrease           1           1      100.00 
                                    finished_order           1           1      100.00 
                                   img_count[31-6]           0           0        0.00 
                                    img_count[5-0]           1           1      100.00 
                                          increase           1           1      100.00 
                                          no_order           1           1      100.00 
                                               off           1           1      100.00 
                                                on           1           1      100.00 
                                        order_came           1           1      100.00 
                                 order_count[31-3]           0           0        0.00 
                                  order_count[2-0]           1           1      100.00 
                                   outputDAC[11-4]           1           1      100.00 
                                    outputDAC[3-0]           0           0        0.00 
                                           receive           1           1      100.00 
                               received_data[31-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                              send           1           1      100.00 
                                             valid           1           1      100.00 

Total Node Count     =        128 
Toggled Node Count   =         69 
Untoggled Node Count =         59 

Toggle Coverage      =      53.90% (138 of 256 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.svh
    5                                                module top ();
    6                                                bit clk;
    7                                                initial begin
    8               1                          1         forever begin
    9               1                      22629             #10 clk=~clk;
    9               2                      22628     
    10                                                   end
    11                                               end
    12                                               golden_inter_ref gold_if(clk);
    13                                               sonar_inter sonarif (clk);
    14                                               TOP DUT (sonarif.clk,sonarif.rst_n,sonarif.received_data,sonarif.no_order,sonarif.outputDAC,sonarif.read_add,sonarif.rd_en,sonarif.read_data);
    15                                               goldenmodel Gold(gold_if);
    16                                                   initial begin
    17              1                          1             uvm_config_db #(virtual sonar_inter)::set(null,"uvm_test_top","SONAR_IF",sonarif);
    18              1                          1             uvm_config_db #(virtual golden_inter_ref)::set(null,"uvm_test_top","GOLDEN_IF",gold_if);
    19              1                          1             run_test("sonar_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /sonar_sequence_item_pkg
=== Design Unit: work.sonar_sequence_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /sonar_sequence_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.svh
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     `uvm_object_utils(sonar_sequence_item)                          
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      11314     Count coming in to IF
    7               2                    ***0***     `uvm_object_utils(sonar_sequence_item)                          
                                           11314     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     `uvm_object_utils(sonar_sequence_item)                          
    7               4                    ***0***     `uvm_object_utils(sonar_sequence_item)                          
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      11314     Count coming in to IF
    7               5                    ***0***     `uvm_object_utils(sonar_sequence_item)                          
                                           11314     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     `uvm_object_utils(sonar_sequence_item)                          
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /sonar_sequence_item_pkg --

  File sequence_item.svh
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      12         3         9    25.00%

================================Statement Details================================

Statement Coverage for instance /sonar_sequence_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.svh
    1                                                package sonar_sequence_item_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                parameter DATA_WIDTH = 32;
    5                                                parameter FIFO_DATA = 25;
    6                                                class sonar_sequence_item extends uvm_sequence_item;
    7               1                    ***0***     `uvm_object_utils(sonar_sequence_item)                          
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                      11314     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                      11314     
    7              10                    ***0***     
    8                                                rand logic rst_n;                          
    9                                                rand logic [DATA_WIDTH-1:0] received_data;
    10                                               logic no_order,no_order_ref;
    11                                               logic [FIFO_DATA-1:0] read_data,read_data_ref;
    12                                               logic [11:0] outputDAC,outputDAC_ref;
    13                                               //
    14                                               function new(string name = "sonar_sequence_item");
    15              1                      33944       super.new(name);
    16                                               endfunction
    17                                               //
    18                                               function string convert2string();
    19              1                    ***0***         return $sformatf ("%s reset = %0b, received data = %0b, no_order = %0b, read_data = %0b, outputDAC=%0b",super.convert2string(),rst_n,received_data,no_order,read_data,outputDAC);


=================================================================================
=== Instance: /sonar_sequence_pkg
=== Design Unit: work.sonar_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       5         5         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/sonar_sequence_pkg/sonar_send_sequence/body/immed__48
                     sequence.svh(48)                   0          1
/sonar_sequence_pkg/sonar_receive_sequence/body/immed__74
                     sequence.svh(74)                   0          1
/sonar_sequence_pkg/sonar_increase_sequence/body/immed__100
                     sequence.svh(100)                  0          1
/sonar_sequence_pkg/sonar_decrease_sequence/body/immed__126
                     sequence.svh(126)                  0          1
/sonar_sequence_pkg/sonar_rand_all_sequence/body/#ublk#94479959#147/immed__151
                     sequence.svh(151)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        60        12        48    20.00%

================================Branch Details================================

Branch Coverage for instance /sonar_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.svh
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils (sonar_reset_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          2     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils (sonar_reset_sequence)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils (sonar_reset_sequence)
    9               4                    ***0***             `uvm_object_utils (sonar_reset_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          2     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils (sonar_reset_sequence)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils (sonar_reset_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    36                                   ***0***     Count coming in to IF
    36              1                    ***0***             `uvm_object_utils (sonar_send_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    36                                         9     Count coming in to IF
    36              2                    ***0***             `uvm_object_utils (sonar_send_sequence)
                                               9     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    36                                   ***0***     Count coming in to IF
    36              3                    ***0***             `uvm_object_utils (sonar_send_sequence)
    36              4                    ***0***             `uvm_object_utils (sonar_send_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    36                                         9     Count coming in to IF
    36              5                    ***0***             `uvm_object_utils (sonar_send_sequence)
                                               9     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    36                                   ***0***     Count coming in to IF
    36              6                    ***0***             `uvm_object_utils (sonar_send_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              1                    ***0***             `uvm_object_utils (sonar_receive_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                       801     Count coming in to IF
    62              2                    ***0***             `uvm_object_utils (sonar_receive_sequence)
                                             801     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              3                    ***0***             `uvm_object_utils (sonar_receive_sequence)
    62              4                    ***0***             `uvm_object_utils (sonar_receive_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                       801     Count coming in to IF
    62              5                    ***0***             `uvm_object_utils (sonar_receive_sequence)
                                             801     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              6                    ***0***             `uvm_object_utils (sonar_receive_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    88                                   ***0***     Count coming in to IF
    88              1                    ***0***             `uvm_object_utils (sonar_increase_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    88                                         1     Count coming in to IF
    88              2                    ***0***             `uvm_object_utils (sonar_increase_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    88                                   ***0***     Count coming in to IF
    88              3                    ***0***             `uvm_object_utils (sonar_increase_sequence)
    88              4                    ***0***             `uvm_object_utils (sonar_increase_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    88                                         1     Count coming in to IF
    88              5                    ***0***             `uvm_object_utils (sonar_increase_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    88                                   ***0***     Count coming in to IF
    88              6                    ***0***             `uvm_object_utils (sonar_increase_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    114                                  ***0***     Count coming in to IF
    114             1                    ***0***             `uvm_object_utils (sonar_decrease_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    114                                        1     Count coming in to IF
    114             2                    ***0***             `uvm_object_utils (sonar_decrease_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    114                                  ***0***     Count coming in to IF
    114             3                    ***0***             `uvm_object_utils (sonar_decrease_sequence)
    114             4                    ***0***             `uvm_object_utils (sonar_decrease_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    114                                        1     Count coming in to IF
    114             5                    ***0***             `uvm_object_utils (sonar_decrease_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    114                                  ***0***     Count coming in to IF
    114             6                    ***0***             `uvm_object_utils (sonar_decrease_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    139                                  ***0***     Count coming in to IF
    139             1                    ***0***             `uvm_object_utils (sonar_rand_all_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    139                                        1     Count coming in to IF
    139             2                    ***0***             `uvm_object_utils (sonar_rand_all_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    139                                  ***0***     Count coming in to IF
    139             3                    ***0***             `uvm_object_utils (sonar_rand_all_sequence)
    139             4                    ***0***             `uvm_object_utils (sonar_rand_all_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    139                                        1     Count coming in to IF
    139             5                    ***0***             `uvm_object_utils (sonar_rand_all_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    139                                  ***0***     Count coming in to IF
    139             6                    ***0***             `uvm_object_utils (sonar_rand_all_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      12         0        12     0.00%

================================Condition Details================================

Condition Coverage for instance /sonar_sequence_pkg --

  File sequence.svh
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       36 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       36 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       62 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       88 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       88 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       114 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       114 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       139 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       139 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                     122        74        48    60.65%

================================Statement Details================================

Statement Coverage for instance /sonar_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.svh
    1                                                package sonar_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import sonar_sequence_item_pkg::*;
    5                                                    parameter DATA_WIDTH = 32;
    6                                                    parameter AMOUNT_WIDTH = 8;
    7                                                    //reset sequence
    8                                                    class sonar_reset_sequence extends uvm_sequence #(sonar_sequence_item);
    9               1                    ***0***             `uvm_object_utils (sonar_reset_sequence)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          2     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          2     
    9              10                    ***0***     
    10                                                       sonar_sequence_item seq_item;
    11                                               
    12                                                       function new(string name = "sonar_reset_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                          task body();
    17              1                          2                seq_item = sonar_sequence_item::type_id::create("seq_item");
    18              1                          2                start_item(seq_item);
    19              1                          2                seq_item.rst_n=0;
    20              1                          2                seq_item.received_data=$random;
    21              1                          2                finish_item(seq_item);
    22                                                       endtask
    23                                                   endclass
    24                                               // Bits assignment within the received_data word
    25                                               // Bit 0: On
    26                                               // Bit 1: Off
    27                                               // Bit 2: Increase
    28                                               // Bit 3: Decrease
    29                                               // Bit 4: Receive
    30                                               // Bit 5: Send
    31                                               // Bit 6: Valid
    32                                               // Bits [DATA_WIDTH-1:6]: Amount (remaining bits)
    33                                               
    34                                               //sendsequence   
    35                                                   class sonar_send_sequence extends uvm_sequence #(sonar_sequence_item);
    36              1                    ***0***             `uvm_object_utils (sonar_send_sequence)
    36              2                    ***0***     
    36              3                    ***0***     
    36              4                    ***0***     
    36              5                    ***0***     
    36              6                          9     
    36              7                    ***0***     
    36              8                    ***0***     
    36              9                          9     
    36             10                    ***0***     
    37                                                       sonar_sequence_item seq_item;
    38                                               
    39                                                       function new(string name = "sonar_send_sequence");
    40              1                          1                 super.new(name);
    41                                                       endfunction
    42                                               
    43                                                          task body();
    44              1                          9                seq_item = sonar_sequence_item::type_id::create("seq_item");
    45              1                          9                start_item(seq_item);
    46              1                          9                seq_item.rst_n=1;
    47              1                          9                seq_item.rst_n.rand_mode(0);
    48                                                          assert(seq_item.randomize());
    49              1                          9                seq_item.received_data[0] = 1;
    50              1                          9                seq_item.received_data[1] = 0;
    51              1                          9                seq_item.received_data[2] = !seq_item.received_data[3];
    52              1                          9                seq_item.received_data[4] = 0;
    53              1                          9                seq_item.received_data[5] = 1;
    54              1                          9                seq_item.received_data[6] = 1;
    55              1                          9                finish_item(seq_item);
    56                                                       endtask
    57                                                   endclass
    58                                               
    59                                               
    60                                                       //receive sequence   
    61                                                   class sonar_receive_sequence extends uvm_sequence #(sonar_sequence_item);
    62              1                    ***0***             `uvm_object_utils (sonar_receive_sequence)
    62              2                    ***0***     
    62              3                    ***0***     
    62              4                    ***0***     
    62              5                    ***0***     
    62              6                        801     
    62              7                    ***0***     
    62              8                    ***0***     
    62              9                        801     
    62             10                    ***0***     
    63                                                       sonar_sequence_item seq_item;
    64                                               
    65                                                       function new(string name = "sonar_receive_sequence");
    66              1                          1                 super.new(name);
    67                                                       endfunction
    68                                               
    69                                                          task body();
    70              1                        801                seq_item = sonar_sequence_item::type_id::create("seq_item");
    71              1                        801                start_item(seq_item);
    72              1                        801                seq_item.rst_n=1;
    73              1                        801                seq_item.rst_n.rand_mode(0);
    74                                                          assert(seq_item.randomize());
    75              1                        801                seq_item.received_data[0] = 1;
    76              1                        801                seq_item.received_data[1] = 0;
    77              1                        801                seq_item.received_data[2] = !seq_item.received_data[3];
    78              1                        801                seq_item.received_data[4] = 1;
    79              1                        801                seq_item.received_data[5] = 0;
    80              1                        801                seq_item.received_data[6] = 1;
    81              1                        801                finish_item(seq_item);
    82                                                       endtask
    83                                                   endclass
    84                                               
    85                                               
    86                                                           //increase sequence   
    87                                                   class sonar_increase_sequence extends uvm_sequence #(sonar_sequence_item);
    88              1                    ***0***             `uvm_object_utils (sonar_increase_sequence)
    88              2                    ***0***     
    88              3                    ***0***     
    88              4                    ***0***     
    88              5                    ***0***     
    88              6                          1     
    88              7                    ***0***     
    88              8                    ***0***     
    88              9                          1     
    88             10                    ***0***     
    89                                                       sonar_sequence_item seq_item;
    90                                               
    91                                                       function new(string name = "sonar_increase_sequence");
    92              1                          1                 super.new(name);
    93                                                       endfunction
    94                                               
    95                                                          task body();
    96              1                          1                seq_item = sonar_sequence_item::type_id::create("seq_item");
    97              1                          1                start_item(seq_item);
    98              1                          1                seq_item.rst_n=1;
    99              1                          1                seq_item.rst_n.rand_mode(0);
    100                                                         assert(seq_item.randomize());
    101             1                          1                seq_item.received_data[0] = 1;
    102             1                          1                seq_item.received_data[1] = 0;
    103             1                          1                seq_item.received_data[2] = 1;
    104             1                          1                seq_item.received_data[3] = 0;
    105             1                          1                seq_item.received_data[4] = 0;
    106             1                          1                seq_item.received_data[5] = 1;
    107             1                          1                seq_item.received_data[6] = 1;
    108             1                          1                finish_item(seq_item);
    109                                                      endtask
    110                                                  endclass
    111                                              
    112                                                              //decrease sequence   
    113                                                  class sonar_decrease_sequence extends uvm_sequence #(sonar_sequence_item);
    114             1                    ***0***             `uvm_object_utils (sonar_decrease_sequence)
    114             2                    ***0***     
    114             3                    ***0***     
    114             4                    ***0***     
    114             5                    ***0***     
    114             6                          1     
    114             7                    ***0***     
    114             8                    ***0***     
    114             9                          1     
    114            10                    ***0***     
    115                                                      sonar_sequence_item seq_item;
    116                                              
    117                                                      function new(string name = "sonar_decrease_sequence");
    118             1                          1                 super.new(name);
    119                                                      endfunction
    120                                              
    121                                                         task body();
    122             1                          1                seq_item = sonar_sequence_item::type_id::create("seq_item");
    123             1                          1                start_item(seq_item);
    124             1                          1                seq_item.rst_n=1;
    125             1                          1                seq_item.rst_n.rand_mode(0);
    126                                                         assert(seq_item.randomize());
    127             1                          1                seq_item.received_data[0] = 1;
    128             1                          1                seq_item.received_data[1] = 0;
    129             1                          1                seq_item.received_data[2] = 0;
    130             1                          1                seq_item.received_data[3] = 1;
    131             1                          1                seq_item.received_data[4] = 0;
    132             1                          1                seq_item.received_data[5] = 1;
    133             1                          1                seq_item.received_data[6] = 1;
    134             1                          1                finish_item(seq_item);
    135                                                      endtask
    136                                                  endclass
    137                                              
    138                                                      class sonar_rand_all_sequence extends uvm_sequence #(sonar_sequence_item);
    139             1                    ***0***             `uvm_object_utils (sonar_rand_all_sequence)
    139             2                    ***0***     
    139             3                    ***0***     
    139             4                    ***0***     
    139             5                    ***0***     
    139             6                          1     
    139             7                    ***0***     
    139             8                    ***0***     
    139             9                          1     
    139            10                    ***0***     
    140                                                      sonar_sequence_item seq_item;
    141                                              
    142                                                      function new(string name = "sonar_rand_all_sequence");
    143             1                          1                 super.new(name);
    144                                                      endfunction
    145                                              
    146                                                      task body();
    147             1                      10500             repeat(10500)begin
    148             1                      10500             seq_item = sonar_sequence_item::type_id::create("seq_item");
    149             1                      10500             start_item(seq_item);
    150             1                      10500             seq_item.rand_mode(1);
    151                                                      assert(seq_item.randomize());
    152             1                      10500             finish_item(seq_item);


=================================================================================
=== Instance: /sonar_coverage_collector_pkg
=== Design Unit: work.sonar_coverage_collector_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         12        na        na        na
            Covergroup Bins        652       652         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /sonar_coverage_collector_pkg/sonar_coverage_collector/cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                   652        652          -                      
    missing/total bins:                                     0        652          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reset_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                         501          1          -    Covered              
        bin ones                                        10813          1          -    Covered              
    Coverpoint controlword_cp                         100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:67108863]                              167          1          -    Covered              
        bin auto[67108864:134217727]                      182          1          -    Covered              
        bin auto[134217728:201326591]                     189          1          -    Covered              
        bin auto[201326592:268435455]                     161          1          -    Covered              
        bin auto[268435456:335544319]                     171          1          -    Covered              
        bin auto[335544320:402653183]                     166          1          -    Covered              
        bin auto[402653184:469762047]                     193          1          -    Covered              
        bin auto[469762048:536870911]                     181          1          -    Covered              
        bin auto[536870912:603979775]                     201          1          -    Covered              
        bin auto[603979776:671088639]                     160          1          -    Covered              
        bin auto[671088640:738197503]                     163          1          -    Covered              
        bin auto[738197504:805306367]                     176          1          -    Covered              
        bin auto[805306368:872415231]                     174          1          -    Covered              
        bin auto[872415232:939524095]                     175          1          -    Covered              
        bin auto[939524096:1006632959]                    167          1          -    Covered              
        bin auto[1006632960:1073741823]                   152          1          -    Covered              
        bin auto[1073741824:1140850687]                   174          1          -    Covered              
        bin auto[1140850688:1207959551]                   174          1          -    Covered              
        bin auto[1207959552:1275068415]                   170          1          -    Covered              
        bin auto[1275068416:1342177279]                   168          1          -    Covered              
        bin auto[1342177280:1409286143]                   157          1          -    Covered              
        bin auto[1409286144:1476395007]                   186          1          -    Covered              
        bin auto[1476395008:1543503871]                   169          1          -    Covered              
        bin auto[1543503872:1610612735]                   170          1          -    Covered              
        bin auto[1610612736:1677721599]                   183          1          -    Covered              
        bin auto[1677721600:1744830463]                   189          1          -    Covered              
        bin auto[1744830464:1811939327]                   161          1          -    Covered              
        bin auto[1811939328:1879048191]                   166          1          -    Covered              
        bin auto[1879048192:1946157055]                   178          1          -    Covered              
        bin auto[1946157056:2013265919]                   169          1          -    Covered              
        bin auto[2013265920:2080374783]                   174          1          -    Covered              
        bin auto[2080374784:2147483647]                   175          1          -    Covered              
        bin auto[2147483648:2214592511]                   195          1          -    Covered              
        bin auto[2214592512:2281701375]                   184          1          -    Covered              
        bin auto[2281701376:2348810239]                   168          1          -    Covered              
        bin auto[2348810240:2415919103]                   168          1          -    Covered              
        bin auto[2415919104:2483027967]                   192          1          -    Covered              
        bin auto[2483027968:2550136831]                   164          1          -    Covered              
        bin auto[2550136832:2617245695]                   182          1          -    Covered              
        bin auto[2617245696:2684354559]                   182          1          -    Covered              
        bin auto[2684354560:2751463423]                   200          1          -    Covered              
        bin auto[2751463424:2818572287]                   168          1          -    Covered              
        bin auto[2818572288:2885681151]                   198          1          -    Covered              
        bin auto[2885681152:2952790015]                   184          1          -    Covered              
        bin auto[2952790016:3019898879]                   168          1          -    Covered              
        bin auto[3019898880:3087007743]                   173          1          -    Covered              
        bin auto[3087007744:3154116607]                   172          1          -    Covered              
        bin auto[3154116608:3221225471]                   202          1          -    Covered              
        bin auto[3221225472:3288334335]                   168          1          -    Covered              
        bin auto[3288334336:3355443199]                   163          1          -    Covered              
        bin auto[3355443200:3422552063]                   174          1          -    Covered              
        bin auto[3422552064:3489660927]                   164          1          -    Covered              
        bin auto[3489660928:3556769791]                   174          1          -    Covered              
        bin auto[3556769792:3623878655]                   199          1          -    Covered              
        bin auto[3623878656:3690987519]                   171          1          -    Covered              
        bin auto[3690987520:3758096383]                   168          1          -    Covered              
        bin auto[3758096384:3825205247]                   168          1          -    Covered              
        bin auto[3825205248:3892314111]                   181          1          -    Covered              
        bin auto[3892314112:3959422975]                   175          1          -    Covered              
        bin auto[3959422976:4026531839]                   202          1          -    Covered              
        bin auto[4026531840:4093640703]                   205          1          -    Covered              
        bin auto[4093640704:4160749567]                   191          1          -    Covered              
        bin auto[4160749568:4227858431]                   196          1          -    Covered              
        bin auto[4227858432:4294967295]                   174          1          -    Covered              
    Coverpoint increase_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5729          1          -    Covered              
        bin auto[1]                                      5585          1          -    Covered              
    Coverpoint decrease_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5637          1          -    Covered              
        bin auto[1]                                      5677          1          -    Covered              
    Coverpoint outputDAC_cp                           100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:63]                                  10709          1          -    Covered              
        bin auto[64:127]                                   11          1          -    Covered              
        bin auto[128:191]                                   9          1          -    Covered              
        bin auto[192:255]                                  13          1          -    Covered              
        bin auto[256:319]                                  12          1          -    Covered              
        bin auto[320:383]                                  10          1          -    Covered              
        bin auto[384:447]                                   4          1          -    Covered              
        bin auto[448:511]                                   9          1          -    Covered              
        bin auto[512:575]                                   7          1          -    Covered              
        bin auto[576:639]                                  11          1          -    Covered              
        bin auto[640:703]                                  19          1          -    Covered              
        bin auto[704:767]                                   6          1          -    Covered              
        bin auto[768:831]                                   7          1          -    Covered              
        bin auto[832:895]                                   4          1          -    Covered              
        bin auto[896:959]                                   9          1          -    Covered              
        bin auto[960:1023]                                  6          1          -    Covered              
        bin auto[1024:1087]                                 8          1          -    Covered              
        bin auto[1088:1151]                                10          1          -    Covered              
        bin auto[1152:1215]                                10          1          -    Covered              
        bin auto[1216:1279]                                 4          1          -    Covered              
        bin auto[1280:1343]                                 7          1          -    Covered              
        bin auto[1344:1407]                                 6          1          -    Covered              
        bin auto[1408:1471]                                 9          1          -    Covered              
        bin auto[1472:1535]                                16          1          -    Covered              
        bin auto[1536:1599]                                 6          1          -    Covered              
        bin auto[1600:1663]                                14          1          -    Covered              
        bin auto[1664:1727]                                13          1          -    Covered              
        bin auto[1728:1791]                                 6          1          -    Covered              
        bin auto[1792:1855]                                16          1          -    Covered              
        bin auto[1856:1919]                                10          1          -    Covered              
        bin auto[1920:1983]                                15          1          -    Covered              
        bin auto[1984:2047]                                14          1          -    Covered              
        bin auto[2048:2111]                                 5          1          -    Covered              
        bin auto[2112:2175]                                10          1          -    Covered              
        bin auto[2176:2239]                                16          1          -    Covered              
        bin auto[2240:2303]                                18          1          -    Covered              
        bin auto[2304:2367]                                 7          1          -    Covered              
        bin auto[2368:2431]                                11          1          -    Covered              
        bin auto[2432:2495]                                12          1          -    Covered              
        bin auto[2496:2559]                                 7          1          -    Covered              
        bin auto[2560:2623]                                12          1          -    Covered              
        bin auto[2624:2687]                                 8          1          -    Covered              
        bin auto[2688:2751]                                12          1          -    Covered              
        bin auto[2752:2815]                                 7          1          -    Covered              
        bin auto[2816:2879]                                10          1          -    Covered              
        bin auto[2880:2943]                                10          1          -    Covered              
        bin auto[2944:3007]                                 6          1          -    Covered              
        bin auto[3008:3071]                                 4          1          -    Covered              
        bin auto[3072:3135]                                 2          1          -    Covered              
        bin auto[3136:3199]                                14          1          -    Covered              
        bin auto[3200:3263]                                16          1          -    Covered              
        bin auto[3264:3327]                                11          1          -    Covered              
        bin auto[3328:3391]                                 9          1          -    Covered              
        bin auto[3392:3455]                                14          1          -    Covered              
        bin auto[3456:3519]                                 9          1          -    Covered              
        bin auto[3520:3583]                                 5          1          -    Covered              
        bin auto[3584:3647]                                12          1          -    Covered              
        bin auto[3648:3711]                                 6          1          -    Covered              
        bin auto[3712:3775]                                10          1          -    Covered              
        bin auto[3776:3839]                                 8          1          -    Covered              
        bin auto[3840:3903]                                 8          1          -    Covered              
        bin auto[3904:3967]                                 6          1          -    Covered              
        bin auto[3968:4031]                                 8          1          -    Covered              
        bin auto[4032:4095]                                11          1          -    Covered              
    Coverpoint send_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      6093          1          -    Covered              
        bin auto[1]                                      5221          1          -    Covered              
    Coverpoint receive_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5189          1          -    Covered              
        bin auto[1]                                      6125          1          -    Covered              
    Coverpoint no_order_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      6734          1          -    Covered              
        bin auto[1]                                      4580          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ones,auto[4227858432:4294967295]>        164          1          -    Covered              
            bin <ones,auto[4160749568:4227858431]>        187          1          -    Covered              
            bin <ones,auto[4093640704:4160749567]>        187          1          -    Covered              
            bin <ones,auto[4026531840:4093640703]>        200          1          -    Covered              
            bin <ones,auto[3959422976:4026531839]>        192          1          -    Covered              
            bin <ones,auto[3892314112:3959422975]>        165          1          -    Covered              
            bin <ones,auto[3825205248:3892314111]>        168          1          -    Covered              
            bin <ones,auto[3758096384:3825205247]>        162          1          -    Covered              
            bin <ones,auto[3690987520:3758096383]>        159          1          -    Covered              
            bin <ones,auto[3623878656:3690987519]>        162          1          -    Covered              
            bin <ones,auto[3556769792:3623878655]>        188          1          -    Covered              
            bin <ones,auto[3489660928:3556769791]>        165          1          -    Covered              
            bin <ones,auto[3422552064:3489660927]>        156          1          -    Covered              
            bin <ones,auto[3355443200:3422552063]>        166          1          -    Covered              
            bin <ones,auto[3288334336:3355443199]>        154          1          -    Covered              
            bin <ones,auto[3221225472:3288334335]>        157          1          -    Covered              
            bin <ones,auto[3154116608:3221225471]>        193          1          -    Covered              
            bin <ones,auto[3087007744:3154116607]>        162          1          -    Covered              
            bin <ones,auto[3019898880:3087007743]>        166          1          -    Covered              
            bin <ones,auto[2952790016:3019898879]>        162          1          -    Covered              
            bin <ones,auto[2885681152:2952790015]>        178          1          -    Covered              
            bin <ones,auto[2818572288:2885681151]>        184          1          -    Covered              
            bin <ones,auto[2751463424:2818572287]>        162          1          -    Covered              
            bin <ones,auto[2684354560:2751463423]>        195          1          -    Covered              
            bin <ones,auto[2617245696:2684354559]>        175          1          -    Covered              
            bin <ones,auto[2550136832:2617245695]>        175          1          -    Covered              
            bin <ones,auto[2483027968:2550136831]>        156          1          -    Covered              
            bin <ones,auto[2415919104:2483027967]>        182          1          -    Covered              
            bin <ones,auto[2348810240:2415919103]>        164          1          -    Covered              
            bin <ones,auto[2281701376:2348810239]>        164          1          -    Covered              
            bin <ones,auto[2214592512:2281701375]>        176          1          -    Covered              
            bin <ones,auto[2147483648:2214592511]>        187          1          -    Covered              
            bin <ones,auto[2080374784:2147483647]>        164          1          -    Covered              
            bin <ones,auto[2013265920:2080374783]>        168          1          -    Covered              
            bin <ones,auto[1946157056:2013265919]>        164          1          -    Covered              
            bin <ones,auto[1879048192:1946157055]>        174          1          -    Covered              
            bin <ones,auto[1811939328:1879048191]>        156          1          -    Covered              
            bin <ones,auto[1744830464:1811939327]>        154          1          -    Covered              
            bin <ones,auto[1677721600:1744830463]>        182          1          -    Covered              
            bin <ones,auto[1610612736:1677721599]>        176          1          -    Covered              
            bin <ones,auto[1543503872:1610612735]>        167          1          -    Covered              
            bin <ones,auto[1476395008:1543503871]>        161          1          -    Covered              
            bin <ones,auto[1409286144:1476395007]>        180          1          -    Covered              
            bin <ones,auto[1342177280:1409286143]>        149          1          -    Covered              
            bin <ones,auto[1275068416:1342177279]>        155          1          -    Covered              
            bin <ones,auto[1207959552:1275068415]>        163          1          -    Covered              
            bin <ones,auto[1140850688:1207959551]>        165          1          -    Covered              
            bin <ones,auto[1073741824:1140850687]>        165          1          -    Covered              
            bin <ones,auto[1006632960:1073741823]>        144          1          -    Covered              
            bin <ones,auto[939524096:1006632959]>         160          1          -    Covered              
            bin <ones,auto[872415232:939524095]>          164          1          -    Covered              
            bin <ones,auto[805306368:872415231]>          167          1          -    Covered              
            bin <ones,auto[738197504:805306367]>          165          1          -    Covered              
            bin <ones,auto[671088640:738197503]>          153          1          -    Covered              
            bin <ones,auto[603979776:671088639]>          152          1          -    Covered              
            bin <ones,auto[536870912:603979775]>          194          1          -    Covered              
            bin <ones,auto[469762048:536870911]>          176          1          -    Covered              
            bin <ones,auto[402653184:469762047]>          187          1          -    Covered              
            bin <ones,auto[335544320:402653183]>          158          1          -    Covered              
            bin <ones,auto[268435456:335544319]>          163          1          -    Covered              
            bin <ones,auto[201326592:268435455]>          155          1          -    Covered              
            bin <ones,auto[134217728:201326591]>          186          1          -    Covered              
            bin <ones,auto[67108864:134217727]>           172          1          -    Covered              
            bin <ones,auto[0:67108863]>                   161          1          -    Covered              
            bin <zeros,auto[4227858432:4294967295]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[4160749568:4227858431]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[4093640704:4160749567]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[4026531840:4093640703]> 
                                                            5          1          -    Covered              
            bin <zeros,auto[3959422976:4026531839]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[3892314112:3959422975]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[3825205248:3892314111]> 
                                                           13          1          -    Covered              
            bin <zeros,auto[3758096384:3825205247]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[3690987520:3758096383]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3623878656:3690987519]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3556769792:3623878655]> 
                                                           11          1          -    Covered              
            bin <zeros,auto[3489660928:3556769791]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3422552064:3489660927]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[3355443200:3422552063]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[3288334336:3355443199]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3221225472:3288334335]> 
                                                           11          1          -    Covered              
            bin <zeros,auto[3154116608:3221225471]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3087007744:3154116607]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[3019898880:3087007743]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[2952790016:3019898879]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[2885681152:2952790015]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[2818572288:2885681151]> 
                                                           14          1          -    Covered              
            bin <zeros,auto[2751463424:2818572287]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[2684354560:2751463423]> 
                                                            5          1          -    Covered              
            bin <zeros,auto[2617245696:2684354559]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[2550136832:2617245695]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[2483027968:2550136831]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[2415919104:2483027967]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[2348810240:2415919103]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[2281701376:2348810239]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[2214592512:2281701375]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[2147483648:2214592511]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[2080374784:2147483647]> 
                                                           11          1          -    Covered              
            bin <zeros,auto[2013265920:2080374783]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[1946157056:2013265919]> 
                                                            5          1          -    Covered              
            bin <zeros,auto[1879048192:1946157055]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[1811939328:1879048191]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[1744830464:1811939327]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1677721600:1744830463]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1610612736:1677721599]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1543503872:1610612735]> 
                                                            3          1          -    Covered              
            bin <zeros,auto[1476395008:1543503871]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[1409286144:1476395007]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[1342177280:1409286143]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[1275068416:1342177279]> 
                                                           13          1          -    Covered              
            bin <zeros,auto[1207959552:1275068415]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1140850688:1207959551]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[1073741824:1140850687]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[1006632960:1073741823]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[939524096:1006632959]>          7          1          -    Covered              
            bin <zeros,auto[872415232:939524095]>          11          1          -    Covered              
            bin <zeros,auto[805306368:872415231]>           7          1          -    Covered              
            bin <zeros,auto[738197504:805306367]>          11          1          -    Covered              
            bin <zeros,auto[671088640:738197503]>          10          1          -    Covered              
            bin <zeros,auto[603979776:671088639]>           8          1          -    Covered              
            bin <zeros,auto[536870912:603979775]>           7          1          -    Covered              
            bin <zeros,auto[469762048:536870911]>           5          1          -    Covered              
            bin <zeros,auto[402653184:469762047]>           6          1          -    Covered              
            bin <zeros,auto[335544320:402653183]>           8          1          -    Covered              
            bin <zeros,auto[268435456:335544319]>           8          1          -    Covered              
            bin <zeros,auto[201326592:268435455]>           6          1          -    Covered              
            bin <zeros,auto[134217728:201326591]>           3          1          -    Covered              
            bin <zeros,auto[67108864:134217727]>           10          1          -    Covered              
            bin <zeros,auto[0:67108863]>                    6          1          -    Covered              
    Cross #cross__1#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[4032:4095]>                   2          1          -    Covered              
            bin <auto[0],auto[4032:4095]>                   9          1          -    Covered              
            bin <auto[1],auto[3968:4031]>                   1          1          -    Covered              
            bin <auto[0],auto[3968:4031]>                   7          1          -    Covered              
            bin <auto[1],auto[3904:3967]>                   5          1          -    Covered              
            bin <auto[0],auto[3904:3967]>                   1          1          -    Covered              
            bin <auto[1],auto[3840:3903]>                   4          1          -    Covered              
            bin <auto[0],auto[3840:3903]>                   4          1          -    Covered              
            bin <auto[1],auto[3776:3839]>                   4          1          -    Covered              
            bin <auto[0],auto[3776:3839]>                   4          1          -    Covered              
            bin <auto[1],auto[3712:3775]>                   3          1          -    Covered              
            bin <auto[0],auto[3712:3775]>                   7          1          -    Covered              
            bin <auto[1],auto[3648:3711]>                   2          1          -    Covered              
            bin <auto[0],auto[3648:3711]>                   4          1          -    Covered              
            bin <auto[1],auto[3584:3647]>                   4          1          -    Covered              
            bin <auto[0],auto[3584:3647]>                   8          1          -    Covered              
            bin <auto[1],auto[3520:3583]>                   1          1          -    Covered              
            bin <auto[0],auto[3520:3583]>                   4          1          -    Covered              
            bin <auto[1],auto[3456:3519]>                   5          1          -    Covered              
            bin <auto[0],auto[3456:3519]>                   4          1          -    Covered              
            bin <auto[1],auto[3392:3455]>                   8          1          -    Covered              
            bin <auto[0],auto[3392:3455]>                   6          1          -    Covered              
            bin <auto[1],auto[3328:3391]>                   8          1          -    Covered              
            bin <auto[0],auto[3328:3391]>                   1          1          -    Covered              
            bin <auto[1],auto[3264:3327]>                   6          1          -    Covered              
            bin <auto[0],auto[3264:3327]>                   5          1          -    Covered              
            bin <auto[1],auto[3200:3263]>                   7          1          -    Covered              
            bin <auto[0],auto[3200:3263]>                   9          1          -    Covered              
            bin <auto[1],auto[3136:3199]>                   7          1          -    Covered              
            bin <auto[0],auto[3136:3199]>                   7          1          -    Covered              
            bin <auto[1],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[0],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[1],auto[3008:3071]>                   2          1          -    Covered              
            bin <auto[0],auto[3008:3071]>                   2          1          -    Covered              
            bin <auto[1],auto[2944:3007]>                   4          1          -    Covered              
            bin <auto[0],auto[2944:3007]>                   2          1          -    Covered              
            bin <auto[1],auto[2880:2943]>                   2          1          -    Covered              
            bin <auto[0],auto[2880:2943]>                   8          1          -    Covered              
            bin <auto[1],auto[2816:2879]>                   8          1          -    Covered              
            bin <auto[0],auto[2816:2879]>                   2          1          -    Covered              
            bin <auto[1],auto[2752:2815]>                   6          1          -    Covered              
            bin <auto[0],auto[2752:2815]>                   1          1          -    Covered              
            bin <auto[1],auto[2688:2751]>                   5          1          -    Covered              
            bin <auto[0],auto[2688:2751]>                   7          1          -    Covered              
            bin <auto[1],auto[2624:2687]>                   4          1          -    Covered              
            bin <auto[0],auto[2624:2687]>                   4          1          -    Covered              
            bin <auto[1],auto[2560:2623]>                   6          1          -    Covered              
            bin <auto[0],auto[2560:2623]>                   6          1          -    Covered              
            bin <auto[1],auto[2496:2559]>                   5          1          -    Covered              
            bin <auto[0],auto[2496:2559]>                   2          1          -    Covered              
            bin <auto[1],auto[2432:2495]>                   6          1          -    Covered              
            bin <auto[0],auto[2432:2495]>                   6          1          -    Covered              
            bin <auto[1],auto[2368:2431]>                   5          1          -    Covered              
            bin <auto[0],auto[2368:2431]>                   6          1          -    Covered              
            bin <auto[1],auto[2304:2367]>                   6          1          -    Covered              
            bin <auto[0],auto[2304:2367]>                   1          1          -    Covered              
            bin <auto[1],auto[2240:2303]>                   9          1          -    Covered              
            bin <auto[0],auto[2240:2303]>                   9          1          -    Covered              
            bin <auto[1],auto[2176:2239]>                   6          1          -    Covered              
            bin <auto[0],auto[2176:2239]>                  10          1          -    Covered              
            bin <auto[1],auto[2112:2175]>                   6          1          -    Covered              
            bin <auto[0],auto[2112:2175]>                   4          1          -    Covered              
            bin <auto[1],auto[2048:2111]>                   3          1          -    Covered              
            bin <auto[0],auto[2048:2111]>                   2          1          -    Covered              
            bin <auto[1],auto[1984:2047]>                   8          1          -    Covered              
            bin <auto[0],auto[1984:2047]>                   6          1          -    Covered              
            bin <auto[1],auto[1920:1983]>                   9          1          -    Covered              
            bin <auto[0],auto[1920:1983]>                   6          1          -    Covered              
            bin <auto[1],auto[1856:1919]>                   8          1          -    Covered              
            bin <auto[0],auto[1856:1919]>                   2          1          -    Covered              
            bin <auto[1],auto[1792:1855]>                  10          1          -    Covered              
            bin <auto[0],auto[1792:1855]>                   6          1          -    Covered              
            bin <auto[1],auto[1728:1791]>                   5          1          -    Covered              
            bin <auto[0],auto[1728:1791]>                   1          1          -    Covered              
            bin <auto[1],auto[1664:1727]>                   5          1          -    Covered              
            bin <auto[0],auto[1664:1727]>                   8          1          -    Covered              
            bin <auto[1],auto[1600:1663]>                   4          1          -    Covered              
            bin <auto[0],auto[1600:1663]>                  10          1          -    Covered              
            bin <auto[1],auto[1536:1599]>                   2          1          -    Covered              
            bin <auto[0],auto[1536:1599]>                   4          1          -    Covered              
            bin <auto[1],auto[1472:1535]>                   5          1          -    Covered              
            bin <auto[0],auto[1472:1535]>                  11          1          -    Covered              
            bin <auto[1],auto[1408:1471]>                   3          1          -    Covered              
            bin <auto[0],auto[1408:1471]>                   6          1          -    Covered              
            bin <auto[1],auto[1344:1407]>                   1          1          -    Covered              
            bin <auto[0],auto[1344:1407]>                   5          1          -    Covered              
            bin <auto[1],auto[1280:1343]>                   5          1          -    Covered              
            bin <auto[0],auto[1280:1343]>                   2          1          -    Covered              
            bin <auto[1],auto[1216:1279]>                   2          1          -    Covered              
            bin <auto[0],auto[1216:1279]>                   2          1          -    Covered              
            bin <auto[1],auto[1152:1215]>                   6          1          -    Covered              
            bin <auto[0],auto[1152:1215]>                   4          1          -    Covered              
            bin <auto[1],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[0],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[1],auto[1024:1087]>                   4          1          -    Covered              
            bin <auto[0],auto[1024:1087]>                   4          1          -    Covered              
            bin <auto[1],auto[960:1023]>                    4          1          -    Covered              
            bin <auto[0],auto[960:1023]>                    2          1          -    Covered              
            bin <auto[1],auto[896:959]>                     4          1          -    Covered              
            bin <auto[0],auto[896:959]>                     5          1          -    Covered              
            bin <auto[1],auto[832:895]>                     2          1          -    Covered              
            bin <auto[0],auto[832:895]>                     2          1          -    Covered              
            bin <auto[1],auto[768:831]>                     5          1          -    Covered              
            bin <auto[0],auto[768:831]>                     2          1          -    Covered              
            bin <auto[1],auto[704:767]>                     4          1          -    Covered              
            bin <auto[0],auto[704:767]>                     2          1          -    Covered              
            bin <auto[1],auto[640:703]>                     7          1          -    Covered              
            bin <auto[0],auto[640:703]>                    12          1          -    Covered              
            bin <auto[1],auto[576:639]>                     4          1          -    Covered              
            bin <auto[0],auto[576:639]>                     7          1          -    Covered              
            bin <auto[1],auto[512:575]>                     5          1          -    Covered              
            bin <auto[0],auto[512:575]>                     2          1          -    Covered              
            bin <auto[1],auto[448:511]>                     3          1          -    Covered              
            bin <auto[0],auto[448:511]>                     6          1          -    Covered              
            bin <auto[1],auto[384:447]>                     2          1          -    Covered              
            bin <auto[0],auto[384:447]>                     2          1          -    Covered              
            bin <auto[1],auto[320:383]>                     4          1          -    Covered              
            bin <auto[0],auto[320:383]>                     6          1          -    Covered              
            bin <auto[1],auto[256:319]>                     7          1          -    Covered              
            bin <auto[0],auto[256:319]>                     5          1          -    Covered              
            bin <auto[1],auto[192:255]>                     5          1          -    Covered              
            bin <auto[0],auto[192:255]>                     8          1          -    Covered              
            bin <auto[1],auto[128:191]>                     6          1          -    Covered              
            bin <auto[0],auto[128:191]>                     3          1          -    Covered              
            bin <auto[1],auto[64:127]>                      5          1          -    Covered              
            bin <auto[0],auto[64:127]>                      6          1          -    Covered              
            bin <auto[1],auto[0:63]>                     5285          1          -    Covered              
            bin <auto[0],auto[0:63]>                     5424          1          -    Covered              
    Cross #cross__2#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[4032:4095]>                   4          1          -    Covered              
            bin <auto[0],auto[4032:4095]>                   7          1          -    Covered              
            bin <auto[1],auto[3968:4031]>                   2          1          -    Covered              
            bin <auto[0],auto[3968:4031]>                   6          1          -    Covered              
            bin <auto[1],auto[3904:3967]>                   5          1          -    Covered              
            bin <auto[0],auto[3904:3967]>                   1          1          -    Covered              
            bin <auto[1],auto[3840:3903]>                   3          1          -    Covered              
            bin <auto[0],auto[3840:3903]>                   5          1          -    Covered              
            bin <auto[1],auto[3776:3839]>                   3          1          -    Covered              
            bin <auto[0],auto[3776:3839]>                   5          1          -    Covered              
            bin <auto[1],auto[3712:3775]>                   6          1          -    Covered              
            bin <auto[0],auto[3712:3775]>                   4          1          -    Covered              
            bin <auto[1],auto[3648:3711]>                   3          1          -    Covered              
            bin <auto[0],auto[3648:3711]>                   3          1          -    Covered              
            bin <auto[1],auto[3584:3647]>                   7          1          -    Covered              
            bin <auto[0],auto[3584:3647]>                   5          1          -    Covered              
            bin <auto[1],auto[3520:3583]>                   1          1          -    Covered              
            bin <auto[0],auto[3520:3583]>                   4          1          -    Covered              
            bin <auto[1],auto[3456:3519]>                   3          1          -    Covered              
            bin <auto[0],auto[3456:3519]>                   6          1          -    Covered              
            bin <auto[1],auto[3392:3455]>                   8          1          -    Covered              
            bin <auto[0],auto[3392:3455]>                   6          1          -    Covered              
            bin <auto[1],auto[3328:3391]>                   6          1          -    Covered              
            bin <auto[0],auto[3328:3391]>                   3          1          -    Covered              
            bin <auto[1],auto[3264:3327]>                   5          1          -    Covered              
            bin <auto[0],auto[3264:3327]>                   6          1          -    Covered              
            bin <auto[1],auto[3200:3263]>                   8          1          -    Covered              
            bin <auto[0],auto[3200:3263]>                   8          1          -    Covered              
            bin <auto[1],auto[3136:3199]>                   8          1          -    Covered              
            bin <auto[0],auto[3136:3199]>                   6          1          -    Covered              
            bin <auto[1],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[0],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[1],auto[3008:3071]>                   1          1          -    Covered              
            bin <auto[0],auto[3008:3071]>                   3          1          -    Covered              
            bin <auto[1],auto[2944:3007]>                   1          1          -    Covered              
            bin <auto[0],auto[2944:3007]>                   5          1          -    Covered              
            bin <auto[1],auto[2880:2943]>                   4          1          -    Covered              
            bin <auto[0],auto[2880:2943]>                   6          1          -    Covered              
            bin <auto[1],auto[2816:2879]>                   5          1          -    Covered              
            bin <auto[0],auto[2816:2879]>                   5          1          -    Covered              
            bin <auto[1],auto[2752:2815]>                   3          1          -    Covered              
            bin <auto[0],auto[2752:2815]>                   4          1          -    Covered              
            bin <auto[1],auto[2688:2751]>                   7          1          -    Covered              
            bin <auto[0],auto[2688:2751]>                   5          1          -    Covered              
            bin <auto[1],auto[2624:2687]>                   5          1          -    Covered              
            bin <auto[0],auto[2624:2687]>                   3          1          -    Covered              
            bin <auto[1],auto[2560:2623]>                   9          1          -    Covered              
            bin <auto[0],auto[2560:2623]>                   3          1          -    Covered              
            bin <auto[1],auto[2496:2559]>                   2          1          -    Covered              
            bin <auto[0],auto[2496:2559]>                   5          1          -    Covered              
            bin <auto[1],auto[2432:2495]>                   5          1          -    Covered              
            bin <auto[0],auto[2432:2495]>                   7          1          -    Covered              
            bin <auto[1],auto[2368:2431]>                   7          1          -    Covered              
            bin <auto[0],auto[2368:2431]>                   4          1          -    Covered              
            bin <auto[1],auto[2304:2367]>                   4          1          -    Covered              
            bin <auto[0],auto[2304:2367]>                   3          1          -    Covered              
            bin <auto[1],auto[2240:2303]>                   7          1          -    Covered              
            bin <auto[0],auto[2240:2303]>                  11          1          -    Covered              
            bin <auto[1],auto[2176:2239]>                   9          1          -    Covered              
            bin <auto[0],auto[2176:2239]>                   7          1          -    Covered              
            bin <auto[1],auto[2112:2175]>                   1          1          -    Covered              
            bin <auto[0],auto[2112:2175]>                   9          1          -    Covered              
            bin <auto[1],auto[2048:2111]>                   1          1          -    Covered              
            bin <auto[0],auto[2048:2111]>                   4          1          -    Covered              
            bin <auto[1],auto[1984:2047]>                   4          1          -    Covered              
            bin <auto[0],auto[1984:2047]>                  10          1          -    Covered              
            bin <auto[1],auto[1920:1983]>                   5          1          -    Covered              
            bin <auto[0],auto[1920:1983]>                  10          1          -    Covered              
            bin <auto[1],auto[1856:1919]>                   8          1          -    Covered              
            bin <auto[0],auto[1856:1919]>                   2          1          -    Covered              
            bin <auto[1],auto[1792:1855]>                  10          1          -    Covered              
            bin <auto[0],auto[1792:1855]>                   6          1          -    Covered              
            bin <auto[1],auto[1728:1791]>                   1          1          -    Covered              
            bin <auto[0],auto[1728:1791]>                   5          1          -    Covered              
            bin <auto[1],auto[1664:1727]>                   5          1          -    Covered              
            bin <auto[0],auto[1664:1727]>                   8          1          -    Covered              
            bin <auto[1],auto[1600:1663]>                   8          1          -    Covered              
            bin <auto[0],auto[1600:1663]>                   6          1          -    Covered              
            bin <auto[1],auto[1536:1599]>                   3          1          -    Covered              
            bin <auto[0],auto[1536:1599]>                   3          1          -    Covered              
            bin <auto[1],auto[1472:1535]>                   6          1          -    Covered              
            bin <auto[0],auto[1472:1535]>                  10          1          -    Covered              
            bin <auto[1],auto[1408:1471]>                   6          1          -    Covered              
            bin <auto[0],auto[1408:1471]>                   3          1          -    Covered              
            bin <auto[1],auto[1344:1407]>                   3          1          -    Covered              
            bin <auto[0],auto[1344:1407]>                   3          1          -    Covered              
            bin <auto[1],auto[1280:1343]>                   4          1          -    Covered              
            bin <auto[0],auto[1280:1343]>                   3          1          -    Covered              
            bin <auto[1],auto[1216:1279]>                   3          1          -    Covered              
            bin <auto[0],auto[1216:1279]>                   1          1          -    Covered              
            bin <auto[1],auto[1152:1215]>                   7          1          -    Covered              
            bin <auto[0],auto[1152:1215]>                   3          1          -    Covered              
            bin <auto[1],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[0],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[1],auto[1024:1087]>                   5          1          -    Covered              
            bin <auto[0],auto[1024:1087]>                   3          1          -    Covered              
            bin <auto[1],auto[960:1023]>                    4          1          -    Covered              
            bin <auto[0],auto[960:1023]>                    2          1          -    Covered              
            bin <auto[1],auto[896:959]>                     6          1          -    Covered              
            bin <auto[0],auto[896:959]>                     3          1          -    Covered              
            bin <auto[1],auto[832:895]>                     3          1          -    Covered              
            bin <auto[0],auto[832:895]>                     1          1          -    Covered              
            bin <auto[1],auto[768:831]>                     3          1          -    Covered              
            bin <auto[0],auto[768:831]>                     4          1          -    Covered              
            bin <auto[1],auto[704:767]>                     1          1          -    Covered              
            bin <auto[0],auto[704:767]>                     5          1          -    Covered              
            bin <auto[1],auto[640:703]>                     8          1          -    Covered              
            bin <auto[0],auto[640:703]>                    11          1          -    Covered              
            bin <auto[1],auto[576:639]>                     4          1          -    Covered              
            bin <auto[0],auto[576:639]>                     7          1          -    Covered              
            bin <auto[1],auto[512:575]>                     3          1          -    Covered              
            bin <auto[0],auto[512:575]>                     4          1          -    Covered              
            bin <auto[1],auto[448:511]>                     6          1          -    Covered              
            bin <auto[0],auto[448:511]>                     3          1          -    Covered              
            bin <auto[1],auto[384:447]>                     3          1          -    Covered              
            bin <auto[0],auto[384:447]>                     1          1          -    Covered              
            bin <auto[1],auto[320:383]>                     7          1          -    Covered              
            bin <auto[0],auto[320:383]>                     3          1          -    Covered              
            bin <auto[1],auto[256:319]>                     8          1          -    Covered              
            bin <auto[0],auto[256:319]>                     4          1          -    Covered              
            bin <auto[1],auto[192:255]>                     5          1          -    Covered              
            bin <auto[0],auto[192:255]>                     8          1          -    Covered              
            bin <auto[1],auto[128:191]>                     3          1          -    Covered              
            bin <auto[0],auto[128:191]>                     6          1          -    Covered              
            bin <auto[1],auto[64:127]>                      4          1          -    Covered              
            bin <auto[0],auto[64:127]>                      7          1          -    Covered              
            bin <auto[1],auto[0:63]>                     5382          1          -    Covered              
            bin <auto[0],auto[0:63]>                     5327          1          -    Covered              
    Cross #cross__3#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[4227858432:4294967295]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[4227858432:4294967295]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[4160749568:4227858431]> 
                                                           84          1          -    Covered              
            bin <auto[0],auto[4160749568:4227858431]> 
                                                          112          1          -    Covered              
            bin <auto[1],auto[4093640704:4160749567]> 
                                                           80          1          -    Covered              
            bin <auto[0],auto[4093640704:4160749567]> 
                                                          111          1          -    Covered              
            bin <auto[1],auto[4026531840:4093640703]> 
                                                           87          1          -    Covered              
            bin <auto[0],auto[4026531840:4093640703]> 
                                                          118          1          -    Covered              
            bin <auto[1],auto[3959422976:4026531839]> 
                                                           75          1          -    Covered              
            bin <auto[0],auto[3959422976:4026531839]> 
                                                          127          1          -    Covered              
            bin <auto[1],auto[3892314112:3959422975]> 
                                                           64          1          -    Covered              
            bin <auto[0],auto[3892314112:3959422975]> 
                                                          111          1          -    Covered              
            bin <auto[1],auto[3825205248:3892314111]> 
                                                           81          1          -    Covered              
            bin <auto[0],auto[3825205248:3892314111]> 
                                                          100          1          -    Covered              
            bin <auto[1],auto[3758096384:3825205247]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[3758096384:3825205247]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[3690987520:3758096383]> 
                                                           72          1          -    Covered              
            bin <auto[0],auto[3690987520:3758096383]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[3623878656:3690987519]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[3623878656:3690987519]> 
                                                          101          1          -    Covered              
            bin <auto[1],auto[3556769792:3623878655]> 
                                                           86          1          -    Covered              
            bin <auto[0],auto[3556769792:3623878655]> 
                                                          113          1          -    Covered              
            bin <auto[1],auto[3489660928:3556769791]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[3489660928:3556769791]> 
                                                          105          1          -    Covered              
            bin <auto[1],auto[3422552064:3489660927]> 
                                                           68          1          -    Covered              
            bin <auto[0],auto[3422552064:3489660927]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[3355443200:3422552063]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[3355443200:3422552063]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[3288334336:3355443199]> 
                                                           66          1          -    Covered              
            bin <auto[0],auto[3288334336:3355443199]> 
                                                           97          1          -    Covered              
            bin <auto[1],auto[3221225472:3288334335]> 
                                                           66          1          -    Covered              
            bin <auto[0],auto[3221225472:3288334335]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[3154116608:3221225471]> 
                                                           84          1          -    Covered              
            bin <auto[0],auto[3154116608:3221225471]> 
                                                          118          1          -    Covered              
            bin <auto[1],auto[3087007744:3154116607]> 
                                                           63          1          -    Covered              
            bin <auto[0],auto[3087007744:3154116607]> 
                                                          109          1          -    Covered              
            bin <auto[1],auto[3019898880:3087007743]> 
                                                           71          1          -    Covered              
            bin <auto[0],auto[3019898880:3087007743]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[2952790016:3019898879]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[2952790016:3019898879]> 
                                                           92          1          -    Covered              
            bin <auto[1],auto[2885681152:2952790015]> 
                                                           83          1          -    Covered              
            bin <auto[0],auto[2885681152:2952790015]> 
                                                          101          1          -    Covered              
            bin <auto[1],auto[2818572288:2885681151]> 
                                                           90          1          -    Covered              
            bin <auto[0],auto[2818572288:2885681151]> 
                                                          108          1          -    Covered              
            bin <auto[1],auto[2751463424:2818572287]> 
                                                           74          1          -    Covered              
            bin <auto[0],auto[2751463424:2818572287]> 
                                                           94          1          -    Covered              
            bin <auto[1],auto[2684354560:2751463423]> 
                                                           71          1          -    Covered              
            bin <auto[0],auto[2684354560:2751463423]> 
                                                          129          1          -    Covered              
            bin <auto[1],auto[2617245696:2684354559]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[2617245696:2684354559]> 
                                                          113          1          -    Covered              
            bin <auto[1],auto[2550136832:2617245695]> 
                                                           65          1          -    Covered              
            bin <auto[0],auto[2550136832:2617245695]> 
                                                          117          1          -    Covered              
            bin <auto[1],auto[2483027968:2550136831]> 
                                                           59          1          -    Covered              
            bin <auto[0],auto[2483027968:2550136831]> 
                                                          105          1          -    Covered              
            bin <auto[1],auto[2415919104:2483027967]> 
                                                           90          1          -    Covered              
            bin <auto[0],auto[2415919104:2483027967]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[2348810240:2415919103]> 
                                                           50          1          -    Covered              
            bin <auto[0],auto[2348810240:2415919103]> 
                                                          118          1          -    Covered              
            bin <auto[1],auto[2281701376:2348810239]> 
                                                           62          1          -    Covered              
            bin <auto[0],auto[2281701376:2348810239]> 
                                                          106          1          -    Covered              
            bin <auto[1],auto[2214592512:2281701375]> 
                                                           63          1          -    Covered              
            bin <auto[0],auto[2214592512:2281701375]> 
                                                          121          1          -    Covered              
            bin <auto[1],auto[2147483648:2214592511]> 
                                                           80          1          -    Covered              
            bin <auto[0],auto[2147483648:2214592511]> 
                                                          115          1          -    Covered              
            bin <auto[1],auto[2080374784:2147483647]> 
                                                           75          1          -    Covered              
            bin <auto[0],auto[2080374784:2147483647]> 
                                                          100          1          -    Covered              
            bin <auto[1],auto[2013265920:2080374783]> 
                                                           65          1          -    Covered              
            bin <auto[0],auto[2013265920:2080374783]> 
                                                          109          1          -    Covered              
            bin <auto[1],auto[1946157056:2013265919]> 
                                                           67          1          -    Covered              
            bin <auto[0],auto[1946157056:2013265919]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[1879048192:1946157055]> 
                                                           62          1          -    Covered              
            bin <auto[0],auto[1879048192:1946157055]> 
                                                          116          1          -    Covered              
            bin <auto[1],auto[1811939328:1879048191]> 
                                                           72          1          -    Covered              
            bin <auto[0],auto[1811939328:1879048191]> 
                                                           94          1          -    Covered              
            bin <auto[1],auto[1744830464:1811939327]> 
                                                           63          1          -    Covered              
            bin <auto[0],auto[1744830464:1811939327]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[1677721600:1744830463]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[1677721600:1744830463]> 
                                                          120          1          -    Covered              
            bin <auto[1],auto[1610612736:1677721599]> 
                                                           75          1          -    Covered              
            bin <auto[0],auto[1610612736:1677721599]> 
                                                          108          1          -    Covered              
            bin <auto[1],auto[1543503872:1610612735]> 
                                                           81          1          -    Covered              
            bin <auto[0],auto[1543503872:1610612735]> 
                                                           89          1          -    Covered              
            bin <auto[1],auto[1476395008:1543503871]> 
                                                           73          1          -    Covered              
            bin <auto[0],auto[1476395008:1543503871]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[1409286144:1476395007]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[1409286144:1476395007]> 
                                                          116          1          -    Covered              
            bin <auto[1],auto[1342177280:1409286143]> 
                                                           65          1          -    Covered              
            bin <auto[0],auto[1342177280:1409286143]> 
                                                           92          1          -    Covered              
            bin <auto[1],auto[1275068416:1342177279]> 
                                                           67          1          -    Covered              
            bin <auto[0],auto[1275068416:1342177279]> 
                                                          101          1          -    Covered              
            bin <auto[1],auto[1207959552:1275068415]> 
                                                           66          1          -    Covered              
            bin <auto[0],auto[1207959552:1275068415]> 
                                                          104          1          -    Covered              
            bin <auto[1],auto[1140850688:1207959551]> 
                                                           61          1          -    Covered              
            bin <auto[0],auto[1140850688:1207959551]> 
                                                          113          1          -    Covered              
            bin <auto[1],auto[1073741824:1140850687]> 
                                                           79          1          -    Covered              
            bin <auto[0],auto[1073741824:1140850687]> 
                                                           95          1          -    Covered              
            bin <auto[1],auto[1006632960:1073741823]> 
                                                           74          1          -    Covered              
            bin <auto[0],auto[1006632960:1073741823]> 
                                                           78          1          -    Covered              
            bin <auto[1],auto[939524096:1006632959]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[939524096:1006632959]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[872415232:939524095]> 
                                                           85          1          -    Covered              
            bin <auto[0],auto[872415232:939524095]> 
                                                           90          1          -    Covered              
            bin <auto[1],auto[805306368:872415231]> 
                                                           80          1          -    Covered              
            bin <auto[0],auto[805306368:872415231]> 
                                                           94          1          -    Covered              
            bin <auto[1],auto[738197504:805306367]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[738197504:805306367]> 
                                                          100          1          -    Covered              
            bin <auto[1],auto[671088640:738197503]> 
                                                           67          1          -    Covered              
            bin <auto[0],auto[671088640:738197503]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[603979776:671088639]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[603979776:671088639]> 
                                                           84          1          -    Covered              
            bin <auto[1],auto[536870912:603979775]> 
                                                           74          1          -    Covered              
            bin <auto[0],auto[536870912:603979775]> 
                                                          127          1          -    Covered              
            bin <auto[1],auto[469762048:536870911]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[469762048:536870911]> 
                                                          111          1          -    Covered              
            bin <auto[1],auto[402653184:469762047]> 
                                                           71          1          -    Covered              
            bin <auto[0],auto[402653184:469762047]> 
                                                          122          1          -    Covered              
            bin <auto[1],auto[335544320:402653183]> 
                                                           60          1          -    Covered              
            bin <auto[0],auto[335544320:402653183]> 
                                                          106          1          -    Covered              
            bin <auto[1],auto[268435456:335544319]> 
                                                           64          1          -    Covered              
            bin <auto[0],auto[268435456:335544319]> 
                                                          107          1          -    Covered              
            bin <auto[1],auto[201326592:268435455]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[201326592:268435455]> 
                                                           92          1          -    Covered              
            bin <auto[1],auto[134217728:201326591]> 
                                                           62          1          -    Covered              
            bin <auto[0],auto[134217728:201326591]> 
                                                          127          1          -    Covered              
            bin <auto[1],auto[67108864:134217727]>         67          1          -    Covered              
            bin <auto[0],auto[67108864:134217727]>        115          1          -    Covered              
            bin <auto[1],auto[0:67108863]>                 66          1          -    Covered              
            bin <auto[0],auto[0:67108863]>                101          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /sonar_coverage_collector_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File cvrgcllctr.svh
    1                                                package sonar_coverage_collector_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonar_sequence_item_pkg::*;
    5                                                class sonar_coverage_collector extends uvm_component;
    6               1                    ***0***         `uvm_component_utils(sonar_coverage_collector)
    6               2                    ***0***     
    6               3                          2     
    7                                                    uvm_analysis_export #(sonar_sequence_item) cov_export;
    8                                                    uvm_tlm_analysis_fifo #(sonar_sequence_item) cov_fifo;
    9                                                    sonar_sequence_item seq_item_cov;
    10                                               
    11                                                   covergroup cg ;
    12                                               reset_cp: coverpoint seq_item_cov.rst_n{
    13                                                   bins zeros={0};
    14                                               	bins ones={1};
    15                                               }
    16                                               controlword_cp: coverpoint seq_item_cov.received_data;
    17                                               
    18                                               cross reset_cp , controlword_cp;
    19                                               increase_cp: coverpoint seq_item_cov.received_data[2];
    20                                               decrease_cp: coverpoint seq_item_cov.received_data[3];
    21                                               
    22                                               outputDAC_cp: coverpoint seq_item_cov.outputDAC;
    23                                               
    24                                               cross increase_cp , outputDAC_cp;
    25                                               cross decrease_cp , outputDAC_cp;
    26                                               
    27                                               send_cp: coverpoint seq_item_cov.received_data[5];
    28                                               receive_cp: coverpoint seq_item_cov.received_data[4];
    29                                               
    30                                               no_order_cp: coverpoint seq_item_cov.no_order;
    31                                               
    32                                               cross no_order_cp , controlword_cp;
    33                                               
    34                                                   endgroup
    35                                               function new(string name="sonar_coverage_collector",uvm_component parent=null);
    36              1                          1         super.new(name,parent);
    37              1                          1         cg=new();
    38                                               endfunction
    39                                               
    40                                                
    41                                                function void build_phase(uvm_phase phase);
    42              1                          1         super.build_phase(phase);
    43              1                          1         cov_export=new("cov_export",this);
    44              1                          1         cov_fifo=new("cov_fifo",this);
    45                                                endfunction
    46                                               
    47                                                function void connect_phase(uvm_phase phase);
    48              1                          1         super.connect_phase(phase);
    49              1                          1         cov_export.connect(cov_fifo.analysis_export);
    50                                                endfunction
    51                                               
    52                                               
    53                                                task run_phase(uvm_phase phase);
    54              1                          1         super.run_phase(phase);
    55              1                          1         forever begin
    56              1                      11315             cov_fifo.get(seq_item_cov);
    57              1                      11314             cg.sample();


=================================================================================
=== Instance: /sonar_config_pkg
=== Design Unit: work.sonar_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /sonar_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.svh
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***         `uvm_object_utils(sonar_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***         `uvm_object_utils(sonar_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***         `uvm_object_utils(sonar_config)
    5               4                    ***0***         `uvm_object_utils(sonar_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***         `uvm_object_utils(sonar_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***         `uvm_object_utils(sonar_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /sonar_config_pkg --

  File config.svh
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /sonar_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.svh
    1                                                package sonar_config_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class sonar_config extends uvm_object;
    5               1                    ***0***         `uvm_object_utils(sonar_config)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                    virtual sonar_inter sonar_vif_config;
    7                                                    virtual golden_inter_ref gold_vif_config; 
    8                                                    
    9                                                    function new (string name = "sonar_config");
    10              1                          1             super.new(name);


=================================================================================
=== Instance: /sonar_scoreboard_pkg
=== Design Unit: work.sonar_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        16         4        12    25.00%

================================Branch Details================================

Branch Coverage for instance /sonar_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.svh
------------------------------------IF Branch------------------------------------
    43                                     11314     Count coming in to IF
    43              1                    ***0***           if((seq_item_sb.no_order!=gold_vif_sb.no_order)||(seq_item_sb.outputDAC!=gold_vif_sb.outputDAC))begin
    53              1                      11314           else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    44                                   ***0***     Count coming in to IF
    44              1                    ***0***           if((seq_item_sb.no_order!=gold_vif_sb.no_order))begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              1                    ***0***              `uvm_error("runphase" , $sformatf("error no order at %0t",$time))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              1                    ***0***           if((seq_item_sb.outputDAC!=gold_vif_sb.outputDAC))begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                   ***0***     Count coming in to IF
    49              1                    ***0***              `uvm_error("runphase" , $sformatf("error outputDAC at %0t",$time))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                     11314     Count coming in to IF
    55              1                      11314              `uvm_info("run_phase", $sformatf("correct at %0t",$time), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                         1     Count coming in to IF
    63              1                          1             `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1             `uvm_info("report_phase",$sformatf("Total failed transactions: %0d ",error_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /sonar_scoreboard_pkg --

  File scoreboard.svh
----------------Focused Condition View-------------------
Line       43 Item    1  ((this.seq_item_sb.no_order != this.gold_vif_sb.no_order) || (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC))
Condition totals: 0 of 2 input terms covered = 0.00%

                                                  Input Term   Covered  Reason for no coverage   Hint
                                                 -----------  --------  -----------------------  --------------
    (this.seq_item_sb.no_order != this.gold_vif_sb.no_order)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                    Non-masking condition(s)      
 ---------  ---------  --------------------                                          -------------------------     
  Row   1:          1  (this.seq_item_sb.no_order != this.gold_vif_sb.no_order)_0    ~(this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)
  Row   2:    ***0***  (this.seq_item_sb.no_order != this.gold_vif_sb.no_order)_1    -                             
  Row   3:          1  (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)_0  ~(this.seq_item_sb.no_order != this.gold_vif_sb.no_order)
  Row   4:    ***0***  (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)_1  ~(this.seq_item_sb.no_order != this.gold_vif_sb.no_order)

----------------Focused Condition View-------------------
Line       44 Item    1  (this.seq_item_sb.no_order != this.gold_vif_sb.no_order)
Condition totals: 0 of 1 input term covered = 0.00%

                                                Input Term   Covered  Reason for no coverage   Hint
                                               -----------  --------  -----------------------  --------------
  (this.seq_item_sb.no_order != this.gold_vif_sb.no_order)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                  Non-masking condition(s)      
 ---------  ---------  --------------------                                        -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.no_order != this.gold_vif_sb.no_order)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.no_order != this.gold_vif_sb.no_order)_1  -                             

----------------Focused Condition View-------------------
Line       48 Item    1  (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)
Condition totals: 0 of 1 input term covered = 0.00%

                                                  Input Term   Covered  Reason for no coverage   Hint
                                                 -----------  --------  -----------------------  --------------
  (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                    Non-masking condition(s)      
 ---------  ---------  --------------------                                          -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.outputDAC != this.gold_vif_sb.outputDAC)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        18         6    75.00%

================================Statement Details================================

Statement Coverage for instance /sonar_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.svh
    1                                                package sonar_scoreboard_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonar_sequence_item_pkg::*;
    5                                                import sonar_config_pkg::*;
    6                                                parameter DATA_WIDTH = 32;
    7                                                class sonar_scoreboard extends uvm_scoreboard;
    8               1                    ***0***        `uvm_component_utils(sonar_scoreboard)
    8               2                    ***0***     
    8               3                          2     
    9                                                    uvm_analysis_export #(sonar_sequence_item) sb_export;
    10                                                   uvm_tlm_analysis_fifo #(sonar_sequence_item) sb_fifo;
    11                                                   sonar_sequence_item seq_item_sb;
    12                                                   virtual golden_inter_ref gold_vif_sb;
    13                                                   logic no_order_ref;
    14                                                   logic [FIFO_DATA-1:0] read_data_ref;
    15                                                   logic [11:0] outputDAC_ref;
    16              1                          1        int order_count_ref=0;
    17              1                          1        int error_count = 0;
    18              1                          1        int correct_count = 0;
    19                                               
    20                                               //constructor
    21                                                  function new(string name = "sonar_scoreboard", uvm_component parent = null);
    22              1                          1           super.new(name, parent);
    23                                                  endfunction
    24                                               
    25                                               //build phase
    26                                                  function void build_phase(uvm_phase phase);
    27              1                          1        super.build_phase(phase);
    28              1                          1             sb_export = new("sb_export",this);
    29              1                          1             sb_fifo = new("sb_fifo",this);
    30                                                  endfunction
    31                                               
    32                                               //connect phase  
    33                                                  function void connect_phase(uvm_phase phase);
    34              1                          1             super.connect_phase(phase);
    35              1                          1             sb_export.connect(sb_fifo.analysis_export);
    36                                                   endfunction
    37                                                  
    38                                               //run phase
    39                                                  task run_phase (uvm_phase phase);
    40              1                          1         super.run_phase(phase);
    41              1                          1         forever begin
    42              1                      11315           sb_fifo.get(seq_item_sb);
    43                                                     if((seq_item_sb.no_order!=gold_vif_sb.no_order)||(seq_item_sb.outputDAC!=gold_vif_sb.outputDAC))begin
    44                                                     if((seq_item_sb.no_order!=gold_vif_sb.no_order))begin
    45              1                    ***0***              `uvm_error("runphase" , $sformatf("error no order at %0t",$time))
    46              1                    ***0***              error_count++;
    47                                                     end
    48                                                     if((seq_item_sb.outputDAC!=gold_vif_sb.outputDAC))begin
    49              1                    ***0***              `uvm_error("runphase" , $sformatf("error outputDAC at %0t",$time))
    50              1                    ***0***              error_count++;
    51                                                     end
    52                                                     end
    53                                                     else begin
    54              1                      11314              correct_count++;
    55              1                      11314              `uvm_info("run_phase", $sformatf("correct at %0t",$time), UVM_MEDIUM)
    56                                                     end
    57                                                   end
    58                                                  endtask
    59                                               
    60                                               //report phase
    61                                                  function void report_phase(uvm_phase phase);
    62              1                          1             super.report_phase(phase);
    63              1                          1             `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    64              1                          1             `uvm_info("report_phase",$sformatf("Total failed transactions: %0d ",error_count),UVM_MEDIUM);


=================================================================================
=== Instance: /sonar_monitor_Pkg
=== Design Unit: work.sonar_monitor_Pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /sonar_monitor_Pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.svh
------------------------------------IF Branch------------------------------------
    38                                     11314     Count coming in to IF
    38              1                    ***0***              `uvm_info("run_Phase",rsp_seq_item.convert2string(),UVM_HIGH)
                                           11314     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        16         3    84.21%

================================Statement Details================================

Statement Coverage for instance /sonar_monitor_Pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.svh
    1                                                package sonar_monitor_Pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonar_sequence_item_pkg::*;
    5                                                
    6                                                class sonar_monitor extends uvm_monitor;
    7               1                    ***0***        `uvm_component_utils(sonar_monitor)
    7               2                    ***0***     
    7               3                          2     
    8                                                    virtual sonar_inter sonar_vif_monitor;
    9                                                    virtual golden_inter_ref gold_vif_monitor;
    10                                                   sonar_sequence_item rsp_seq_item;
    11                                                   uvm_analysis_port #(sonar_sequence_item) mon_ap;
    12                                               
    13                                                  function new(string name = "sonar_monitor", uvm_component parent = null);
    14              1                          1           super.new(name, parent);
    15                                                  endfunction
    16                                               
    17                                                  function void build_phase(uvm_phase phase);
    18              1                          1           super.build_phase(phase);
    19              1                          1           mon_ap = new("mon_ap",this);
    20                                                  endfunction : build_phase
    21                                               
    22                                               
    23                                                  task run_phase(uvm_phase phase);
    24              1                          1           super.run_phase(phase);
    25              1                          1           forever begin
    26              1                      11315              rsp_seq_item = sonar_sequence_item::type_id::create("rsp_seq_item");
    27              1                      11315              @(negedge sonar_vif_monitor.clk);
    28              1                      11314              rsp_seq_item.rst_n = sonar_vif_monitor.rst_n;
    29              1                      11314              rsp_seq_item.received_data = sonar_vif_monitor.received_data;
    30              1                      11314              rsp_seq_item.no_order = sonar_vif_monitor.no_order;
    31              1                      11314              rsp_seq_item.read_data = sonar_vif_monitor.read_data;
    32              1                      11314              rsp_seq_item.outputDAC = sonar_vif_monitor.outputDAC;
    33                                                        //
    34              1                      11314              rsp_seq_item.no_order_ref = gold_vif_monitor.no_order;
    35              1                      11314              rsp_seq_item.outputDAC_ref = gold_vif_monitor.outputDAC;
    36                                                        //
    37              1                      11314              mon_ap.write(rsp_seq_item);
    38              1                    ***0***              `uvm_info("run_Phase",rsp_seq_item.convert2string(),UVM_HIGH)


=================================================================================
=== Instance: /sonar_driver_pkg
=== Design Unit: work.sonar_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /sonar_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.svh
------------------------------------IF Branch------------------------------------
    21                                         1     Count coming in to IF
    21              1                    ***0***        if(!uvm_config_db #(sonar_config)::get(this , "" , "CFG" , sonar_cfg))begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              1                    ***0***           `uvm_fatal("build_phase","unable to get configuration object in the driver")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        13         3    81.25%

================================Statement Details================================

Statement Coverage for instance /sonar_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.svh
    1                                                package sonar_driver_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonar_config_pkg::*;
    5                                                import sonar_sequence_item_pkg::*;
    6                                                class sonar_driver extends uvm_driver#(sonar_sequence_item);
    7               1                    ***0***        `uvm_component_utils(sonar_driver)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    virtual sonar_inter sonar_vif_driver;
    10                                                   virtual golden_inter_ref gold_vif_driver;
    11                                                   sonar_config sonar_cfg;
    12                                                   sonar_sequence_item stim_seq_item;
    13                                               
    14                                                  function new(string name = "sonar_driver", uvm_component parent = null);
    15              1                          1           super.new(name, parent);
    16                                                  endfunction
    17                                               
    18                                                  function void build_phase(uvm_phase phase);
    19              1                          1        super.build_phase(phase);
    20                                               
    21                                                  if(!uvm_config_db #(sonar_config)::get(this , "" , "CFG" , sonar_cfg))begin
    22              1                    ***0***           `uvm_fatal("build_phase","unable to get configuration object in the driver")
    23                                                  end
    24                                                  endfunction
    25                                               
    26                                                  task run_phase(uvm_phase phase);
    27              1                          1        super.run_phase(phase);
    28              1                          1           forever begin
    29              1                      11315              stim_seq_item = sonar_sequence_item::type_id::create("stim_seq_item");
    30              1                      11315              seq_item_port.get_next_item(stim_seq_item);
    31              1                      11314              sonar_vif_driver.rst_n = stim_seq_item.rst_n;
    32              1                      11314              gold_vif_driver.rst_n = stim_seq_item.rst_n;
    33              1                      11314              sonar_vif_driver.received_data = stim_seq_item.received_data;
    34              1                      11314              gold_vif_driver.received_data = stim_seq_item.received_data;
    35              1                      11314              @(negedge sonar_vif_driver.clk);
    36              1                      11314              seq_item_port.item_done();


=================================================================================
=== Instance: /sonarsequencer_pkg
=== Design Unit: work.sonarsequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /sonarsequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequencer.svh
    1                                                package sonarsequencer_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonar_sequence_item_pkg::*;
    5                                                class sonar_sequencer extends uvm_sequencer#(sonar_sequence_item);
    6               1                    ***0***        `uvm_component_utils(sonar_sequencer)
    6               2                    ***0***     
    6               3                          2     
    7                                                    function new(string name="sonar_sequencer",uvm_component parent=null);
    8               1                          1          super.new(name,parent);


=================================================================================
=== Instance: /sonaragent_pkg
=== Design Unit: work.sonaragent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /sonaragent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.svh
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***           if(!uvm_config_db #(sonar_config)::get(this , "" , "CFG" , cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***             `uvm_fatal("build_phase" , "Unable to get configuration object in agent component")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        13         3    81.25%

================================Statement Details================================

Statement Coverage for instance /sonaragent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.svh
    1                                                package sonaragent_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonarsequencer_pkg::*;
    5                                                import sonar_driver_pkg::*;
    6                                                import sonar_monitor_Pkg::*;
    7                                                import sonar_config_pkg::*;
    8                                                import sonar_sequence_item_pkg::*;
    9                                                
    10                                               class sonar_agent extends uvm_agent;
    11              1                    ***0***        `uvm_component_utils(sonar_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                               
    13                                                  sonar_driver driver;
    14                                                  sonar_sequencer sequencer;
    15                                                  sonar_monitor monitor;
    16                                                  sonar_config cfg;
    17                                               
    18                                                  uvm_analysis_port #(sonar_sequence_item) agt_ap;
    19                                                  function new(string name = "sonar_agent", uvm_component parent = null);
    20              1                          1           super.new(name, parent);
    21                                                  endfunction
    22                                               
    23                                                  function void build_phase(uvm_phase phase);
    24              1                          1           super.build_phase(phase);
    25                                                     if(!uvm_config_db #(sonar_config)::get(this , "" , "CFG" , cfg))
    26              1                    ***0***             `uvm_fatal("build_phase" , "Unable to get configuration object in agent component")
    27                                                       //
    28              1                          1           driver = sonar_driver::new("driver", this);
    29              1                          1           sequencer = sonar_sequencer::new("sequencer", this);
    30              1                          1           monitor = sonar_monitor::new("monitor", this);
    31              1                          1           agt_ap = new("agt_ap",this);
    32                                                  endfunction
    33                                               
    34                                                  function void connect_phase (uvm_phase phase);
    35              1                          1        monitor.mon_ap.connect(agt_ap);
    36              1                          1        driver.sonar_vif_driver = cfg.sonar_vif_config;
    37              1                          1        driver.gold_vif_driver = cfg.gold_vif_config;
    38                                                  //
    39              1                          1        monitor.sonar_vif_monitor = cfg.sonar_vif_config;
    40              1                          1        monitor.gold_vif_monitor = cfg.gold_vif_config;
    41                                                  //
    42              1                          1        driver.seq_item_port.connect(sequencer.seq_item_export);


=================================================================================
=== Instance: /sonar_env_pkg
=== Design Unit: work.sonar_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /sonar_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File env.svh
    1                                                package sonar_env_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonaragent_pkg::*;
    5                                                import sonar_scoreboard_pkg::*;
    6                                                import sonar_coverage_collector_pkg::*;
    7                                                class sonar_env extends uvm_env;
    8               1                    ***0***      `uvm_component_utils(sonar_env)
    8               2                    ***0***     
    8               3                          2     
    9                                                 sonar_agent agt;
    10                                                sonar_scoreboard sb;
    11                                                sonar_coverage_collector cov;
    12                                                  function new(string name = "sonar_env", uvm_component parent = null);
    13              1                          1           super.new(name, parent);
    14                                                  endfunction
    15                                               
    16                                                   function void build_phase(uvm_phase phase);
    17                                               
    18              1                          1            super.build_phase(phase);
    19              1                          1            agt = sonar_agent::type_id::create("agt",this);
    20              1                          1            sb = sonar_scoreboard::type_id::create("sb",this);
    21              1                          1            cov = sonar_coverage_collector::type_id::create("cov",this);
    22                                                   endfunction : build_phase
    23                                               
    24                                                       function void connect_phase(uvm_phase phase);
    25              1                          1           agt.agt_ap.connect(sb.sb_export);
    26              1                          1           agt.agt_ap.connect(cov.cov_export);
    27              1                          1           sb.gold_vif_sb=agt.monitor.gold_vif_monitor;


=================================================================================
=== Instance: /sonar_test_pkg
=== Design Unit: work.sonar_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        44        20        24    45.45%

================================Branch Details================================

Branch Coverage for instance /sonar_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.svh
------------------------------------IF Branch------------------------------------
    37                                         1     Count coming in to IF
    37              1                    ***0***                   if(!uvm_config_db #(virtual sonar_inter)::get(this,"","SONAR_IF",cfg.sonar_vif_config))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual interface of the SONAR from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                    ***0***             if(!uvm_config_db #(virtual golden_inter_ref)::get(this,"","GOLDEN_IF",cfg.gold_vif_config))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual golden interface of the SONAR from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1         `uvm_info("run_phase","reset_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1         `uvm_info("run_phase","reset_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    53                                         1     Count coming in to IF
    53              1                          1         `uvm_info("run_phase","send_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    55                                         1     Count coming in to IF
    55              1                          1         `uvm_info("run_phase","send_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    57                                         1     Count coming in to IF
    57              1                          1         `uvm_info("run_phase","receive_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                          1         `uvm_info("run_phase","receive_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1         `uvm_info("run_phase","increase_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                         1     Count coming in to IF
    63              1                          1         `uvm_info("run_phase","increase_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                         1     Count coming in to IF
    65              1                          1         `uvm_info("run_phase","decrease_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                         1     Count coming in to IF
    67              1                          1         `uvm_info("run_phase","decrease_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    70                                         8     Count coming in to IF
    70              1                          8         `uvm_info("run_phase","send_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    72                                         8     Count coming in to IF
    72              1                          8         `uvm_info("run_phase","send_deasserted",UVM_LOW)  
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    76                                       800     Count coming in to IF
    76              1                        800         `uvm_info("run_phase","receive_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    78                                       800     Count coming in to IF
    78              1                        800         `uvm_info("run_phase","receive_deasserted",UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    81                                         1     Count coming in to IF
    81              1                          1         `uvm_info("run_phase","reset_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    83                                         1     Count coming in to IF
    83              1                          1         `uvm_info("run_phase","reset_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    85                                         1     Count coming in to IF
    85              1                          1         `uvm_info("run_phase","rand",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    87                                         1     Count coming in to IF
    87              1                          1         `uvm_info("run_phase","rand finished",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      48        44         4    91.66%

================================Statement Details================================

Statement Coverage for instance /sonar_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.svh
    1                                                package sonar_test_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import sonar_env_pkg::*;
    5                                                import sonar_config_pkg::*;
    6                                                import sonar_sequence_pkg::*;
    7                                                import sonaragent_pkg::*;
    8                                                class sonar_test extends uvm_test;
    9               1                    ***0***        `uvm_component_utils(sonar_test)
    9               2                    ***0***     
    9               3                          4     
    10                                               
    11                                                  sonar_env env;
    12                                                  sonar_config cfg;
    13                                                  virtual sonar_inter sonar_vif_test;
    14                                                  virtual golden_inter_ref gold_vif_test;
    15                                                  sonar_reset_sequence rstseq;
    16                                                  sonar_send_sequence sendseq;
    17                                                  sonar_receive_sequence recseq;
    18                                                  sonar_increase_sequence incseq;
    19                                                  sonar_decrease_sequence decseq;
    20                                                  sonar_rand_all_sequence rndseq;
    21                                               
    22                                                  function new(string name = "sonar_test", uvm_component parent = null);
    23              1                          1           super.new(name, parent);
    24                                                  endfunction
    25                                               
    26                                                  function void build_phase(uvm_phase phase);
    27              1                          1           super.build_phase(phase);
    28              1                          1           env = sonar_env::type_id::create("env", this);
    29              1                          1           cfg = sonar_config::type_id::create("cfg" , this);
    30              1                          1           rstseq = sonar_reset_sequence::type_id::create("rstseq" , this);
    31              1                          1           sendseq = sonar_send_sequence::type_id::create("sendseq" , this);
    32              1                          1           recseq = sonar_receive_sequence::type_id::create("recseq" , this);
    33              1                          1           incseq = sonar_increase_sequence::type_id::create("incseq" , this);
    34              1                          1           decseq = sonar_decrease_sequence::type_id::create("decseq" , this);
    35              1                          1           rndseq = sonar_rand_all_sequence::type_id::create("rndseq" , this);
    36                                               
    37                                                             if(!uvm_config_db #(virtual sonar_inter)::get(this,"","SONAR_IF",cfg.sonar_vif_config))
    38              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual interface of the SONAR from the uvm_config_db")
    39                                                       
    40                                                       if(!uvm_config_db #(virtual golden_inter_ref)::get(this,"","GOLDEN_IF",cfg.gold_vif_config))
    41              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual golden interface of the SONAR from the uvm_config_db")
    42              1                          1             uvm_config_db #(sonar_config)::set(this,"*","CFG",cfg);
    43                                               
    44                                                  endfunction
    45                                               
    46                                                  task run_phase(uvm_phase phase);
    47              1                          1         super.run_phase(phase);
    48              1                          1         phase.raise_objection(this);
    49              1                          1         `uvm_info("run_phase","reset_deasserted",UVM_LOW)
    50              1                          1         rstseq.start(env.agt.sequencer);
    51              1                          1         `uvm_info("run_phase","reset_asserted",UVM_LOW)
    52                                                   //
    53              1                          1         `uvm_info("run_phase","send_asserted",UVM_LOW)
    54              1                          1         sendseq.start(env.agt.sequencer);
    55              1                          1         `uvm_info("run_phase","send_deasserted",UVM_LOW)
    56                                                   //
    57              1                          1         `uvm_info("run_phase","receive_asserted",UVM_LOW)
    58              1                          1         recseq.start(env.agt.sequencer);
    59              1                          1         `uvm_info("run_phase","receive_deasserted",UVM_LOW)
    60                                                   //
    61              1                          1         `uvm_info("run_phase","increase_asserted",UVM_LOW)
    62              1                          1         incseq.start(env.agt.sequencer);
    63              1                          1         `uvm_info("run_phase","increase_deasserted",UVM_LOW)
    64                                                   //
    65              1                          1         `uvm_info("run_phase","decrease_asserted",UVM_LOW)
    66              1                          1         decseq.start(env.agt.sequencer);
    67              1                          1         `uvm_info("run_phase","decrease_deasserted",UVM_LOW)
    68                                                   //
    69              1                          8         repeat(8)begin
    70              1                          8         `uvm_info("run_phase","send_asserted",UVM_LOW)
    71              1                          8         sendseq.start(env.agt.sequencer);
    72              1                          8         `uvm_info("run_phase","send_deasserted",UVM_LOW)  
    73                                                   end
    74                                                   //
    75              1                        800         repeat(800)begin
    76              1                        800         `uvm_info("run_phase","receive_asserted",UVM_LOW)
    77              1                        800         recseq.start(env.agt.sequencer);
    78              1                        800         `uvm_info("run_phase","receive_deasserted",UVM_LOW) 
    79                                                   end
    80                                                   //
    81              1                          1         `uvm_info("run_phase","reset_deasserted",UVM_LOW)
    82              1                          1         rstseq.start(env.agt.sequencer);
    83              1                          1         `uvm_info("run_phase","reset_asserted",UVM_LOW)
    84                                                   //
    85              1                          1         `uvm_info("run_phase","rand",UVM_LOW)
    86              1                          1         rndseq.start(env.agt.sequencer);
    87              1                          1         `uvm_info("run_phase","rand finished",UVM_LOW)
    88              1                          1         phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /sonar_coverage_collector_pkg/sonar_coverage_collector/cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                   652        652          -                      
    missing/total bins:                                     0        652          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reset_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                         501          1          -    Covered              
        bin ones                                        10813          1          -    Covered              
    Coverpoint controlword_cp                         100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:67108863]                              167          1          -    Covered              
        bin auto[67108864:134217727]                      182          1          -    Covered              
        bin auto[134217728:201326591]                     189          1          -    Covered              
        bin auto[201326592:268435455]                     161          1          -    Covered              
        bin auto[268435456:335544319]                     171          1          -    Covered              
        bin auto[335544320:402653183]                     166          1          -    Covered              
        bin auto[402653184:469762047]                     193          1          -    Covered              
        bin auto[469762048:536870911]                     181          1          -    Covered              
        bin auto[536870912:603979775]                     201          1          -    Covered              
        bin auto[603979776:671088639]                     160          1          -    Covered              
        bin auto[671088640:738197503]                     163          1          -    Covered              
        bin auto[738197504:805306367]                     176          1          -    Covered              
        bin auto[805306368:872415231]                     174          1          -    Covered              
        bin auto[872415232:939524095]                     175          1          -    Covered              
        bin auto[939524096:1006632959]                    167          1          -    Covered              
        bin auto[1006632960:1073741823]                   152          1          -    Covered              
        bin auto[1073741824:1140850687]                   174          1          -    Covered              
        bin auto[1140850688:1207959551]                   174          1          -    Covered              
        bin auto[1207959552:1275068415]                   170          1          -    Covered              
        bin auto[1275068416:1342177279]                   168          1          -    Covered              
        bin auto[1342177280:1409286143]                   157          1          -    Covered              
        bin auto[1409286144:1476395007]                   186          1          -    Covered              
        bin auto[1476395008:1543503871]                   169          1          -    Covered              
        bin auto[1543503872:1610612735]                   170          1          -    Covered              
        bin auto[1610612736:1677721599]                   183          1          -    Covered              
        bin auto[1677721600:1744830463]                   189          1          -    Covered              
        bin auto[1744830464:1811939327]                   161          1          -    Covered              
        bin auto[1811939328:1879048191]                   166          1          -    Covered              
        bin auto[1879048192:1946157055]                   178          1          -    Covered              
        bin auto[1946157056:2013265919]                   169          1          -    Covered              
        bin auto[2013265920:2080374783]                   174          1          -    Covered              
        bin auto[2080374784:2147483647]                   175          1          -    Covered              
        bin auto[2147483648:2214592511]                   195          1          -    Covered              
        bin auto[2214592512:2281701375]                   184          1          -    Covered              
        bin auto[2281701376:2348810239]                   168          1          -    Covered              
        bin auto[2348810240:2415919103]                   168          1          -    Covered              
        bin auto[2415919104:2483027967]                   192          1          -    Covered              
        bin auto[2483027968:2550136831]                   164          1          -    Covered              
        bin auto[2550136832:2617245695]                   182          1          -    Covered              
        bin auto[2617245696:2684354559]                   182          1          -    Covered              
        bin auto[2684354560:2751463423]                   200          1          -    Covered              
        bin auto[2751463424:2818572287]                   168          1          -    Covered              
        bin auto[2818572288:2885681151]                   198          1          -    Covered              
        bin auto[2885681152:2952790015]                   184          1          -    Covered              
        bin auto[2952790016:3019898879]                   168          1          -    Covered              
        bin auto[3019898880:3087007743]                   173          1          -    Covered              
        bin auto[3087007744:3154116607]                   172          1          -    Covered              
        bin auto[3154116608:3221225471]                   202          1          -    Covered              
        bin auto[3221225472:3288334335]                   168          1          -    Covered              
        bin auto[3288334336:3355443199]                   163          1          -    Covered              
        bin auto[3355443200:3422552063]                   174          1          -    Covered              
        bin auto[3422552064:3489660927]                   164          1          -    Covered              
        bin auto[3489660928:3556769791]                   174          1          -    Covered              
        bin auto[3556769792:3623878655]                   199          1          -    Covered              
        bin auto[3623878656:3690987519]                   171          1          -    Covered              
        bin auto[3690987520:3758096383]                   168          1          -    Covered              
        bin auto[3758096384:3825205247]                   168          1          -    Covered              
        bin auto[3825205248:3892314111]                   181          1          -    Covered              
        bin auto[3892314112:3959422975]                   175          1          -    Covered              
        bin auto[3959422976:4026531839]                   202          1          -    Covered              
        bin auto[4026531840:4093640703]                   205          1          -    Covered              
        bin auto[4093640704:4160749567]                   191          1          -    Covered              
        bin auto[4160749568:4227858431]                   196          1          -    Covered              
        bin auto[4227858432:4294967295]                   174          1          -    Covered              
    Coverpoint increase_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5729          1          -    Covered              
        bin auto[1]                                      5585          1          -    Covered              
    Coverpoint decrease_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5637          1          -    Covered              
        bin auto[1]                                      5677          1          -    Covered              
    Coverpoint outputDAC_cp                           100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:63]                                  10709          1          -    Covered              
        bin auto[64:127]                                   11          1          -    Covered              
        bin auto[128:191]                                   9          1          -    Covered              
        bin auto[192:255]                                  13          1          -    Covered              
        bin auto[256:319]                                  12          1          -    Covered              
        bin auto[320:383]                                  10          1          -    Covered              
        bin auto[384:447]                                   4          1          -    Covered              
        bin auto[448:511]                                   9          1          -    Covered              
        bin auto[512:575]                                   7          1          -    Covered              
        bin auto[576:639]                                  11          1          -    Covered              
        bin auto[640:703]                                  19          1          -    Covered              
        bin auto[704:767]                                   6          1          -    Covered              
        bin auto[768:831]                                   7          1          -    Covered              
        bin auto[832:895]                                   4          1          -    Covered              
        bin auto[896:959]                                   9          1          -    Covered              
        bin auto[960:1023]                                  6          1          -    Covered              
        bin auto[1024:1087]                                 8          1          -    Covered              
        bin auto[1088:1151]                                10          1          -    Covered              
        bin auto[1152:1215]                                10          1          -    Covered              
        bin auto[1216:1279]                                 4          1          -    Covered              
        bin auto[1280:1343]                                 7          1          -    Covered              
        bin auto[1344:1407]                                 6          1          -    Covered              
        bin auto[1408:1471]                                 9          1          -    Covered              
        bin auto[1472:1535]                                16          1          -    Covered              
        bin auto[1536:1599]                                 6          1          -    Covered              
        bin auto[1600:1663]                                14          1          -    Covered              
        bin auto[1664:1727]                                13          1          -    Covered              
        bin auto[1728:1791]                                 6          1          -    Covered              
        bin auto[1792:1855]                                16          1          -    Covered              
        bin auto[1856:1919]                                10          1          -    Covered              
        bin auto[1920:1983]                                15          1          -    Covered              
        bin auto[1984:2047]                                14          1          -    Covered              
        bin auto[2048:2111]                                 5          1          -    Covered              
        bin auto[2112:2175]                                10          1          -    Covered              
        bin auto[2176:2239]                                16          1          -    Covered              
        bin auto[2240:2303]                                18          1          -    Covered              
        bin auto[2304:2367]                                 7          1          -    Covered              
        bin auto[2368:2431]                                11          1          -    Covered              
        bin auto[2432:2495]                                12          1          -    Covered              
        bin auto[2496:2559]                                 7          1          -    Covered              
        bin auto[2560:2623]                                12          1          -    Covered              
        bin auto[2624:2687]                                 8          1          -    Covered              
        bin auto[2688:2751]                                12          1          -    Covered              
        bin auto[2752:2815]                                 7          1          -    Covered              
        bin auto[2816:2879]                                10          1          -    Covered              
        bin auto[2880:2943]                                10          1          -    Covered              
        bin auto[2944:3007]                                 6          1          -    Covered              
        bin auto[3008:3071]                                 4          1          -    Covered              
        bin auto[3072:3135]                                 2          1          -    Covered              
        bin auto[3136:3199]                                14          1          -    Covered              
        bin auto[3200:3263]                                16          1          -    Covered              
        bin auto[3264:3327]                                11          1          -    Covered              
        bin auto[3328:3391]                                 9          1          -    Covered              
        bin auto[3392:3455]                                14          1          -    Covered              
        bin auto[3456:3519]                                 9          1          -    Covered              
        bin auto[3520:3583]                                 5          1          -    Covered              
        bin auto[3584:3647]                                12          1          -    Covered              
        bin auto[3648:3711]                                 6          1          -    Covered              
        bin auto[3712:3775]                                10          1          -    Covered              
        bin auto[3776:3839]                                 8          1          -    Covered              
        bin auto[3840:3903]                                 8          1          -    Covered              
        bin auto[3904:3967]                                 6          1          -    Covered              
        bin auto[3968:4031]                                 8          1          -    Covered              
        bin auto[4032:4095]                                11          1          -    Covered              
    Coverpoint send_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      6093          1          -    Covered              
        bin auto[1]                                      5221          1          -    Covered              
    Coverpoint receive_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      5189          1          -    Covered              
        bin auto[1]                                      6125          1          -    Covered              
    Coverpoint no_order_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      6734          1          -    Covered              
        bin auto[1]                                      4580          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ones,auto[4227858432:4294967295]>        164          1          -    Covered              
            bin <ones,auto[4160749568:4227858431]>        187          1          -    Covered              
            bin <ones,auto[4093640704:4160749567]>        187          1          -    Covered              
            bin <ones,auto[4026531840:4093640703]>        200          1          -    Covered              
            bin <ones,auto[3959422976:4026531839]>        192          1          -    Covered              
            bin <ones,auto[3892314112:3959422975]>        165          1          -    Covered              
            bin <ones,auto[3825205248:3892314111]>        168          1          -    Covered              
            bin <ones,auto[3758096384:3825205247]>        162          1          -    Covered              
            bin <ones,auto[3690987520:3758096383]>        159          1          -    Covered              
            bin <ones,auto[3623878656:3690987519]>        162          1          -    Covered              
            bin <ones,auto[3556769792:3623878655]>        188          1          -    Covered              
            bin <ones,auto[3489660928:3556769791]>        165          1          -    Covered              
            bin <ones,auto[3422552064:3489660927]>        156          1          -    Covered              
            bin <ones,auto[3355443200:3422552063]>        166          1          -    Covered              
            bin <ones,auto[3288334336:3355443199]>        154          1          -    Covered              
            bin <ones,auto[3221225472:3288334335]>        157          1          -    Covered              
            bin <ones,auto[3154116608:3221225471]>        193          1          -    Covered              
            bin <ones,auto[3087007744:3154116607]>        162          1          -    Covered              
            bin <ones,auto[3019898880:3087007743]>        166          1          -    Covered              
            bin <ones,auto[2952790016:3019898879]>        162          1          -    Covered              
            bin <ones,auto[2885681152:2952790015]>        178          1          -    Covered              
            bin <ones,auto[2818572288:2885681151]>        184          1          -    Covered              
            bin <ones,auto[2751463424:2818572287]>        162          1          -    Covered              
            bin <ones,auto[2684354560:2751463423]>        195          1          -    Covered              
            bin <ones,auto[2617245696:2684354559]>        175          1          -    Covered              
            bin <ones,auto[2550136832:2617245695]>        175          1          -    Covered              
            bin <ones,auto[2483027968:2550136831]>        156          1          -    Covered              
            bin <ones,auto[2415919104:2483027967]>        182          1          -    Covered              
            bin <ones,auto[2348810240:2415919103]>        164          1          -    Covered              
            bin <ones,auto[2281701376:2348810239]>        164          1          -    Covered              
            bin <ones,auto[2214592512:2281701375]>        176          1          -    Covered              
            bin <ones,auto[2147483648:2214592511]>        187          1          -    Covered              
            bin <ones,auto[2080374784:2147483647]>        164          1          -    Covered              
            bin <ones,auto[2013265920:2080374783]>        168          1          -    Covered              
            bin <ones,auto[1946157056:2013265919]>        164          1          -    Covered              
            bin <ones,auto[1879048192:1946157055]>        174          1          -    Covered              
            bin <ones,auto[1811939328:1879048191]>        156          1          -    Covered              
            bin <ones,auto[1744830464:1811939327]>        154          1          -    Covered              
            bin <ones,auto[1677721600:1744830463]>        182          1          -    Covered              
            bin <ones,auto[1610612736:1677721599]>        176          1          -    Covered              
            bin <ones,auto[1543503872:1610612735]>        167          1          -    Covered              
            bin <ones,auto[1476395008:1543503871]>        161          1          -    Covered              
            bin <ones,auto[1409286144:1476395007]>        180          1          -    Covered              
            bin <ones,auto[1342177280:1409286143]>        149          1          -    Covered              
            bin <ones,auto[1275068416:1342177279]>        155          1          -    Covered              
            bin <ones,auto[1207959552:1275068415]>        163          1          -    Covered              
            bin <ones,auto[1140850688:1207959551]>        165          1          -    Covered              
            bin <ones,auto[1073741824:1140850687]>        165          1          -    Covered              
            bin <ones,auto[1006632960:1073741823]>        144          1          -    Covered              
            bin <ones,auto[939524096:1006632959]>         160          1          -    Covered              
            bin <ones,auto[872415232:939524095]>          164          1          -    Covered              
            bin <ones,auto[805306368:872415231]>          167          1          -    Covered              
            bin <ones,auto[738197504:805306367]>          165          1          -    Covered              
            bin <ones,auto[671088640:738197503]>          153          1          -    Covered              
            bin <ones,auto[603979776:671088639]>          152          1          -    Covered              
            bin <ones,auto[536870912:603979775]>          194          1          -    Covered              
            bin <ones,auto[469762048:536870911]>          176          1          -    Covered              
            bin <ones,auto[402653184:469762047]>          187          1          -    Covered              
            bin <ones,auto[335544320:402653183]>          158          1          -    Covered              
            bin <ones,auto[268435456:335544319]>          163          1          -    Covered              
            bin <ones,auto[201326592:268435455]>          155          1          -    Covered              
            bin <ones,auto[134217728:201326591]>          186          1          -    Covered              
            bin <ones,auto[67108864:134217727]>           172          1          -    Covered              
            bin <ones,auto[0:67108863]>                   161          1          -    Covered              
            bin <zeros,auto[4227858432:4294967295]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[4160749568:4227858431]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[4093640704:4160749567]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[4026531840:4093640703]> 
                                                            5          1          -    Covered              
            bin <zeros,auto[3959422976:4026531839]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[3892314112:3959422975]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[3825205248:3892314111]> 
                                                           13          1          -    Covered              
            bin <zeros,auto[3758096384:3825205247]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[3690987520:3758096383]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3623878656:3690987519]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3556769792:3623878655]> 
                                                           11          1          -    Covered              
            bin <zeros,auto[3489660928:3556769791]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3422552064:3489660927]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[3355443200:3422552063]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[3288334336:3355443199]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3221225472:3288334335]> 
                                                           11          1          -    Covered              
            bin <zeros,auto[3154116608:3221225471]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[3087007744:3154116607]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[3019898880:3087007743]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[2952790016:3019898879]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[2885681152:2952790015]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[2818572288:2885681151]> 
                                                           14          1          -    Covered              
            bin <zeros,auto[2751463424:2818572287]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[2684354560:2751463423]> 
                                                            5          1          -    Covered              
            bin <zeros,auto[2617245696:2684354559]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[2550136832:2617245695]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[2483027968:2550136831]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[2415919104:2483027967]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[2348810240:2415919103]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[2281701376:2348810239]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[2214592512:2281701375]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[2147483648:2214592511]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[2080374784:2147483647]> 
                                                           11          1          -    Covered              
            bin <zeros,auto[2013265920:2080374783]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[1946157056:2013265919]> 
                                                            5          1          -    Covered              
            bin <zeros,auto[1879048192:1946157055]> 
                                                            4          1          -    Covered              
            bin <zeros,auto[1811939328:1879048191]> 
                                                           10          1          -    Covered              
            bin <zeros,auto[1744830464:1811939327]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1677721600:1744830463]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1610612736:1677721599]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1543503872:1610612735]> 
                                                            3          1          -    Covered              
            bin <zeros,auto[1476395008:1543503871]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[1409286144:1476395007]> 
                                                            6          1          -    Covered              
            bin <zeros,auto[1342177280:1409286143]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[1275068416:1342177279]> 
                                                           13          1          -    Covered              
            bin <zeros,auto[1207959552:1275068415]> 
                                                            7          1          -    Covered              
            bin <zeros,auto[1140850688:1207959551]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[1073741824:1140850687]> 
                                                            9          1          -    Covered              
            bin <zeros,auto[1006632960:1073741823]> 
                                                            8          1          -    Covered              
            bin <zeros,auto[939524096:1006632959]>          7          1          -    Covered              
            bin <zeros,auto[872415232:939524095]>          11          1          -    Covered              
            bin <zeros,auto[805306368:872415231]>           7          1          -    Covered              
            bin <zeros,auto[738197504:805306367]>          11          1          -    Covered              
            bin <zeros,auto[671088640:738197503]>          10          1          -    Covered              
            bin <zeros,auto[603979776:671088639]>           8          1          -    Covered              
            bin <zeros,auto[536870912:603979775]>           7          1          -    Covered              
            bin <zeros,auto[469762048:536870911]>           5          1          -    Covered              
            bin <zeros,auto[402653184:469762047]>           6          1          -    Covered              
            bin <zeros,auto[335544320:402653183]>           8          1          -    Covered              
            bin <zeros,auto[268435456:335544319]>           8          1          -    Covered              
            bin <zeros,auto[201326592:268435455]>           6          1          -    Covered              
            bin <zeros,auto[134217728:201326591]>           3          1          -    Covered              
            bin <zeros,auto[67108864:134217727]>           10          1          -    Covered              
            bin <zeros,auto[0:67108863]>                    6          1          -    Covered              
    Cross #cross__1#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[4032:4095]>                   2          1          -    Covered              
            bin <auto[0],auto[4032:4095]>                   9          1          -    Covered              
            bin <auto[1],auto[3968:4031]>                   1          1          -    Covered              
            bin <auto[0],auto[3968:4031]>                   7          1          -    Covered              
            bin <auto[1],auto[3904:3967]>                   5          1          -    Covered              
            bin <auto[0],auto[3904:3967]>                   1          1          -    Covered              
            bin <auto[1],auto[3840:3903]>                   4          1          -    Covered              
            bin <auto[0],auto[3840:3903]>                   4          1          -    Covered              
            bin <auto[1],auto[3776:3839]>                   4          1          -    Covered              
            bin <auto[0],auto[3776:3839]>                   4          1          -    Covered              
            bin <auto[1],auto[3712:3775]>                   3          1          -    Covered              
            bin <auto[0],auto[3712:3775]>                   7          1          -    Covered              
            bin <auto[1],auto[3648:3711]>                   2          1          -    Covered              
            bin <auto[0],auto[3648:3711]>                   4          1          -    Covered              
            bin <auto[1],auto[3584:3647]>                   4          1          -    Covered              
            bin <auto[0],auto[3584:3647]>                   8          1          -    Covered              
            bin <auto[1],auto[3520:3583]>                   1          1          -    Covered              
            bin <auto[0],auto[3520:3583]>                   4          1          -    Covered              
            bin <auto[1],auto[3456:3519]>                   5          1          -    Covered              
            bin <auto[0],auto[3456:3519]>                   4          1          -    Covered              
            bin <auto[1],auto[3392:3455]>                   8          1          -    Covered              
            bin <auto[0],auto[3392:3455]>                   6          1          -    Covered              
            bin <auto[1],auto[3328:3391]>                   8          1          -    Covered              
            bin <auto[0],auto[3328:3391]>                   1          1          -    Covered              
            bin <auto[1],auto[3264:3327]>                   6          1          -    Covered              
            bin <auto[0],auto[3264:3327]>                   5          1          -    Covered              
            bin <auto[1],auto[3200:3263]>                   7          1          -    Covered              
            bin <auto[0],auto[3200:3263]>                   9          1          -    Covered              
            bin <auto[1],auto[3136:3199]>                   7          1          -    Covered              
            bin <auto[0],auto[3136:3199]>                   7          1          -    Covered              
            bin <auto[1],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[0],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[1],auto[3008:3071]>                   2          1          -    Covered              
            bin <auto[0],auto[3008:3071]>                   2          1          -    Covered              
            bin <auto[1],auto[2944:3007]>                   4          1          -    Covered              
            bin <auto[0],auto[2944:3007]>                   2          1          -    Covered              
            bin <auto[1],auto[2880:2943]>                   2          1          -    Covered              
            bin <auto[0],auto[2880:2943]>                   8          1          -    Covered              
            bin <auto[1],auto[2816:2879]>                   8          1          -    Covered              
            bin <auto[0],auto[2816:2879]>                   2          1          -    Covered              
            bin <auto[1],auto[2752:2815]>                   6          1          -    Covered              
            bin <auto[0],auto[2752:2815]>                   1          1          -    Covered              
            bin <auto[1],auto[2688:2751]>                   5          1          -    Covered              
            bin <auto[0],auto[2688:2751]>                   7          1          -    Covered              
            bin <auto[1],auto[2624:2687]>                   4          1          -    Covered              
            bin <auto[0],auto[2624:2687]>                   4          1          -    Covered              
            bin <auto[1],auto[2560:2623]>                   6          1          -    Covered              
            bin <auto[0],auto[2560:2623]>                   6          1          -    Covered              
            bin <auto[1],auto[2496:2559]>                   5          1          -    Covered              
            bin <auto[0],auto[2496:2559]>                   2          1          -    Covered              
            bin <auto[1],auto[2432:2495]>                   6          1          -    Covered              
            bin <auto[0],auto[2432:2495]>                   6          1          -    Covered              
            bin <auto[1],auto[2368:2431]>                   5          1          -    Covered              
            bin <auto[0],auto[2368:2431]>                   6          1          -    Covered              
            bin <auto[1],auto[2304:2367]>                   6          1          -    Covered              
            bin <auto[0],auto[2304:2367]>                   1          1          -    Covered              
            bin <auto[1],auto[2240:2303]>                   9          1          -    Covered              
            bin <auto[0],auto[2240:2303]>                   9          1          -    Covered              
            bin <auto[1],auto[2176:2239]>                   6          1          -    Covered              
            bin <auto[0],auto[2176:2239]>                  10          1          -    Covered              
            bin <auto[1],auto[2112:2175]>                   6          1          -    Covered              
            bin <auto[0],auto[2112:2175]>                   4          1          -    Covered              
            bin <auto[1],auto[2048:2111]>                   3          1          -    Covered              
            bin <auto[0],auto[2048:2111]>                   2          1          -    Covered              
            bin <auto[1],auto[1984:2047]>                   8          1          -    Covered              
            bin <auto[0],auto[1984:2047]>                   6          1          -    Covered              
            bin <auto[1],auto[1920:1983]>                   9          1          -    Covered              
            bin <auto[0],auto[1920:1983]>                   6          1          -    Covered              
            bin <auto[1],auto[1856:1919]>                   8          1          -    Covered              
            bin <auto[0],auto[1856:1919]>                   2          1          -    Covered              
            bin <auto[1],auto[1792:1855]>                  10          1          -    Covered              
            bin <auto[0],auto[1792:1855]>                   6          1          -    Covered              
            bin <auto[1],auto[1728:1791]>                   5          1          -    Covered              
            bin <auto[0],auto[1728:1791]>                   1          1          -    Covered              
            bin <auto[1],auto[1664:1727]>                   5          1          -    Covered              
            bin <auto[0],auto[1664:1727]>                   8          1          -    Covered              
            bin <auto[1],auto[1600:1663]>                   4          1          -    Covered              
            bin <auto[0],auto[1600:1663]>                  10          1          -    Covered              
            bin <auto[1],auto[1536:1599]>                   2          1          -    Covered              
            bin <auto[0],auto[1536:1599]>                   4          1          -    Covered              
            bin <auto[1],auto[1472:1535]>                   5          1          -    Covered              
            bin <auto[0],auto[1472:1535]>                  11          1          -    Covered              
            bin <auto[1],auto[1408:1471]>                   3          1          -    Covered              
            bin <auto[0],auto[1408:1471]>                   6          1          -    Covered              
            bin <auto[1],auto[1344:1407]>                   1          1          -    Covered              
            bin <auto[0],auto[1344:1407]>                   5          1          -    Covered              
            bin <auto[1],auto[1280:1343]>                   5          1          -    Covered              
            bin <auto[0],auto[1280:1343]>                   2          1          -    Covered              
            bin <auto[1],auto[1216:1279]>                   2          1          -    Covered              
            bin <auto[0],auto[1216:1279]>                   2          1          -    Covered              
            bin <auto[1],auto[1152:1215]>                   6          1          -    Covered              
            bin <auto[0],auto[1152:1215]>                   4          1          -    Covered              
            bin <auto[1],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[0],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[1],auto[1024:1087]>                   4          1          -    Covered              
            bin <auto[0],auto[1024:1087]>                   4          1          -    Covered              
            bin <auto[1],auto[960:1023]>                    4          1          -    Covered              
            bin <auto[0],auto[960:1023]>                    2          1          -    Covered              
            bin <auto[1],auto[896:959]>                     4          1          -    Covered              
            bin <auto[0],auto[896:959]>                     5          1          -    Covered              
            bin <auto[1],auto[832:895]>                     2          1          -    Covered              
            bin <auto[0],auto[832:895]>                     2          1          -    Covered              
            bin <auto[1],auto[768:831]>                     5          1          -    Covered              
            bin <auto[0],auto[768:831]>                     2          1          -    Covered              
            bin <auto[1],auto[704:767]>                     4          1          -    Covered              
            bin <auto[0],auto[704:767]>                     2          1          -    Covered              
            bin <auto[1],auto[640:703]>                     7          1          -    Covered              
            bin <auto[0],auto[640:703]>                    12          1          -    Covered              
            bin <auto[1],auto[576:639]>                     4          1          -    Covered              
            bin <auto[0],auto[576:639]>                     7          1          -    Covered              
            bin <auto[1],auto[512:575]>                     5          1          -    Covered              
            bin <auto[0],auto[512:575]>                     2          1          -    Covered              
            bin <auto[1],auto[448:511]>                     3          1          -    Covered              
            bin <auto[0],auto[448:511]>                     6          1          -    Covered              
            bin <auto[1],auto[384:447]>                     2          1          -    Covered              
            bin <auto[0],auto[384:447]>                     2          1          -    Covered              
            bin <auto[1],auto[320:383]>                     4          1          -    Covered              
            bin <auto[0],auto[320:383]>                     6          1          -    Covered              
            bin <auto[1],auto[256:319]>                     7          1          -    Covered              
            bin <auto[0],auto[256:319]>                     5          1          -    Covered              
            bin <auto[1],auto[192:255]>                     5          1          -    Covered              
            bin <auto[0],auto[192:255]>                     8          1          -    Covered              
            bin <auto[1],auto[128:191]>                     6          1          -    Covered              
            bin <auto[0],auto[128:191]>                     3          1          -    Covered              
            bin <auto[1],auto[64:127]>                      5          1          -    Covered              
            bin <auto[0],auto[64:127]>                      6          1          -    Covered              
            bin <auto[1],auto[0:63]>                     5285          1          -    Covered              
            bin <auto[0],auto[0:63]>                     5424          1          -    Covered              
    Cross #cross__2#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[4032:4095]>                   4          1          -    Covered              
            bin <auto[0],auto[4032:4095]>                   7          1          -    Covered              
            bin <auto[1],auto[3968:4031]>                   2          1          -    Covered              
            bin <auto[0],auto[3968:4031]>                   6          1          -    Covered              
            bin <auto[1],auto[3904:3967]>                   5          1          -    Covered              
            bin <auto[0],auto[3904:3967]>                   1          1          -    Covered              
            bin <auto[1],auto[3840:3903]>                   3          1          -    Covered              
            bin <auto[0],auto[3840:3903]>                   5          1          -    Covered              
            bin <auto[1],auto[3776:3839]>                   3          1          -    Covered              
            bin <auto[0],auto[3776:3839]>                   5          1          -    Covered              
            bin <auto[1],auto[3712:3775]>                   6          1          -    Covered              
            bin <auto[0],auto[3712:3775]>                   4          1          -    Covered              
            bin <auto[1],auto[3648:3711]>                   3          1          -    Covered              
            bin <auto[0],auto[3648:3711]>                   3          1          -    Covered              
            bin <auto[1],auto[3584:3647]>                   7          1          -    Covered              
            bin <auto[0],auto[3584:3647]>                   5          1          -    Covered              
            bin <auto[1],auto[3520:3583]>                   1          1          -    Covered              
            bin <auto[0],auto[3520:3583]>                   4          1          -    Covered              
            bin <auto[1],auto[3456:3519]>                   3          1          -    Covered              
            bin <auto[0],auto[3456:3519]>                   6          1          -    Covered              
            bin <auto[1],auto[3392:3455]>                   8          1          -    Covered              
            bin <auto[0],auto[3392:3455]>                   6          1          -    Covered              
            bin <auto[1],auto[3328:3391]>                   6          1          -    Covered              
            bin <auto[0],auto[3328:3391]>                   3          1          -    Covered              
            bin <auto[1],auto[3264:3327]>                   5          1          -    Covered              
            bin <auto[0],auto[3264:3327]>                   6          1          -    Covered              
            bin <auto[1],auto[3200:3263]>                   8          1          -    Covered              
            bin <auto[0],auto[3200:3263]>                   8          1          -    Covered              
            bin <auto[1],auto[3136:3199]>                   8          1          -    Covered              
            bin <auto[0],auto[3136:3199]>                   6          1          -    Covered              
            bin <auto[1],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[0],auto[3072:3135]>                   1          1          -    Covered              
            bin <auto[1],auto[3008:3071]>                   1          1          -    Covered              
            bin <auto[0],auto[3008:3071]>                   3          1          -    Covered              
            bin <auto[1],auto[2944:3007]>                   1          1          -    Covered              
            bin <auto[0],auto[2944:3007]>                   5          1          -    Covered              
            bin <auto[1],auto[2880:2943]>                   4          1          -    Covered              
            bin <auto[0],auto[2880:2943]>                   6          1          -    Covered              
            bin <auto[1],auto[2816:2879]>                   5          1          -    Covered              
            bin <auto[0],auto[2816:2879]>                   5          1          -    Covered              
            bin <auto[1],auto[2752:2815]>                   3          1          -    Covered              
            bin <auto[0],auto[2752:2815]>                   4          1          -    Covered              
            bin <auto[1],auto[2688:2751]>                   7          1          -    Covered              
            bin <auto[0],auto[2688:2751]>                   5          1          -    Covered              
            bin <auto[1],auto[2624:2687]>                   5          1          -    Covered              
            bin <auto[0],auto[2624:2687]>                   3          1          -    Covered              
            bin <auto[1],auto[2560:2623]>                   9          1          -    Covered              
            bin <auto[0],auto[2560:2623]>                   3          1          -    Covered              
            bin <auto[1],auto[2496:2559]>                   2          1          -    Covered              
            bin <auto[0],auto[2496:2559]>                   5          1          -    Covered              
            bin <auto[1],auto[2432:2495]>                   5          1          -    Covered              
            bin <auto[0],auto[2432:2495]>                   7          1          -    Covered              
            bin <auto[1],auto[2368:2431]>                   7          1          -    Covered              
            bin <auto[0],auto[2368:2431]>                   4          1          -    Covered              
            bin <auto[1],auto[2304:2367]>                   4          1          -    Covered              
            bin <auto[0],auto[2304:2367]>                   3          1          -    Covered              
            bin <auto[1],auto[2240:2303]>                   7          1          -    Covered              
            bin <auto[0],auto[2240:2303]>                  11          1          -    Covered              
            bin <auto[1],auto[2176:2239]>                   9          1          -    Covered              
            bin <auto[0],auto[2176:2239]>                   7          1          -    Covered              
            bin <auto[1],auto[2112:2175]>                   1          1          -    Covered              
            bin <auto[0],auto[2112:2175]>                   9          1          -    Covered              
            bin <auto[1],auto[2048:2111]>                   1          1          -    Covered              
            bin <auto[0],auto[2048:2111]>                   4          1          -    Covered              
            bin <auto[1],auto[1984:2047]>                   4          1          -    Covered              
            bin <auto[0],auto[1984:2047]>                  10          1          -    Covered              
            bin <auto[1],auto[1920:1983]>                   5          1          -    Covered              
            bin <auto[0],auto[1920:1983]>                  10          1          -    Covered              
            bin <auto[1],auto[1856:1919]>                   8          1          -    Covered              
            bin <auto[0],auto[1856:1919]>                   2          1          -    Covered              
            bin <auto[1],auto[1792:1855]>                  10          1          -    Covered              
            bin <auto[0],auto[1792:1855]>                   6          1          -    Covered              
            bin <auto[1],auto[1728:1791]>                   1          1          -    Covered              
            bin <auto[0],auto[1728:1791]>                   5          1          -    Covered              
            bin <auto[1],auto[1664:1727]>                   5          1          -    Covered              
            bin <auto[0],auto[1664:1727]>                   8          1          -    Covered              
            bin <auto[1],auto[1600:1663]>                   8          1          -    Covered              
            bin <auto[0],auto[1600:1663]>                   6          1          -    Covered              
            bin <auto[1],auto[1536:1599]>                   3          1          -    Covered              
            bin <auto[0],auto[1536:1599]>                   3          1          -    Covered              
            bin <auto[1],auto[1472:1535]>                   6          1          -    Covered              
            bin <auto[0],auto[1472:1535]>                  10          1          -    Covered              
            bin <auto[1],auto[1408:1471]>                   6          1          -    Covered              
            bin <auto[0],auto[1408:1471]>                   3          1          -    Covered              
            bin <auto[1],auto[1344:1407]>                   3          1          -    Covered              
            bin <auto[0],auto[1344:1407]>                   3          1          -    Covered              
            bin <auto[1],auto[1280:1343]>                   4          1          -    Covered              
            bin <auto[0],auto[1280:1343]>                   3          1          -    Covered              
            bin <auto[1],auto[1216:1279]>                   3          1          -    Covered              
            bin <auto[0],auto[1216:1279]>                   1          1          -    Covered              
            bin <auto[1],auto[1152:1215]>                   7          1          -    Covered              
            bin <auto[0],auto[1152:1215]>                   3          1          -    Covered              
            bin <auto[1],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[0],auto[1088:1151]>                   5          1          -    Covered              
            bin <auto[1],auto[1024:1087]>                   5          1          -    Covered              
            bin <auto[0],auto[1024:1087]>                   3          1          -    Covered              
            bin <auto[1],auto[960:1023]>                    4          1          -    Covered              
            bin <auto[0],auto[960:1023]>                    2          1          -    Covered              
            bin <auto[1],auto[896:959]>                     6          1          -    Covered              
            bin <auto[0],auto[896:959]>                     3          1          -    Covered              
            bin <auto[1],auto[832:895]>                     3          1          -    Covered              
            bin <auto[0],auto[832:895]>                     1          1          -    Covered              
            bin <auto[1],auto[768:831]>                     3          1          -    Covered              
            bin <auto[0],auto[768:831]>                     4          1          -    Covered              
            bin <auto[1],auto[704:767]>                     1          1          -    Covered              
            bin <auto[0],auto[704:767]>                     5          1          -    Covered              
            bin <auto[1],auto[640:703]>                     8          1          -    Covered              
            bin <auto[0],auto[640:703]>                    11          1          -    Covered              
            bin <auto[1],auto[576:639]>                     4          1          -    Covered              
            bin <auto[0],auto[576:639]>                     7          1          -    Covered              
            bin <auto[1],auto[512:575]>                     3          1          -    Covered              
            bin <auto[0],auto[512:575]>                     4          1          -    Covered              
            bin <auto[1],auto[448:511]>                     6          1          -    Covered              
            bin <auto[0],auto[448:511]>                     3          1          -    Covered              
            bin <auto[1],auto[384:447]>                     3          1          -    Covered              
            bin <auto[0],auto[384:447]>                     1          1          -    Covered              
            bin <auto[1],auto[320:383]>                     7          1          -    Covered              
            bin <auto[0],auto[320:383]>                     3          1          -    Covered              
            bin <auto[1],auto[256:319]>                     8          1          -    Covered              
            bin <auto[0],auto[256:319]>                     4          1          -    Covered              
            bin <auto[1],auto[192:255]>                     5          1          -    Covered              
            bin <auto[0],auto[192:255]>                     8          1          -    Covered              
            bin <auto[1],auto[128:191]>                     3          1          -    Covered              
            bin <auto[0],auto[128:191]>                     6          1          -    Covered              
            bin <auto[1],auto[64:127]>                      4          1          -    Covered              
            bin <auto[0],auto[64:127]>                      7          1          -    Covered              
            bin <auto[1],auto[0:63]>                     5382          1          -    Covered              
            bin <auto[0],auto[0:63]>                     5327          1          -    Covered              
    Cross #cross__3#                                  100.00%        100          -    Covered              
        covered/total bins:                               128        128          -                      
        missing/total bins:                                 0        128          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[4227858432:4294967295]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[4227858432:4294967295]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[4160749568:4227858431]> 
                                                           84          1          -    Covered              
            bin <auto[0],auto[4160749568:4227858431]> 
                                                          112          1          -    Covered              
            bin <auto[1],auto[4093640704:4160749567]> 
                                                           80          1          -    Covered              
            bin <auto[0],auto[4093640704:4160749567]> 
                                                          111          1          -    Covered              
            bin <auto[1],auto[4026531840:4093640703]> 
                                                           87          1          -    Covered              
            bin <auto[0],auto[4026531840:4093640703]> 
                                                          118          1          -    Covered              
            bin <auto[1],auto[3959422976:4026531839]> 
                                                           75          1          -    Covered              
            bin <auto[0],auto[3959422976:4026531839]> 
                                                          127          1          -    Covered              
            bin <auto[1],auto[3892314112:3959422975]> 
                                                           64          1          -    Covered              
            bin <auto[0],auto[3892314112:3959422975]> 
                                                          111          1          -    Covered              
            bin <auto[1],auto[3825205248:3892314111]> 
                                                           81          1          -    Covered              
            bin <auto[0],auto[3825205248:3892314111]> 
                                                          100          1          -    Covered              
            bin <auto[1],auto[3758096384:3825205247]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[3758096384:3825205247]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[3690987520:3758096383]> 
                                                           72          1          -    Covered              
            bin <auto[0],auto[3690987520:3758096383]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[3623878656:3690987519]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[3623878656:3690987519]> 
                                                          101          1          -    Covered              
            bin <auto[1],auto[3556769792:3623878655]> 
                                                           86          1          -    Covered              
            bin <auto[0],auto[3556769792:3623878655]> 
                                                          113          1          -    Covered              
            bin <auto[1],auto[3489660928:3556769791]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[3489660928:3556769791]> 
                                                          105          1          -    Covered              
            bin <auto[1],auto[3422552064:3489660927]> 
                                                           68          1          -    Covered              
            bin <auto[0],auto[3422552064:3489660927]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[3355443200:3422552063]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[3355443200:3422552063]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[3288334336:3355443199]> 
                                                           66          1          -    Covered              
            bin <auto[0],auto[3288334336:3355443199]> 
                                                           97          1          -    Covered              
            bin <auto[1],auto[3221225472:3288334335]> 
                                                           66          1          -    Covered              
            bin <auto[0],auto[3221225472:3288334335]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[3154116608:3221225471]> 
                                                           84          1          -    Covered              
            bin <auto[0],auto[3154116608:3221225471]> 
                                                          118          1          -    Covered              
            bin <auto[1],auto[3087007744:3154116607]> 
                                                           63          1          -    Covered              
            bin <auto[0],auto[3087007744:3154116607]> 
                                                          109          1          -    Covered              
            bin <auto[1],auto[3019898880:3087007743]> 
                                                           71          1          -    Covered              
            bin <auto[0],auto[3019898880:3087007743]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[2952790016:3019898879]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[2952790016:3019898879]> 
                                                           92          1          -    Covered              
            bin <auto[1],auto[2885681152:2952790015]> 
                                                           83          1          -    Covered              
            bin <auto[0],auto[2885681152:2952790015]> 
                                                          101          1          -    Covered              
            bin <auto[1],auto[2818572288:2885681151]> 
                                                           90          1          -    Covered              
            bin <auto[0],auto[2818572288:2885681151]> 
                                                          108          1          -    Covered              
            bin <auto[1],auto[2751463424:2818572287]> 
                                                           74          1          -    Covered              
            bin <auto[0],auto[2751463424:2818572287]> 
                                                           94          1          -    Covered              
            bin <auto[1],auto[2684354560:2751463423]> 
                                                           71          1          -    Covered              
            bin <auto[0],auto[2684354560:2751463423]> 
                                                          129          1          -    Covered              
            bin <auto[1],auto[2617245696:2684354559]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[2617245696:2684354559]> 
                                                          113          1          -    Covered              
            bin <auto[1],auto[2550136832:2617245695]> 
                                                           65          1          -    Covered              
            bin <auto[0],auto[2550136832:2617245695]> 
                                                          117          1          -    Covered              
            bin <auto[1],auto[2483027968:2550136831]> 
                                                           59          1          -    Covered              
            bin <auto[0],auto[2483027968:2550136831]> 
                                                          105          1          -    Covered              
            bin <auto[1],auto[2415919104:2483027967]> 
                                                           90          1          -    Covered              
            bin <auto[0],auto[2415919104:2483027967]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[2348810240:2415919103]> 
                                                           50          1          -    Covered              
            bin <auto[0],auto[2348810240:2415919103]> 
                                                          118          1          -    Covered              
            bin <auto[1],auto[2281701376:2348810239]> 
                                                           62          1          -    Covered              
            bin <auto[0],auto[2281701376:2348810239]> 
                                                          106          1          -    Covered              
            bin <auto[1],auto[2214592512:2281701375]> 
                                                           63          1          -    Covered              
            bin <auto[0],auto[2214592512:2281701375]> 
                                                          121          1          -    Covered              
            bin <auto[1],auto[2147483648:2214592511]> 
                                                           80          1          -    Covered              
            bin <auto[0],auto[2147483648:2214592511]> 
                                                          115          1          -    Covered              
            bin <auto[1],auto[2080374784:2147483647]> 
                                                           75          1          -    Covered              
            bin <auto[0],auto[2080374784:2147483647]> 
                                                          100          1          -    Covered              
            bin <auto[1],auto[2013265920:2080374783]> 
                                                           65          1          -    Covered              
            bin <auto[0],auto[2013265920:2080374783]> 
                                                          109          1          -    Covered              
            bin <auto[1],auto[1946157056:2013265919]> 
                                                           67          1          -    Covered              
            bin <auto[0],auto[1946157056:2013265919]> 
                                                          102          1          -    Covered              
            bin <auto[1],auto[1879048192:1946157055]> 
                                                           62          1          -    Covered              
            bin <auto[0],auto[1879048192:1946157055]> 
                                                          116          1          -    Covered              
            bin <auto[1],auto[1811939328:1879048191]> 
                                                           72          1          -    Covered              
            bin <auto[0],auto[1811939328:1879048191]> 
                                                           94          1          -    Covered              
            bin <auto[1],auto[1744830464:1811939327]> 
                                                           63          1          -    Covered              
            bin <auto[0],auto[1744830464:1811939327]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[1677721600:1744830463]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[1677721600:1744830463]> 
                                                          120          1          -    Covered              
            bin <auto[1],auto[1610612736:1677721599]> 
                                                           75          1          -    Covered              
            bin <auto[0],auto[1610612736:1677721599]> 
                                                          108          1          -    Covered              
            bin <auto[1],auto[1543503872:1610612735]> 
                                                           81          1          -    Covered              
            bin <auto[0],auto[1543503872:1610612735]> 
                                                           89          1          -    Covered              
            bin <auto[1],auto[1476395008:1543503871]> 
                                                           73          1          -    Covered              
            bin <auto[0],auto[1476395008:1543503871]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[1409286144:1476395007]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[1409286144:1476395007]> 
                                                          116          1          -    Covered              
            bin <auto[1],auto[1342177280:1409286143]> 
                                                           65          1          -    Covered              
            bin <auto[0],auto[1342177280:1409286143]> 
                                                           92          1          -    Covered              
            bin <auto[1],auto[1275068416:1342177279]> 
                                                           67          1          -    Covered              
            bin <auto[0],auto[1275068416:1342177279]> 
                                                          101          1          -    Covered              
            bin <auto[1],auto[1207959552:1275068415]> 
                                                           66          1          -    Covered              
            bin <auto[0],auto[1207959552:1275068415]> 
                                                          104          1          -    Covered              
            bin <auto[1],auto[1140850688:1207959551]> 
                                                           61          1          -    Covered              
            bin <auto[0],auto[1140850688:1207959551]> 
                                                          113          1          -    Covered              
            bin <auto[1],auto[1073741824:1140850687]> 
                                                           79          1          -    Covered              
            bin <auto[0],auto[1073741824:1140850687]> 
                                                           95          1          -    Covered              
            bin <auto[1],auto[1006632960:1073741823]> 
                                                           74          1          -    Covered              
            bin <auto[0],auto[1006632960:1073741823]> 
                                                           78          1          -    Covered              
            bin <auto[1],auto[939524096:1006632959]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[939524096:1006632959]> 
                                                           98          1          -    Covered              
            bin <auto[1],auto[872415232:939524095]> 
                                                           85          1          -    Covered              
            bin <auto[0],auto[872415232:939524095]> 
                                                           90          1          -    Covered              
            bin <auto[1],auto[805306368:872415231]> 
                                                           80          1          -    Covered              
            bin <auto[0],auto[805306368:872415231]> 
                                                           94          1          -    Covered              
            bin <auto[1],auto[738197504:805306367]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[738197504:805306367]> 
                                                          100          1          -    Covered              
            bin <auto[1],auto[671088640:738197503]> 
                                                           67          1          -    Covered              
            bin <auto[0],auto[671088640:738197503]> 
                                                           96          1          -    Covered              
            bin <auto[1],auto[603979776:671088639]> 
                                                           76          1          -    Covered              
            bin <auto[0],auto[603979776:671088639]> 
                                                           84          1          -    Covered              
            bin <auto[1],auto[536870912:603979775]> 
                                                           74          1          -    Covered              
            bin <auto[0],auto[536870912:603979775]> 
                                                          127          1          -    Covered              
            bin <auto[1],auto[469762048:536870911]> 
                                                           70          1          -    Covered              
            bin <auto[0],auto[469762048:536870911]> 
                                                          111          1          -    Covered              
            bin <auto[1],auto[402653184:469762047]> 
                                                           71          1          -    Covered              
            bin <auto[0],auto[402653184:469762047]> 
                                                          122          1          -    Covered              
            bin <auto[1],auto[335544320:402653183]> 
                                                           60          1          -    Covered              
            bin <auto[0],auto[335544320:402653183]> 
                                                          106          1          -    Covered              
            bin <auto[1],auto[268435456:335544319]> 
                                                           64          1          -    Covered              
            bin <auto[0],auto[268435456:335544319]> 
                                                          107          1          -    Covered              
            bin <auto[1],auto[201326592:268435455]> 
                                                           69          1          -    Covered              
            bin <auto[0],auto[201326592:268435455]> 
                                                           92          1          -    Covered              
            bin <auto[1],auto[134217728:201326591]> 
                                                           62          1          -    Covered              
            bin <auto[0],auto[134217728:201326591]> 
                                                          127          1          -    Covered              
            bin <auto[1],auto[67108864:134217727]>         67          1          -    Covered              
            bin <auto[0],auto[67108864:134217727]>        115          1          -    Covered              
            bin <auto[1],auto[0:67108863]>                 66          1          -    Covered              
            bin <auto[0],auto[0:67108863]>                101          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/sonar_sequence_pkg/sonar_send_sequence/body/immed__48
                     sequence.svh(48)                   0          1
/sonar_sequence_pkg/sonar_receive_sequence/body/immed__74
                     sequence.svh(74)                   0          1
/sonar_sequence_pkg/sonar_increase_sequence/body/immed__100
                     sequence.svh(100)                  0          1
/sonar_sequence_pkg/sonar_decrease_sequence/body/immed__126
                     sequence.svh(126)                  0          1
/sonar_sequence_pkg/sonar_rand_all_sequence/body/#ublk#94479959#147/immed__151
                     sequence.svh(151)                  0          1

Total Coverage By Instance (filtered view): 75.81%

